{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/acceptance-tests/sinon.js","dummy/app.js","dummy/components/app-version.js","dummy/components/demos/sl-grid-detail.js","dummy/components/demos/tabs/tab-one.js","dummy/components/property-text.js","dummy/components/sl-alert.js","dummy/components/sl-button.js","dummy/components/sl-calendar-day.js","dummy/components/sl-calendar-month.js","dummy/components/sl-calendar-year.js","dummy/components/sl-calendar.js","dummy/components/sl-chart.js","dummy/components/sl-checkbox.js","dummy/components/sl-date-picker.js","dummy/components/sl-date-range-picker.js","dummy/components/sl-date-time.js","dummy/components/sl-drop-button.js","dummy/components/sl-drop-option.js","dummy/components/sl-grid-cell.js","dummy/components/sl-grid-column-header.js","dummy/components/sl-grid-row.js","dummy/components/sl-grid.js","dummy/components/sl-input.js","dummy/components/sl-loading-icon.js","dummy/components/sl-menu-item-show-all.js","dummy/components/sl-menu-item.js","dummy/components/sl-menu.js","dummy/components/sl-modal-body.js","dummy/components/sl-modal-footer.js","dummy/components/sl-modal-header.js","dummy/components/sl-modal.js","dummy/components/sl-pagination.js","dummy/components/sl-panel.js","dummy/components/sl-progress-bar.js","dummy/components/sl-radio-group.js","dummy/components/sl-radio.js","dummy/components/sl-select.js","dummy/components/sl-span.js","dummy/components/sl-tab-pane.js","dummy/components/sl-tab-panel.js","dummy/components/sl-textarea.js","dummy/components/sl-tooltip.js","dummy/controllers/array.js","dummy/controllers/browsers.js","dummy/controllers/demos/sl-calendar.js","dummy/controllers/demos/sl-chart.js","dummy/controllers/demos/sl-date-time.js","dummy/controllers/demos/sl-drop-button.js","dummy/controllers/demos/sl-grid.js","dummy/controllers/demos/sl-input.js","dummy/controllers/demos/sl-menu.js","dummy/controllers/demos/sl-pagination.js","dummy/controllers/demos/sl-progress-bar.js","dummy/controllers/demos/sl-radio-group.js","dummy/controllers/demos/sl-select.js","dummy/controllers/demos/sl-span.js","dummy/controllers/demos/tabs/home.js","dummy/controllers/object.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/mixins/stream-enabled.js","dummy/router.js","dummy/routes/application.js","dummy/routes/demos/sl-calendar.js","dummy/routes/demos/sl-chart.js","dummy/routes/demos/sl-grid.js","dummy/routes/demos/sl-menu.js","dummy/routes/demos/sl-select.js","dummy/services/stream.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-alert.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-button.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar-day.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar-month.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar-year.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-chart.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-checkbox.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-date-picker.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-date-range-picker.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-date-time.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-drop-button.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-drop-option.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid-cell.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid-column-header.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid-row.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-input.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-loading-icon.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-menu-item-show-all.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-menu-item.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-menu.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal-body.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal-footer.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal-header.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-pagination.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-panel.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-progress-bar.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-radio-group.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-radio.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-select.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-span.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-tab-pane.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-tab-panel.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-textarea.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-tooltip.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-component-input-id.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-input-based.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-namespace.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-tooltip-enabled.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/utils/all.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/utils/containsValue.jshint.js","dummy/sl-ember-components/tests/modules/sl-ember-components/utils/warn.jshint.js","dummy/templates/application.js","dummy/templates/browsers.js","dummy/templates/components/demos/sl-grid-detail-footer.js","dummy/templates/components/demos/sl-grid-detail-header.js","dummy/templates/components/demos/sl-grid-detail.js","dummy/templates/components/demos/tabs/tab-one.js","dummy/templates/components/demos/tabs/tab-two.js","dummy/templates/components/property-text.js","dummy/templates/demos/index.js","dummy/templates/demos/sl-alert.js","dummy/templates/demos/sl-button.js","dummy/templates/demos/sl-calendar.js","dummy/templates/demos/sl-chart.js","dummy/templates/demos/sl-checkbox.js","dummy/templates/demos/sl-date-picker.js","dummy/templates/demos/sl-date-range-picker.js","dummy/templates/demos/sl-date-time.js","dummy/templates/demos/sl-drop-button.js","dummy/templates/demos/sl-grid/detail.js","dummy/templates/demos/sl-grid/footer.js","dummy/templates/demos/sl-grid/header.js","dummy/templates/demos/sl-grid.js","dummy/templates/demos/sl-input.js","dummy/templates/demos/sl-loading-icon.js","dummy/templates/demos/sl-menu.js","dummy/templates/demos/sl-modal.js","dummy/templates/demos/sl-pagination.js","dummy/templates/demos/sl-panel.js","dummy/templates/demos/sl-progress-bar.js","dummy/templates/demos/sl-radio-group.js","dummy/templates/demos/sl-radio.js","dummy/templates/demos/sl-select.js","dummy/templates/demos/sl-span.js","dummy/templates/demos/sl-tab-panel.js","dummy/templates/demos/sl-textarea.js","dummy/templates/demos/sl-tooltip.js","dummy/templates/index.js","dummy/tests/app.jshint.js","dummy/tests/blanket-options.js","dummy/tests/blanket-options.jshint.js","dummy/tests/components/demos/sl-grid-detail.jshint.js","dummy/tests/components/demos/tabs/tab-one.jshint.js","dummy/tests/components/property-text.jshint.js","dummy/tests/controllers/browsers.jshint.js","dummy/tests/controllers/demos/sl-calendar.jshint.js","dummy/tests/controllers/demos/sl-chart.jshint.js","dummy/tests/controllers/demos/sl-date-time.jshint.js","dummy/tests/controllers/demos/sl-drop-button.jshint.js","dummy/tests/controllers/demos/sl-grid.jshint.js","dummy/tests/controllers/demos/sl-input.jshint.js","dummy/tests/controllers/demos/sl-menu.jshint.js","dummy/tests/controllers/demos/sl-pagination.jshint.js","dummy/tests/controllers/demos/sl-progress-bar.jshint.js","dummy/tests/controllers/demos/sl-radio-group.jshint.js","dummy/tests/controllers/demos/sl-select.jshint.js","dummy/tests/controllers/demos/sl-span.jshint.js","dummy/tests/controllers/demos/tabs/home.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/integration/components/sl-alert-test.js","dummy/tests/integration/components/sl-alert-test.jshint.js","dummy/tests/integration/components/sl-button-test.js","dummy/tests/integration/components/sl-button-test.jshint.js","dummy/tests/integration/components/sl-calendar-test.js","dummy/tests/integration/components/sl-calendar-test.jshint.js","dummy/tests/integration/components/sl-chart-test.js","dummy/tests/integration/components/sl-chart-test.jshint.js","dummy/tests/integration/components/sl-checkbox-test.js","dummy/tests/integration/components/sl-checkbox-test.jshint.js","dummy/tests/integration/components/sl-date-picker-test.js","dummy/tests/integration/components/sl-date-picker-test.jshint.js","dummy/tests/integration/components/sl-date-range-picker-test.js","dummy/tests/integration/components/sl-date-range-picker-test.jshint.js","dummy/tests/integration/components/sl-date-time-test.js","dummy/tests/integration/components/sl-date-time-test.jshint.js","dummy/tests/integration/components/sl-drop-button-test.js","dummy/tests/integration/components/sl-drop-button-test.jshint.js","dummy/tests/integration/components/sl-drop-option-test.js","dummy/tests/integration/components/sl-drop-option-test.jshint.js","dummy/tests/integration/components/sl-grid-cell-test.js","dummy/tests/integration/components/sl-grid-cell-test.jshint.js","dummy/tests/integration/components/sl-grid-column-header-test.js","dummy/tests/integration/components/sl-grid-column-header-test.jshint.js","dummy/tests/integration/components/sl-grid-row-test.js","dummy/tests/integration/components/sl-grid-row-test.jshint.js","dummy/tests/integration/components/sl-grid-test.js","dummy/tests/integration/components/sl-grid-test.jshint.js","dummy/tests/integration/components/sl-input-test.js","dummy/tests/integration/components/sl-input-test.jshint.js","dummy/tests/integration/components/sl-loading-icon-test.js","dummy/tests/integration/components/sl-loading-icon-test.jshint.js","dummy/tests/integration/components/sl-menu-item-show-all-test.js","dummy/tests/integration/components/sl-menu-item-show-all-test.jshint.js","dummy/tests/integration/components/sl-menu-item-test.js","dummy/tests/integration/components/sl-menu-item-test.jshint.js","dummy/tests/integration/components/sl-menu-test.js","dummy/tests/integration/components/sl-menu-test.jshint.js","dummy/tests/integration/components/sl-modal-body-test.js","dummy/tests/integration/components/sl-modal-body-test.jshint.js","dummy/tests/integration/components/sl-modal-footer-test.js","dummy/tests/integration/components/sl-modal-footer-test.jshint.js","dummy/tests/integration/components/sl-modal-header-test.js","dummy/tests/integration/components/sl-modal-header-test.jshint.js","dummy/tests/integration/components/sl-modal-test.js","dummy/tests/integration/components/sl-modal-test.jshint.js","dummy/tests/integration/components/sl-pagination-test.js","dummy/tests/integration/components/sl-pagination-test.jshint.js","dummy/tests/integration/components/sl-panel-test.js","dummy/tests/integration/components/sl-panel-test.jshint.js","dummy/tests/integration/components/sl-progress-bar-test.js","dummy/tests/integration/components/sl-progress-bar-test.jshint.js","dummy/tests/integration/components/sl-radio-group-test.js","dummy/tests/integration/components/sl-radio-group-test.jshint.js","dummy/tests/integration/components/sl-radio-test.js","dummy/tests/integration/components/sl-radio-test.jshint.js","dummy/tests/integration/components/sl-span-test.js","dummy/tests/integration/components/sl-span-test.jshint.js","dummy/tests/integration/components/sl-tab-pane-test.js","dummy/tests/integration/components/sl-tab-pane-test.jshint.js","dummy/tests/integration/components/sl-tab-panel-test.js","dummy/tests/integration/components/sl-tab-panel-test.jshint.js","dummy/tests/integration/components/sl-textarea-test.js","dummy/tests/integration/components/sl-textarea-test.jshint.js","dummy/tests/integration/components/sl-tooltip-test.js","dummy/tests/integration/components/sl-tooltip-test.jshint.js","dummy/tests/router.jshint.js","dummy/tests/routes/application.jshint.js","dummy/tests/routes/demos/sl-calendar.jshint.js","dummy/tests/routes/demos/sl-chart.jshint.js","dummy/tests/routes/demos/sl-grid.jshint.js","dummy/tests/routes/demos/sl-menu.jshint.js","dummy/tests/routes/demos/sl-select.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/sl-alert-test.js","dummy/tests/unit/components/sl-alert-test.jshint.js","dummy/tests/unit/components/sl-button-test.js","dummy/tests/unit/components/sl-button-test.jshint.js","dummy/tests/unit/components/sl-calendar-day-test.js","dummy/tests/unit/components/sl-calendar-day-test.jshint.js","dummy/tests/unit/components/sl-calendar-month-test.js","dummy/tests/unit/components/sl-calendar-month-test.jshint.js","dummy/tests/unit/components/sl-calendar-test.js","dummy/tests/unit/components/sl-calendar-test.jshint.js","dummy/tests/unit/components/sl-calendar-year-test.js","dummy/tests/unit/components/sl-calendar-year-test.jshint.js","dummy/tests/unit/components/sl-chart-test.js","dummy/tests/unit/components/sl-chart-test.jshint.js","dummy/tests/unit/components/sl-checkbox-test.js","dummy/tests/unit/components/sl-checkbox-test.jshint.js","dummy/tests/unit/components/sl-date-picker-test.js","dummy/tests/unit/components/sl-date-picker-test.jshint.js","dummy/tests/unit/components/sl-date-range-picker-test.js","dummy/tests/unit/components/sl-date-range-picker-test.jshint.js","dummy/tests/unit/components/sl-date-time-test.js","dummy/tests/unit/components/sl-date-time-test.jshint.js","dummy/tests/unit/components/sl-drop-button-test.js","dummy/tests/unit/components/sl-drop-button-test.jshint.js","dummy/tests/unit/components/sl-drop-option-test.js","dummy/tests/unit/components/sl-drop-option-test.jshint.js","dummy/tests/unit/components/sl-grid-cell-test.js","dummy/tests/unit/components/sl-grid-cell-test.jshint.js","dummy/tests/unit/components/sl-grid-column-header-test.js","dummy/tests/unit/components/sl-grid-column-header-test.jshint.js","dummy/tests/unit/components/sl-grid-row-test.js","dummy/tests/unit/components/sl-grid-row-test.jshint.js","dummy/tests/unit/components/sl-grid-test.js","dummy/tests/unit/components/sl-grid-test.jshint.js","dummy/tests/unit/components/sl-input-test.js","dummy/tests/unit/components/sl-input-test.jshint.js","dummy/tests/unit/components/sl-loading-icon-test.js","dummy/tests/unit/components/sl-loading-icon-test.jshint.js","dummy/tests/unit/components/sl-menu-item-test.js","dummy/tests/unit/components/sl-menu-item-test.jshint.js","dummy/tests/unit/components/sl-menu-test.js","dummy/tests/unit/components/sl-menu-test.jshint.js","dummy/tests/unit/components/sl-modal-footer-test.js","dummy/tests/unit/components/sl-modal-footer-test.jshint.js","dummy/tests/unit/components/sl-modal-test.js","dummy/tests/unit/components/sl-modal-test.jshint.js","dummy/tests/unit/components/sl-pagination-test.js","dummy/tests/unit/components/sl-pagination-test.jshint.js","dummy/tests/unit/components/sl-panel-test.js","dummy/tests/unit/components/sl-panel-test.jshint.js","dummy/tests/unit/components/sl-progress-bar-test.js","dummy/tests/unit/components/sl-progress-bar-test.jshint.js","dummy/tests/unit/components/sl-radio-group-test.js","dummy/tests/unit/components/sl-radio-group-test.jshint.js","dummy/tests/unit/components/sl-radio-test.js","dummy/tests/unit/components/sl-radio-test.jshint.js","dummy/tests/unit/components/sl-span-test.js","dummy/tests/unit/components/sl-span-test.jshint.js","dummy/tests/unit/components/sl-tab-pane-test.js","dummy/tests/unit/components/sl-tab-pane-test.jshint.js","dummy/tests/unit/components/sl-tab-panel-test.js","dummy/tests/unit/components/sl-tab-panel-test.jshint.js","dummy/tests/unit/components/sl-textarea-test.js","dummy/tests/unit/components/sl-textarea-test.jshint.js","dummy/tests/unit/components/sl-tooltip-test.js","dummy/tests/unit/components/sl-tooltip-test.jshint.js","dummy/tests/unit/mixins/sl-component-input-id-test.js","dummy/tests/unit/mixins/sl-component-input-id-test.jshint.js","dummy/tests/unit/mixins/sl-input-based-test.js","dummy/tests/unit/mixins/sl-input-based-test.jshint.js","dummy/tests/unit/mixins/sl-tooltip-enabled-test.js","dummy/tests/unit/mixins/sl-tooltip-enabled-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('dummy/acceptance-tests/sinon', ['exports', 'ember-sinon/acceptance-tests/sinon'], function (exports, sinon) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sinon['default'];\n\n});","define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n    'use strict';\n\n    Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember['default'].Application.extend({\n        modulePrefix: config['default'].modulePrefix,\n        podModulePrefix: config['default'].podModulePrefix,\n        Resolver: Resolver['default']\n    });\n\n    loadInitializers['default'](App, config['default'].modulePrefix);\n\n    exports['default'] = App;\n\n});","define('dummy/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'dummy/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('dummy/components/demos/sl-grid-detail', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend();\n\n});","define('dummy/components/demos/tabs/tab-one', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        inputText: 'One input text',\n\n        text: 'Here is some dynamic content from the \\'demos/tabs/tab-one\\' component.'\n    });\n\n});","define('dummy/components/property-text', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNameBindings: ['required:list-group-item-warning'],\n\n        classNames: ['list-group-item'],\n\n        required: false\n    });\n\n});","define('dummy/components/sl-alert', ['exports', 'sl-ember-components/components/sl-alert'], function (exports, sl_alert) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_alert['default'];\n\n});","define('dummy/components/sl-button', ['exports', 'sl-ember-components/components/sl-button'], function (exports, sl_button) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_button['default'];\n\n});","define('dummy/components/sl-calendar-day', ['exports', 'sl-ember-components/components/sl-calendar-day'], function (exports, sl_calendar_day) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_calendar_day['default'];\n\n});","define('dummy/components/sl-calendar-month', ['exports', 'sl-ember-components/components/sl-calendar-month'], function (exports, sl_calendar_month) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_calendar_month['default'];\n\n});","define('dummy/components/sl-calendar-year', ['exports', 'sl-ember-components/components/sl-calendar-year'], function (exports, sl_calendar_year) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_calendar_year['default'];\n\n});","define('dummy/components/sl-calendar', ['exports', 'sl-ember-components/components/sl-calendar'], function (exports, sl_calendar) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_calendar['default'];\n\n});","define('dummy/components/sl-chart', ['exports', 'sl-ember-components/components/sl-chart'], function (exports, sl_chart) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_chart['default'];\n\n});","define('dummy/components/sl-checkbox', ['exports', 'sl-ember-components/components/sl-checkbox'], function (exports, sl_checkbox) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_checkbox['default'];\n\n});","define('dummy/components/sl-date-picker', ['exports', 'sl-ember-components/components/sl-date-picker'], function (exports, sl_date_picker) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_date_picker['default'];\n\n});","define('dummy/components/sl-date-range-picker', ['exports', 'sl-ember-components/components/sl-date-range-picker'], function (exports, sl_date_range_picker) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_date_range_picker['default'];\n\n});","define('dummy/components/sl-date-time', ['exports', 'sl-ember-components/components/sl-date-time'], function (exports, sl_date_time) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_date_time['default'];\n\n});","define('dummy/components/sl-drop-button', ['exports', 'sl-ember-components/components/sl-drop-button'], function (exports, sl_drop_button) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_drop_button['default'];\n\n});","define('dummy/components/sl-drop-option', ['exports', 'sl-ember-components/components/sl-drop-option'], function (exports, sl_drop_option) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_drop_option['default'];\n\n});","define('dummy/components/sl-grid-cell', ['exports', 'sl-ember-components/components/sl-grid-cell'], function (exports, sl_grid_cell) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_grid_cell['default'];\n\n});","define('dummy/components/sl-grid-column-header', ['exports', 'sl-ember-components/components/sl-grid-column-header'], function (exports, sl_grid_column_header) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_grid_column_header['default'];\n\n});","define('dummy/components/sl-grid-row', ['exports', 'sl-ember-components/components/sl-grid-row'], function (exports, sl_grid_row) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_grid_row['default'];\n\n});","define('dummy/components/sl-grid', ['exports', 'sl-ember-components/components/sl-grid'], function (exports, sl_grid) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_grid['default'];\n\n});","define('dummy/components/sl-input', ['exports', 'sl-ember-components/components/sl-input'], function (exports, sl_input) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_input['default'];\n\n});","define('dummy/components/sl-loading-icon', ['exports', 'sl-ember-components/components/sl-loading-icon'], function (exports, sl_loading_icon) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_loading_icon['default'];\n\n});","define('dummy/components/sl-menu-item-show-all', ['exports', 'sl-ember-components/components/sl-menu-item-show-all'], function (exports, sl_menu_item_show_all) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_menu_item_show_all['default'];\n\n});","define('dummy/components/sl-menu-item', ['exports', 'sl-ember-components/components/sl-menu-item'], function (exports, sl_menu_item) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_menu_item['default'];\n\n});","define('dummy/components/sl-menu', ['exports', 'sl-ember-components/components/sl-menu'], function (exports, sl_menu) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_menu['default'];\n\n});","define('dummy/components/sl-modal-body', ['exports', 'sl-ember-components/components/sl-modal-body'], function (exports, sl_modal_body) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_modal_body['default'];\n\n});","define('dummy/components/sl-modal-footer', ['exports', 'sl-ember-components/components/sl-modal-footer'], function (exports, sl_modal_footer) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_modal_footer['default'];\n\n});","define('dummy/components/sl-modal-header', ['exports', 'sl-ember-components/components/sl-modal-header'], function (exports, sl_modal_header) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_modal_header['default'];\n\n});","define('dummy/components/sl-modal', ['exports', 'sl-ember-components/components/sl-modal'], function (exports, SLModal) {\n\n\t'use strict';\n\n\texports['default'] = SLModal['default'];\n\n});","define('dummy/components/sl-pagination', ['exports', 'sl-ember-components/components/sl-pagination'], function (exports, sl_pagination) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_pagination['default'];\n\n});","define('dummy/components/sl-panel', ['exports', 'sl-ember-components/components/sl-panel'], function (exports, sl_panel) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_panel['default'];\n\n});","define('dummy/components/sl-progress-bar', ['exports', 'sl-ember-components/components/sl-progress-bar'], function (exports, sl_progress_bar) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_progress_bar['default'];\n\n});","define('dummy/components/sl-radio-group', ['exports', 'sl-ember-components/components/sl-radio-group'], function (exports, sl_radio_group) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_radio_group['default'];\n\n});","define('dummy/components/sl-radio', ['exports', 'sl-ember-components/components/sl-radio'], function (exports, sl_radio) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_radio['default'];\n\n});","define('dummy/components/sl-select', ['exports', 'sl-ember-components/components/sl-select'], function (exports, sl_select) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_select['default'];\n\n});","define('dummy/components/sl-span', ['exports', 'sl-ember-components/components/sl-span'], function (exports, sl_span) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_span['default'];\n\n});","define('dummy/components/sl-tab-pane', ['exports', 'sl-ember-components/components/sl-tab-pane'], function (exports, sl_tab_pane) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_tab_pane['default'];\n\n});","define('dummy/components/sl-tab-panel', ['exports', 'sl-ember-components/components/sl-tab-panel'], function (exports, sl_tab_panel) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_tab_panel['default'];\n\n});","define('dummy/components/sl-textarea', ['exports', 'sl-ember-components/components/sl-textarea'], function (exports, sl_textarea) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_textarea['default'];\n\n});","define('dummy/components/sl-tooltip', ['exports', 'sl-ember-components/components/sl-tooltip'], function (exports, sl_tooltip) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sl_tooltip['default'];\n\n});","define('dummy/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('dummy/controllers/browsers', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        components: Ember['default'].A([{\n            name: 'alert',\n            lib: { 'twb': true }\n        }, {\n            name: 'button',\n            lib: { 'twb': true }\n        }, {\n            name: 'calendar',\n            lib: { 'sec': true }\n        }, {\n            name: 'chart',\n            lib: { 'hc': true }\n        }, {\n            name: 'checkbox',\n            lib: { 'twb': true }\n        }, {\n            name: 'date-picker',\n            lib: { 'bd': true }\n        }, {\n            name: 'date-range-picker',\n            lib: { 'bd': true }\n        }, {\n            name: 'date-time',\n            lib: { 'sec': true }\n        }, {\n            name: 'drop-button',\n            lib: { 'twb': true }\n        }, {\n            name: 'drop-option',\n            lib: { 'twb': true }\n        }, {\n            name: 'grid',\n            lib: { 'sec': true }\n        }, {\n            name: 'input',\n            lib: { 'twb': true, 'ta': true }\n        }, {\n            name: 'loading-icon',\n            lib: { 'sec': true }\n        }, {\n            name: 'menu',\n            lib: { 'sec': true }\n        }, {\n            name: 'modal',\n            lib: { 'twb': true }\n        }, {\n            name: 'pagination',\n            lib: { 'sec': true }\n        }, {\n            name: 'panel',\n            lib: { 'twb': true }\n        }, {\n            name: 'progress-bar',\n            lib: { 'twb': true }\n        }, {\n            name: 'radio',\n            lib: { 'sec': true }\n        }, {\n            name: 'radio-group',\n            lib: { 'twb': true }\n        }, {\n            name: 'select',\n            lib: { 's2': true }\n        }, {\n            name: 'span',\n            lib: { 'sec': true }\n        }, {\n            name: 'tab-pane',\n            lib: { 'twb': true }\n        }, {\n            name: 'tab-panel',\n            lib: { 'twb': true }\n        }, {\n            name: 'textarea',\n            lib: { 'sec': true }\n        }, {\n            name: 'tooltip',\n            lib: { 'twb': true }\n        }])\n    });\n\n});","define('dummy/controllers/demos/sl-calendar', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        actions: {\n            logLabel: function logLabel(dateObjects) {\n                window.console.log(dateObjects);\n            }\n        }\n    });\n\n});","define('dummy/controllers/demos/sl-chart', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        actions: {\n            logOptions: function logOptions() {\n                window.console.log('Chart options:', this.get('chartOptions'));\n            },\n\n            logSeries: function logSeries() {\n                window.console.log('Content:', this.get('content'));\n            }\n        },\n\n        chartOptions: {\n            chart: {\n                type: 'bar'\n            },\n\n            xAxis: {\n                categories: ['Apples', 'Bananas', 'Oranges']\n            },\n\n            yAxis: {\n                title: {\n                    text: 'Fruit Eaten'\n                }\n            }\n        }\n    });\n\n});","define('dummy/controllers/demos/sl-date-time', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        firstDayDate: Ember['default'].computed(function () {\n            return window.moment().dayOfYear(1);\n        }),\n\n        threeMonthsAgoDate: Ember['default'].computed(function () {\n            var now = window.moment();\n\n            return window.moment().month(now.month() - 3);\n        })\n    });\n\n});","define('dummy/controllers/demos/sl-drop-button', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        actions: {\n            logRed: function logRed() {\n                window.console.log('Red!');\n            },\n\n            logGreen: function logGreen() {\n                window.console.log('Green!');\n            },\n\n            logBlue: function logBlue() {\n                window.console.log('Blue!');\n            },\n\n            logWhite: function logWhite() {\n                window.console.log('White!');\n            }\n        }\n    });\n\n});","define('dummy/controllers/demos/sl-grid', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        sortProperties: ['fruit'],\n        sortedModel: Ember['default'].computed.sort('model', 'sortProperties'),\n\n        actions: {\n            rowClick: function rowClick(row) {\n                window.console.log('Clicked', row);\n            },\n\n            logName: function logName(row) {\n                window.console.log('Record:', Ember['default'].get(row, 'name'));\n            },\n\n            sortColumn: function sortColumn(column, sortAscending) {\n                var columnString = column['valuePath'];\n\n                if (!sortAscending) {\n                    columnString = columnString + ':desc';\n                }\n\n                this.set('sortProperties', [columnString]);\n            }\n        },\n\n        columns: Ember['default'].A([{\n            primary: true,\n            size: 'small',\n            title: 'Color',\n            valuePath: 'name'\n        }, {\n            size: 'small',\n            sortable: true,\n            title: 'Fruit',\n            valuePath: 'fruit'\n        }, {\n            size: 'small',\n            sortable: true,\n            title: 'Hex Code',\n            valuePath: 'hexCode'\n        }]),\n\n        rowActions: [{\n            label: 'Log',\n            action: 'sendLog'\n        }],\n\n        totalCount: 6\n    });\n\n});","define('dummy/controllers/demos/sl-input', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        colors: [{ id: 'Black' }, { id: 'Blue' }, { id: 'Gray' }, { id: 'Green' }, { id: 'Orange' }, { id: 'Purple' }, { id: 'Red' }, { id: 'White' }, { id: 'Yellow' }],\n\n        names: ['Jeff', 'Michael', 'Jeremy']\n    });\n\n});","define('dummy/controllers/demos/sl-menu', ['exports', 'ember', 'ember-stream/mixins/stream-enabled'], function (exports, Ember, StreamEnabled) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend(StreamEnabled['default'], {\n        actions: {\n            doSomething: function doSomething(actionName, data) {\n                console.log('Doing', actionName, data);\n            }\n        },\n\n        initialize: Ember['default'].on('init', function () {\n            var streamService = this.get('streamService');\n            var menuStreamName = this.get('menuStreamName');\n\n            var lastPressedKey = undefined;\n            window.addEventListener('keydown', function (event) {\n                switch (event.keyCode) {\n                    case 9:\n                        // Tab key\n                        streamService.send(menuStreamName, event.shiftKey ? 'selectPrevious' : 'selectNext');\n                        event.preventDefault();\n                        break;\n\n                    case 13:\n                        // Enter key\n                        streamService.send(menuStreamName, 'doAction');\n                        break;\n\n                    case 27:\n                        // Escape key\n                        streamService.send(menuStreamName, 'hideAll');\n                        break;\n\n                    case 37:\n                        // Left arrow key\n                        streamService.send(menuStreamName, 'selectLeft');\n                        event.preventDefault();\n                        break;\n\n                    case 38:\n                        // Up arrow key\n                        streamService.send(menuStreamName, 'selectUp');\n                        event.preventDefault();\n                        break;\n\n                    case 39:\n                        // Right arrow key\n                        streamService.send(menuStreamName, 'selectRight');\n                        event.preventDefault();\n                        break;\n\n                    case 40:\n                        // Down arrow key\n                        streamService.send(menuStreamName, 'selectDown');\n                        event.preventDefault();\n                        break;\n\n                    case 48:\n                        // 0 key\n                        streamService.send(menuStreamName, 'showAll');\n                        break;\n\n                    case 49: // 1 key\n                    case 50: // 2 key\n                    case 51: // 3 key\n                    case 52: // 4 key\n                    case 53: // 5 key\n                    case 54: // 6 key\n                    case 55: // 7 key\n                    case 56: // 8 key\n                    case 57:\n                        // 9 key\n                        streamService.send(menuStreamName, 'select', event.keyCode - 49);\n                        break;\n\n                    case 189:\n                        // - key\n                        if (189 !== lastPressedKey) {\n                            streamService.send(menuStreamName, 'selectSubMenu');\n                        }\n                        break;\n                }\n\n                lastPressedKey = event.keyCode;\n            });\n        }),\n\n        menuItems: Ember['default'].A([{\n            label: 'Main One',\n            items: [{\n                label: 'Sub 1',\n                action: 'say',\n                data: '\"hello\"'\n            }, {\n                label: 'Sub 2',\n                items: [{ label: 'Sub 1 - 1' }, { label: 'Sub 1 - 2' }]\n            }]\n        }, { label: 'Main Two' }, { label: 'Main Three' }]),\n\n        menuStreamName: 'demoMenu'\n\n    });\n\n});","define('dummy/controllers/demos/sl-pagination', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        actions: {\n            changePage: function changePage(pageNumber) {\n                window.console.log('Page changed to', pageNumber);\n            }\n        }\n    });\n\n});","define('dummy/controllers/demos/sl-progress-bar', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        dynamicValue: 42\n    });\n\n});","define('dummy/controllers/demos/sl-radio-group', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        currentColor: 'blue'\n    });\n\n});","define('dummy/controllers/demos/sl-select', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        numbers: [10, 20, 30, 40, 50, 60, 70, 80, 90]\n    });\n\n});","define('dummy/controllers/demos/sl-span', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        initialize: Ember['default'].on('init', function () {\n            var _this = this;\n\n            setTimeout(function () {\n                _this.set('isLoading', false);\n            }, 5000);\n        }),\n\n        isLoading: true\n    });\n\n});","define('dummy/controllers/demos/tabs/home', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        testValue: 'Hello'\n    });\n\n});","define('dummy/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('dummy/mixins/stream-enabled', ['exports', 'ember-stream/mixins/stream-enabled'], function (exports, stream_enabled) {\n\n\t'use strict';\n\n\n\n\texports['default'] = stream_enabled['default'];\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType,\n\n        scrollToTopAfterRouteTransition: Ember['default'].observer('url', function () {\n            window.scrollTo(0, 0);\n        })\n    });\n\n    Router.map(function () {\n        this.route('index', { path: '/' });\n        this.route('browsers');\n\n        this.route('demos', function () {\n            this.route('sl-alert');\n            this.route('sl-modal');\n            this.route('sl-button');\n            this.route('sl-calendar');\n            this.route('sl-chart');\n            this.route('sl-checkbox');\n            this.route('sl-date-picker');\n            this.route('sl-date-range-picker');\n            this.route('sl-date-time');\n            this.route('sl-drop-button');\n            this.route('sl-input');\n            this.route('sl-grid');\n            this.route('sl-loading-icon');\n            this.route('sl-menu');\n            this.route('sl-pagination');\n            this.route('sl-panel');\n            this.route('sl-progress-bar');\n            this.route('sl-radio');\n            this.route('sl-radio-group');\n            this.route('sl-select');\n            this.route('sl-span');\n            this.route('sl-tab-panel');\n            this.route('sl-textarea');\n            this.route('sl-tooltip');\n\n            this.route('services', function () {\n                this.route('sl-modal');\n            });\n        });\n    });\n\n    exports['default'] = Router;\n\n});","define('dummy/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend();\n\n});","define('dummy/routes/demos/sl-calendar', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model() {\n            return Ember['default'].A([{\n                date: new Date(),\n                label: 'Today!'\n            }]);\n        }\n    });\n\n});","define('dummy/routes/demos/sl-chart', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model() {\n            return Ember['default'].A([{\n                name: 'Jane',\n                data: [1, 0, 4]\n            }, {\n                name: 'John',\n                data: [5, 7, 3]\n            }]);\n        }\n    });\n\n});","define('dummy/routes/demos/sl-grid', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model() {\n            return Ember['default'].A([{\n                name: 'Red',\n                fruit: 'Apple',\n                hexCode: '#FF0000'\n            }, {\n                name: 'Orange',\n                fruit: 'Orange',\n                hexCode: '#FF7700'\n            }, {\n                name: 'Yellow',\n                fruit: 'Banana',\n                hexCode: '#FFFF00'\n            }, {\n                name: 'Green',\n                fruit: 'Lime',\n                hexCode: '#00FF00'\n            }, {\n                name: 'Blue',\n                fruit: 'Blueberry',\n                hexCode: '#0000FF'\n            }, {\n                name: 'Purple',\n                fruit: 'Grape',\n                hexCode: '#FF00FF'\n            }]);\n        }\n    });\n\n});","define('dummy/routes/demos/sl-menu', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function model() {\n            return {\n                label: null,\n                pages: [{\n                    label: 'Colors',\n                    pages: [{\n                        label: 'Red',\n                        action: function action() {\n                            window.console.log('The color RED');\n                        }\n                    }, {\n                        label: 'Green',\n                        action: function action() {\n                            window.console.log('The color GREEN');\n                        }\n                    }, {\n                        label: 'Blue',\n                        action: function action() {\n                            window.console.log('The color BLUE');\n                        }\n                    }]\n                }, {\n                    label: 'Numbers',\n                    pages: [{\n                        label: '1-5',\n                        pages: [{\n                            label: '1',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '1'\n                            }\n                        }, {\n                            label: '2',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '2'\n                            }\n                        }, {\n                            label: '3',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '3'\n                            }\n                        }, {\n                            label: '4',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '4'\n                            }\n                        }, {\n                            label: '5',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '5'\n                            }\n                        }]\n                    }, {\n                        label: '6-10',\n                        pages: [{\n                            label: '6',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '6'\n                            }\n                        }, {\n                            label: '7',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '7'\n                            }\n                        }, {\n                            label: '8',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '8'\n                            }\n                        }, {\n                            label: '9',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '9'\n                            }\n                        }, {\n                            label: '10',\n                            action: {\n                                actionName: 'number clicked',\n                                data: '10'\n                            }\n                        }]\n                    }]\n                }, {\n                    label: 'Cities',\n                    pages: [{\n                        label: 'Texas',\n                        pages: [{ label: 'Dallas' }, { label: 'Houston' }, { label: 'San Antonio' }, { label: 'Austin' }]\n                    }, {\n                        label: 'Oklahoma',\n                        pages: [{ label: 'Oklahoma City' }, { label: 'Norman' }]\n                    }, {\n                        label: 'California',\n                        pages: [{ label: 'Los Angeles' }, { label: 'San Francisco' }, { label: 'Palo Alto' }]\n                    }]\n                }, {\n                    label: 'Routes',\n                    pages: [{ label: 'Checkbox', route: 'sl-checkbox' }, { label: 'Button', route: 'sl-button' }, { label: 'Calendar', route: 'sl-calendar' }, { label: 'Alert', route: 'sl-alert' }]\n                }]\n            };\n        }\n    });\n\n});","define('dummy/routes/demos/sl-select', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model() {\n            return Ember['default'].A([{\n                label: 'Red',\n                description: 'Apples',\n                value: 'red'\n            }, {\n                label: 'Orange',\n                description: 'Oranges',\n                value: 'orange'\n            }, {\n                label: 'Yellow',\n                description: 'Bananas',\n                value: 'yellow'\n            }, {\n                label: 'Green',\n                description: 'Avocados',\n                value: 'green'\n            }, {\n                label: 'Purple',\n                description: 'Blueberries',\n                value: 'purple'\n            }, {\n                label: 'Splorge',\n                description: '???',\n                value: 'splorge'\n            }]);\n        }\n    });\n\n});","define('dummy/services/stream', ['exports', 'ember-stream/services/stream'], function (exports, stream) {\n\n\t'use strict';\n\n\n\n\texports['default'] = stream['default'];\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-alert.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-alert.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-alert.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-button.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-button.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-button.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar-day.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-calendar-day.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-calendar-day.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar-month.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-calendar-month.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-calendar-month.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar-year.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-calendar-year.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-calendar-year.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-calendar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-calendar.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-calendar.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-chart.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-chart.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-chart.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-checkbox.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-checkbox.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-checkbox.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-date-picker.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-date-picker.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-date-picker.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-date-range-picker.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-date-range-picker.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-date-range-picker.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-date-time.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-date-time.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-date-time.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-drop-button.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-drop-button.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-drop-button.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-drop-option.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-drop-option.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-drop-option.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid-cell.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-grid-cell.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-grid-cell.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid-column-header.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-grid-column-header.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-grid-column-header.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid-row.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-grid-row.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-grid-row.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-grid.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-grid.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-grid.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-input.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-input.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-input.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-loading-icon.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-loading-icon.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-loading-icon.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-menu-item-show-all.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-menu-item-show-all.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-menu-item-show-all.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-menu-item.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-menu-item.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-menu-item.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-menu.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-menu.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-menu.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal-body.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-modal-body.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-modal-body.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal-footer.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-modal-footer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-modal-footer.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal-header.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-modal-header.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-modal-header.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-modal.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-modal.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-modal.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-pagination.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-pagination.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-pagination.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-panel.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-panel.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-panel.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-progress-bar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-progress-bar.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-progress-bar.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-radio-group.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-radio-group.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-radio-group.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-radio.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-radio.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-radio.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-select.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-select.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-select.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-span.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-span.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-span.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-tab-pane.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-tab-pane.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-tab-pane.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-tab-panel.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-tab-panel.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-tab-panel.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-textarea.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-textarea.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-textarea.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/components/sl-tooltip.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/components');\n  QUnit.test('modules/sl-ember-components/components/sl-tooltip.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/components/sl-tooltip.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-component-input-id.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/mixins');\n  QUnit.test('modules/sl-ember-components/mixins/sl-component-input-id.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/mixins/sl-component-input-id.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-input-based.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/mixins');\n  QUnit.test('modules/sl-ember-components/mixins/sl-input-based.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/mixins/sl-input-based.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-namespace.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/mixins');\n  QUnit.test('modules/sl-ember-components/mixins/sl-namespace.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/mixins/sl-namespace.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/mixins/sl-tooltip-enabled.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/mixins');\n  QUnit.test('modules/sl-ember-components/mixins/sl-tooltip-enabled.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/mixins/sl-tooltip-enabled.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/utils/all.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/utils');\n  QUnit.test('modules/sl-ember-components/utils/all.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/utils/all.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/utils/containsValue.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/utils');\n  QUnit.test('modules/sl-ember-components/utils/containsValue.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/utils/containsValue.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-components/tests/modules/sl-ember-components/utils/warn.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-components/utils');\n  QUnit.test('modules/sl-ember-components/utils/warn.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/sl-ember-components/utils/warn.js should pass jshint.');\n  });\n\n});","define('dummy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 14,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 17,\n              \"column\": 20\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-home\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                        Home\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 20,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 23,\n              \"column\": 20\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-cubes\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                        Demo\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 32,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 20\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-plug\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                        Supported Browsers\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 57,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 57,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-alert\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 60,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 60,\n              \"column\": 59\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 63,\n              \"column\": 63\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-calendar\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 66,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 66,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-chart\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 69,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 63\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-checkbox\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 72,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 72,\n              \"column\": 69\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-date-picker\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 75,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 20\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        sl-date-range-picker\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 80,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 80,\n              \"column\": 65\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-date-time\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 83,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 83,\n              \"column\": 69\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-drop-button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 86,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 86,\n              \"column\": 55\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-grid\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 89,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 89,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-input\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 92,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 94,\n              \"column\": 20\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        sl-loading-icon\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 97,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 97,\n              \"column\": 55\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-menu\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 100,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 100,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-modal\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 103,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 103,\n              \"column\": 67\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-pagination\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child18 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 106,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 106,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-panel\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child19 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 109,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 111,\n              \"column\": 20\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        sl-progress-bar\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child20 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 114,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 114,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-radio\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child21 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 117,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 117,\n              \"column\": 69\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-radio-group\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child22 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 120,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 120,\n              \"column\": 59\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-select\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child23 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 123,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 123,\n              \"column\": 55\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-span\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child24 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 126,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 126,\n              \"column\": 65\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-tab-panel\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child25 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 129,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 129,\n              \"column\": 63\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-textarea\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child26 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 132,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 132,\n              \"column\": 61\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-tooltip\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 149,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"btn-group pull-right\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default dropdown-toggle\");\n        dom.setAttribute(el5,\"data-toggle\",\"dropdown\");\n        dom.setAttribute(el5,\"aria-expanded\",\"false\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"i\");\n        dom.setAttribute(el6,\"class\",\"fa fa-reorder\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\" \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"span\");\n        dom.setAttribute(el6,\"class\",\"caret\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        dom.setAttribute(el5,\"class\",\"dropdown-menu\");\n        dom.setAttribute(el5,\"role\",\"menu\");\n        var el6 = dom.createTextNode(\"\\n\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"http://softlayer.github.io/sl-ember-components/docs\");\n        dom.setAttribute(el7,\"target\",\"new\");\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-book\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        Documentation\\n                    \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"https://github.com/softlayer/sl-ember-components/blob/master/CONTRIBUTING.md\");\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-cog\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        Contribution Guide\\n                    \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"https://github.com/softlayer/sl-ember-components/stargazers\");\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-star\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        Star Our Repo\\n                    \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"https://github.com/softlayer/sl-ember-components/fork\");\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-code-fork\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        Fork Our Repo\\n                    \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"class\",\"divider\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        dom.setAttribute(el6,\"role\",\"presentation\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12 text-center\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"ember install sl-ember-components\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"a\");\n        dom.setAttribute(el5,\"href\",\"https://github.com/softlayer/sl-ember-components/blob/master/LICENSE.md\");\n        var el6 = dom.createTextNode(\"MIT Licensed\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [1, 1, 1, 3]);\n        var morphs = new Array(28);\n        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]),1,1);\n        morphs[2] = dom.createMorphAt(dom.childAt(element1, [7]),1,1);\n        morphs[3] = dom.createMorphAt(dom.childAt(element1, [17]),1,1);\n        morphs[4] = dom.createMorphAt(dom.childAt(element1, [19]),1,1);\n        morphs[5] = dom.createMorphAt(dom.childAt(element1, [21]),1,1);\n        morphs[6] = dom.createMorphAt(dom.childAt(element1, [23]),1,1);\n        morphs[7] = dom.createMorphAt(dom.childAt(element1, [25]),1,1);\n        morphs[8] = dom.createMorphAt(dom.childAt(element1, [27]),1,1);\n        morphs[9] = dom.createMorphAt(dom.childAt(element1, [29]),1,1);\n        morphs[10] = dom.createMorphAt(dom.childAt(element1, [31]),1,1);\n        morphs[11] = dom.createMorphAt(dom.childAt(element1, [33]),1,1);\n        morphs[12] = dom.createMorphAt(dom.childAt(element1, [35]),1,1);\n        morphs[13] = dom.createMorphAt(dom.childAt(element1, [37]),1,1);\n        morphs[14] = dom.createMorphAt(dom.childAt(element1, [39]),1,1);\n        morphs[15] = dom.createMorphAt(dom.childAt(element1, [41]),1,1);\n        morphs[16] = dom.createMorphAt(dom.childAt(element1, [43]),1,1);\n        morphs[17] = dom.createMorphAt(dom.childAt(element1, [45]),1,1);\n        morphs[18] = dom.createMorphAt(dom.childAt(element1, [47]),1,1);\n        morphs[19] = dom.createMorphAt(dom.childAt(element1, [49]),1,1);\n        morphs[20] = dom.createMorphAt(dom.childAt(element1, [51]),1,1);\n        morphs[21] = dom.createMorphAt(dom.childAt(element1, [53]),1,1);\n        morphs[22] = dom.createMorphAt(dom.childAt(element1, [55]),1,1);\n        morphs[23] = dom.createMorphAt(dom.childAt(element1, [57]),1,1);\n        morphs[24] = dom.createMorphAt(dom.childAt(element1, [59]),1,1);\n        morphs[25] = dom.createMorphAt(dom.childAt(element1, [61]),1,1);\n        morphs[26] = dom.createMorphAt(dom.childAt(element1, [63]),1,1);\n        morphs[27] = dom.createMorphAt(element0,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"index\"],[],0,null,[\"loc\",[null,[14,20],[17,32]]]],\n        [\"block\",\"link-to\",[\"demos\"],[],1,null,[\"loc\",[null,[20,20],[23,32]]]],\n        [\"block\",\"link-to\",[\"browsers\"],[],2,null,[\"loc\",[null,[32,20],[35,32]]]],\n        [\"block\",\"link-to\",[\"demos.sl-alert\"],[],3,null,[\"loc\",[null,[57,20],[57,69]]]],\n        [\"block\",\"link-to\",[\"demos.sl-button\"],[],4,null,[\"loc\",[null,[60,20],[60,71]]]],\n        [\"block\",\"link-to\",[\"demos.sl-calendar\"],[],5,null,[\"loc\",[null,[63,20],[63,75]]]],\n        [\"block\",\"link-to\",[\"demos.sl-chart\"],[],6,null,[\"loc\",[null,[66,20],[66,69]]]],\n        [\"block\",\"link-to\",[\"demos.sl-checkbox\"],[],7,null,[\"loc\",[null,[69,20],[69,75]]]],\n        [\"block\",\"link-to\",[\"demos.sl-date-picker\"],[],8,null,[\"loc\",[null,[72,20],[72,81]]]],\n        [\"block\",\"link-to\",[\"demos.sl-date-range-picker\"],[],9,null,[\"loc\",[null,[75,20],[77,32]]]],\n        [\"block\",\"link-to\",[\"demos.sl-date-time\"],[],10,null,[\"loc\",[null,[80,20],[80,77]]]],\n        [\"block\",\"link-to\",[\"demos.sl-drop-button\"],[],11,null,[\"loc\",[null,[83,20],[83,81]]]],\n        [\"block\",\"link-to\",[\"demos.sl-grid\"],[],12,null,[\"loc\",[null,[86,20],[86,67]]]],\n        [\"block\",\"link-to\",[\"demos.sl-input\"],[],13,null,[\"loc\",[null,[89,20],[89,69]]]],\n        [\"block\",\"link-to\",[\"demos.sl-loading-icon\"],[],14,null,[\"loc\",[null,[92,20],[94,32]]]],\n        [\"block\",\"link-to\",[\"demos.sl-menu\"],[],15,null,[\"loc\",[null,[97,20],[97,67]]]],\n        [\"block\",\"link-to\",[\"demos.sl-modal\"],[],16,null,[\"loc\",[null,[100,20],[100,69]]]],\n        [\"block\",\"link-to\",[\"demos.sl-pagination\"],[],17,null,[\"loc\",[null,[103,20],[103,79]]]],\n        [\"block\",\"link-to\",[\"demos.sl-panel\"],[],18,null,[\"loc\",[null,[106,20],[106,69]]]],\n        [\"block\",\"link-to\",[\"demos.sl-progress-bar\"],[],19,null,[\"loc\",[null,[109,20],[111,32]]]],\n        [\"block\",\"link-to\",[\"demos.sl-radio\"],[],20,null,[\"loc\",[null,[114,20],[114,69]]]],\n        [\"block\",\"link-to\",[\"demos.sl-radio-group\"],[],21,null,[\"loc\",[null,[117,20],[117,81]]]],\n        [\"block\",\"link-to\",[\"demos.sl-select\"],[],22,null,[\"loc\",[null,[120,20],[120,71]]]],\n        [\"block\",\"link-to\",[\"demos.sl-span\"],[],23,null,[\"loc\",[null,[123,20],[123,67]]]],\n        [\"block\",\"link-to\",[\"demos.sl-tab-panel\"],[],24,null,[\"loc\",[null,[126,20],[126,77]]]],\n        [\"block\",\"link-to\",[\"demos.sl-textarea\"],[],25,null,[\"loc\",[null,[129,20],[129,75]]]],\n        [\"block\",\"link-to\",[\"demos.sl-tooltip\"],[],26,null,[\"loc\",[null,[132,20],[132,73]]]],\n        [\"content\",\"outlet\",[\"loc\",[null,[139,4],[139,14]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17, child18, child19, child20, child21, child22, child23, child24, child25, child26]\n    };\n  }()));\n\n});","define('dummy/templates/browsers', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 49\n            },\n            \"end\": {\n              \"line\": 67,\n              \"column\": 93\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"TWB\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 68,\n              \"column\": 49\n            },\n            \"end\": {\n              \"line\": 68,\n              \"column\": 95\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"SEC\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 69,\n              \"column\": 49\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 85\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"HC\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 70,\n              \"column\": 49\n            },\n            \"end\": {\n              \"line\": 70,\n              \"column\": 95\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"BD\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 71,\n              \"column\": 49\n            },\n            \"end\": {\n              \"line\": 71,\n              \"column\": 87\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"TA\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 72,\n              \"column\": 49\n            },\n            \"end\": {\n              \"line\": 72,\n              \"column\": 82\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"S2\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 80,\n                \"column\": 24\n              },\n              \"end\": {\n                \"line\": 80,\n                \"column\": 89\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-check text-success\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 80,\n                \"column\": 89\n              },\n              \"end\": {\n                \"line\": 80,\n                \"column\": 136\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"text-muted\");\n            var el2 = dom.createTextNode(\"—\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child2 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 83,\n                \"column\": 24\n              },\n              \"end\": {\n                \"line\": 83,\n                \"column\": 89\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-check text-success\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child3 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 83,\n                \"column\": 89\n              },\n              \"end\": {\n                \"line\": 83,\n                \"column\": 136\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"text-muted\");\n            var el2 = dom.createTextNode(\"—\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child4 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 86,\n                \"column\": 24\n              },\n              \"end\": {\n                \"line\": 86,\n                \"column\": 88\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-check text-success\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child5 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 86,\n                \"column\": 88\n              },\n              \"end\": {\n                \"line\": 86,\n                \"column\": 135\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"text-muted\");\n            var el2 = dom.createTextNode(\"—\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child6 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 89,\n                \"column\": 24\n              },\n              \"end\": {\n                \"line\": 89,\n                \"column\": 88\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-check text-success\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child7 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 89,\n                \"column\": 88\n              },\n              \"end\": {\n                \"line\": 89,\n                \"column\": 135\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"text-muted\");\n            var el2 = dom.createTextNode(\"—\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child8 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 92,\n                \"column\": 24\n              },\n              \"end\": {\n                \"line\": 92,\n                \"column\": 88\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-check text-success\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child9 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 92,\n                \"column\": 88\n              },\n              \"end\": {\n                \"line\": 92,\n                \"column\": 135\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"text-muted\");\n            var el2 = dom.createTextNode(\"—\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child10 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 95,\n                \"column\": 24\n              },\n              \"end\": {\n                \"line\": 95,\n                \"column\": 88\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-check text-success\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child11 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 95,\n                \"column\": 88\n              },\n              \"end\": {\n                \"line\": 95,\n                \"column\": 135\n              }\n            },\n            \"moduleName\": \"dummy/templates/browsers.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"text-muted\");\n            var el2 = dom.createTextNode(\"—\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 76,\n              \"column\": 12\n            },\n            \"end\": {\n              \"line\": 98,\n              \"column\": 12\n            }\n          },\n          \"moduleName\": \"dummy/templates/browsers.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"class\",\"text-center\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"class\",\"text-center\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"class\",\"text-center\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"class\",\"text-center\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"class\",\"text-center\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"class\",\"text-center\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(7);\n          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          morphs[2] = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n          morphs[3] = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n          morphs[4] = dom.createMorphAt(dom.childAt(element0, [9]),1,1);\n          morphs[5] = dom.createMorphAt(dom.childAt(element0, [11]),1,1);\n          morphs[6] = dom.createMorphAt(dom.childAt(element0, [13]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"component.name\",[\"loc\",[null,[78,24],[78,42]]]],\n          [\"block\",\"if\",[[\"get\",\"component.lib.twb\",[\"loc\",[null,[80,30],[80,47]]]]],[],0,1,[\"loc\",[null,[80,24],[80,143]]]],\n          [\"block\",\"if\",[[\"get\",\"component.lib.sec\",[\"loc\",[null,[83,30],[83,47]]]]],[],2,3,[\"loc\",[null,[83,24],[83,143]]]],\n          [\"block\",\"if\",[[\"get\",\"component.lib.hc\",[\"loc\",[null,[86,30],[86,46]]]]],[],4,5,[\"loc\",[null,[86,24],[86,142]]]],\n          [\"block\",\"if\",[[\"get\",\"component.lib.bd\",[\"loc\",[null,[89,30],[89,46]]]]],[],6,7,[\"loc\",[null,[89,24],[89,142]]]],\n          [\"block\",\"if\",[[\"get\",\"component.lib.ta\",[\"loc\",[null,[92,30],[92,46]]]]],[],8,9,[\"loc\",[null,[92,24],[92,142]]]],\n          [\"block\",\"if\",[[\"get\",\"component.lib.s2\",[\"loc\",[null,[95,30],[95,46]]]]],[],10,11,[\"loc\",[null,[95,24],[95,142]]]]\n        ],\n        locals: [\"component\"],\n        templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11]\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 161,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/browsers.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Supported Browsers\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"As not all of the components in sl-ember-components are based upon the same third-party libraries it is possible that there is varying support for browser versions across the different components. Below is a table of each component's library dependencies. Beneath this table are the supported browsers for said libraries.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"Legend\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-1\");\n        var el4 = dom.createTextNode(\"\\n            TWB\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-11\");\n        var el4 = dom.createTextNode(\"\\n            Twitter Bootstrap\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-1\");\n        var el4 = dom.createTextNode(\"\\n            SEC\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-11\");\n        var el4 = dom.createTextNode(\"\\n            sl-ember-components\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-1\");\n        var el4 = dom.createTextNode(\"\\n            HC\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-11\");\n        var el4 = dom.createTextNode(\"\\n            Highcharts\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-1\");\n        var el4 = dom.createTextNode(\"\\n            BD\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-11\");\n        var el4 = dom.createTextNode(\"\\n            Bootstrap-Datepicker\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-1\");\n        var el4 = dom.createTextNode(\"\\n            TA\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-11\");\n        var el4 = dom.createTextNode(\"\\n            typeahead.js\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-1\");\n        var el4 = dom.createTextNode(\"\\n            S2\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-11\");\n        var el4 = dom.createTextNode(\"\\n            Select2\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"table\");\n        dom.setAttribute(el2,\"class\",\"table table-hover table-striped\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"thead\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"tr\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-4\");\n        var el6 = dom.createTextNode(\"Component\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-1 text-center\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-1 text-center\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-1 text-center\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-1 text-center\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-1 text-center\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.setAttribute(el5,\"class\",\"col-sm-1 text-center\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tbody\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"Twitter Bootstrap\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"From \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"http://getbootstrap.com/getting-started/#support\");\n        var el4 = dom.createTextNode(\"http://getbootstrap.com/getting-started/#support\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\":\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Generally the latest versions of browsers are supported. On Windows, Internet Explorer 8-11 are supported.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"See provided link for most up-to-date information.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"sl-ember-components\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Latest versions of browsers plus one version prior. Version REPLACE_APPLICATION_VERSION supports Internet Explorer 10+.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"Highcharts\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"From \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"http://www.highcharts.com/products/highcharts/#compatible\");\n        var el4 = dom.createTextNode(\"http://www.highcharts.com/products/highcharts/#compatible\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\":\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Works in all modern mobile and desktop browsers including the iPhone/iPad and Internet Explorer from version 6. On iOS and Android, multitouch support provides a seamless user experience. Standard browsers use SVG for the graphics rendering. In legacy Internet Explorer graphics are drawn using VML.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"See provided link for most up-to-date information.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"Bootstrap-Datepicker\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"From \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"http://bootstrap-datepicker.readthedocs.org/en/release/#\");\n        var el4 = dom.createTextNode(\"http://bootstrap-datepicker.readthedocs.org/en/release/#\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\":\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Has a dependency on Twitter Bootstrap so same support previously listed.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"See provided link for most up-to-date information.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"typeahead.js\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"From \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"https://github.com/twitter/typeahead.js\");\n        var el4 = dom.createTextNode(\"https://github.com/twitter/typeahead.js\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\":\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Chrome\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Firefox 3.5+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Safari 4+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Internet Explorer 7+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Opera 11+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Not tested on mobile browsers\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"See provided link for most up-to-date information.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h5\");\n        var el3 = dom.createTextNode(\"Select2\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"From \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"http://ivaynberg.github.io/select2/\");\n        var el4 = dom.createTextNode(\"http://ivaynberg.github.io/select2/\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\":\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"IE 8+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Chrome 8+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Firefox 10+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Safari 3+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"Opera 10.6+\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"See provided link for most up-to-date information.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [6, 1]);\n        var element2 = dom.childAt(element1, [1, 1]);\n        var morphs = new Array(7);\n        morphs[0] = dom.createMorphAt(dom.childAt(element2, [3]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element2, [5]),0,0);\n        morphs[2] = dom.createMorphAt(dom.childAt(element2, [7]),0,0);\n        morphs[3] = dom.createMorphAt(dom.childAt(element2, [9]),0,0);\n        morphs[4] = dom.createMorphAt(dom.childAt(element2, [11]),0,0);\n        morphs[5] = dom.createMorphAt(dom.childAt(element2, [13]),0,0);\n        morphs[6] = dom.createMorphAt(dom.childAt(element1, [3]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-tooltip\",[],[\"title\",\"Twitter Bootstrap\"],0,null,[\"loc\",[null,[67,49],[67,108]]]],\n        [\"block\",\"sl-tooltip\",[],[\"title\",\"sl-ember-components\"],1,null,[\"loc\",[null,[68,49],[68,110]]]],\n        [\"block\",\"sl-tooltip\",[],[\"title\",\"Highcharts\"],2,null,[\"loc\",[null,[69,49],[69,100]]]],\n        [\"block\",\"sl-tooltip\",[],[\"title\",\"Bootstrap-Datepicker\"],3,null,[\"loc\",[null,[70,49],[70,110]]]],\n        [\"block\",\"sl-tooltip\",[],[\"title\",\"typeahead.js\"],4,null,[\"loc\",[null,[71,49],[71,102]]]],\n        [\"block\",\"sl-tooltip\",[],[\"title\",\"Select2\"],5,null,[\"loc\",[null,[72,49],[72,97]]]],\n        [\"block\",\"each\",[[\"get\",\"components\",[\"loc\",[null,[76,20],[76,30]]]]],[],6,null,[\"loc\",[null,[76,12],[98,21]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6]\n    };\n  }()));\n\n});","define('dummy/templates/components/demos/sl-grid-detail-footer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/components/demos/sl-grid-detail-footer.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.hexCode\",[\"loc\",[null,[1,0],[1,17]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/components/demos/sl-grid-detail-header', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/components/demos/sl-grid-detail-header.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Color: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.name\",[\"loc\",[null,[1,7],[1,21]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/components/demos/sl-grid-detail', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/components/demos/sl-grid-detail.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" fruit: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(element0,0,0);\n        morphs[1] = dom.createMorphAt(element0,2,2);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.name\",[\"loc\",[null,[1,4],[1,18]]]],\n        [\"content\",\"model.fruit\",[\"loc\",[null,[1,26],[1,41]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/components/demos/tabs/tab-one', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 6,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/components/demos/tabs/tab-one.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Tab Pane One\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]),0,0);\n        morphs[1] = dom.createMorphAt(fragment,4,4,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"text\",[\"loc\",[null,[3,3],[3,11]]]],\n        [\"inline\",\"sl-input\",[],[\"placeholder\",\"Enter some text\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"inputText\",[\"loc\",[null,[5,47],[5,56]]]]],[],[]]],[\"loc\",[null,[5,0],[5,58]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/components/demos/tabs/tab-two', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/components/demos/tabs/tab-two.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Tab Pane Two\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() { return []; },\n      statements: [\n\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/components/property-text', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/components/property-text.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"small\");\n          dom.setAttribute(el1,\"class\",\"text-danger\");\n          var el2 = dom.createTextNode(\"required\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 8,\n              \"column\": 46\n            },\n            \"end\": {\n              \"line\": 8,\n              \"column\": 114\n            }\n          },\n          \"moduleName\": \"dummy/templates/components/property-text.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\", \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"text-info\");\n          var el2 = dom.createTextNode(\"default: \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"default\",[\"loc\",[null,[8,96],[8,107]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 8,\n              \"column\": 121\n            },\n            \"end\": {\n              \"line\": 8,\n              \"column\": 193\n            }\n          },\n          \"moduleName\": \"dummy/templates/components/property-text.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\", \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"text-danger\");\n          var el2 = dom.createTextNode(\"requires \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"requires\",[\"loc\",[null,[8,174],[8,186]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 10,\n            \"column\": 16\n          }\n        },\n        \"moduleName\": \"dummy/templates/components/property-text.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h4\");\n        dom.setAttribute(el1,\"class\",\"list-group-item-heading\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"text-primary\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(fragment, [2]);\n        var morphs = new Array(6);\n        morphs[0] = dom.createMorphAt(element0,1,1);\n        morphs[1] = dom.createMorphAt(element0,3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        morphs[3] = dom.createMorphAt(element1,2,2);\n        morphs[4] = dom.createMorphAt(element1,3,3);\n        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [4]),0,0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"name\",[\"loc\",[null,[2,4],[2,12]]]],\n        [\"block\",\"if\",[[\"get\",\"required\",[\"loc\",[null,[3,10],[3,18]]]]],[],0,null,[\"loc\",[null,[3,4],[5,11]]]],\n        [\"content\",\"type\",[\"loc\",[null,[8,31],[8,39]]]],\n        [\"block\",\"if\",[[\"get\",\"default\",[\"loc\",[null,[8,52],[8,59]]]]],[],1,null,[\"loc\",[null,[8,46],[8,121]]]],\n        [\"block\",\"if\",[[\"get\",\"requires\",[\"loc\",[null,[8,127],[8,135]]]]],[],2,null,[\"loc\",[null,[8,121],[8,200]]]],\n        [\"content\",\"yield\",[\"loc\",[null,[10,3],[10,12]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2]\n    };\n  }()));\n\n});","define('dummy/templates/demos/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-alert\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 6,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 8,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-button\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 9,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 11,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-calendar\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 12,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 14,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-chart\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 15,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 17,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-checkbox\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 18,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 20,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-date-picker\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 21,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 23,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-date-range-picker\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 24,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 26,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-date-time\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 27,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 29,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-drop-button\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 30,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 32,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-grid\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 33,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-input\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 36,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 38,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-loading-icon\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 39,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 41,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-menu\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 42,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 44,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-modal\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 45,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 47,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-pagination\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 48,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 50,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-panel\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 51,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 53,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-progress-bar\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 54,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 56,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-radio\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child18 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 57,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 59,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-radio-group\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child19 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 60,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 62,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-select\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child20 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-span\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child21 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 66,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 68,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-tab-panel\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child22 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 69,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 71,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-textarea\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child23 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 72,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 74,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        sl-tooltip\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 86,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/index.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Components\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Utility Classes\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"sl-menu-key-adapter\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Provides an abstraction between the events the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"em\");\n        var el5 = dom.createTextNode(\"sl-menu\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" component listens for and the ability to associate any keyboard shortcuts in your application to trigger them.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2]);\n        var morphs = new Array(24);\n        morphs[0] = dom.createMorphAt(element0,1,1);\n        morphs[1] = dom.createMorphAt(element0,2,2);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,4,4);\n        morphs[4] = dom.createMorphAt(element0,5,5);\n        morphs[5] = dom.createMorphAt(element0,6,6);\n        morphs[6] = dom.createMorphAt(element0,7,7);\n        morphs[7] = dom.createMorphAt(element0,8,8);\n        morphs[8] = dom.createMorphAt(element0,9,9);\n        morphs[9] = dom.createMorphAt(element0,10,10);\n        morphs[10] = dom.createMorphAt(element0,11,11);\n        morphs[11] = dom.createMorphAt(element0,12,12);\n        morphs[12] = dom.createMorphAt(element0,13,13);\n        morphs[13] = dom.createMorphAt(element0,14,14);\n        morphs[14] = dom.createMorphAt(element0,15,15);\n        morphs[15] = dom.createMorphAt(element0,16,16);\n        morphs[16] = dom.createMorphAt(element0,17,17);\n        morphs[17] = dom.createMorphAt(element0,18,18);\n        morphs[18] = dom.createMorphAt(element0,19,19);\n        morphs[19] = dom.createMorphAt(element0,20,20);\n        morphs[20] = dom.createMorphAt(element0,21,21);\n        morphs[21] = dom.createMorphAt(element0,22,22);\n        morphs[22] = dom.createMorphAt(element0,23,23);\n        morphs[23] = dom.createMorphAt(element0,24,24);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"demos.sl-alert\"],[\"class\",\"list-group-item\"],0,null,[\"loc\",[null,[3,4],[5,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-button\"],[\"class\",\"list-group-item\"],1,null,[\"loc\",[null,[6,4],[8,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-calendar\"],[\"class\",\"list-group-item\"],2,null,[\"loc\",[null,[9,4],[11,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-chart\"],[\"class\",\"list-group-item\"],3,null,[\"loc\",[null,[12,4],[14,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-checkbox\"],[\"class\",\"list-group-item\"],4,null,[\"loc\",[null,[15,4],[17,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-date-picker\"],[\"class\",\"list-group-item\"],5,null,[\"loc\",[null,[18,4],[20,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-date-range-picker\"],[\"class\",\"list-group-item\"],6,null,[\"loc\",[null,[21,4],[23,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-date-time\"],[\"class\",\"list-group-item\"],7,null,[\"loc\",[null,[24,4],[26,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-drop-button\"],[\"class\",\"list-group-item\"],8,null,[\"loc\",[null,[27,4],[29,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-grid\"],[\"class\",\"list-group-item\"],9,null,[\"loc\",[null,[30,4],[32,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-input\"],[\"class\",\"list-group-item\"],10,null,[\"loc\",[null,[33,4],[35,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-loading-icon\"],[\"class\",\"list-group-item\"],11,null,[\"loc\",[null,[36,4],[38,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-menu\"],[\"class\",\"list-group-item\"],12,null,[\"loc\",[null,[39,4],[41,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-modal\"],[\"class\",\"list-group-item\"],13,null,[\"loc\",[null,[42,4],[44,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-pagination\"],[\"class\",\"list-group-item\"],14,null,[\"loc\",[null,[45,4],[47,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-panel\"],[\"class\",\"list-group-item\"],15,null,[\"loc\",[null,[48,4],[50,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-progress-bar\"],[\"class\",\"list-group-item\"],16,null,[\"loc\",[null,[51,4],[53,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-radio\"],[\"class\",\"list-group-item\"],17,null,[\"loc\",[null,[54,4],[56,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-radio-group\"],[\"class\",\"list-group-item\"],18,null,[\"loc\",[null,[57,4],[59,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-select\"],[\"class\",\"list-group-item\"],19,null,[\"loc\",[null,[60,4],[62,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-span\"],[\"class\",\"list-group-item\"],20,null,[\"loc\",[null,[63,4],[65,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-tab-panel\"],[\"class\",\"list-group-item\"],21,null,[\"loc\",[null,[66,4],[68,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-textarea\"],[\"class\",\"list-group-item\"],22,null,[\"loc\",[null,[69,4],[71,16]]]],\n        [\"block\",\"link-to\",[\"demos.sl-tooltip\"],[\"class\",\"list-group-item\"],23,null,[\"loc\",[null,[72,4],[74,16]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17, child18, child19, child20, child21, child22, child23]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-alert', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 18,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 20,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            Dismissable info alert\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 34,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 34,\n              \"column\": 50\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Success alert\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 48,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 48,\n              \"column\": 50\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Warning alert\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 62,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 62,\n              \"column\": 48\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Danger alert\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 81,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 83,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An action to call when the button is dismissed.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 85,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 87,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Whether to add a dismiss button.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 89,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 91,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 93,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 95,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bootstrap contextual color type; \\\"danger\\\", \\\"info\\\", \\\"success\\\", \\\"warning\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 97,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 99,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 101,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-alert.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-alert\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A message box component for short alert messages. Based on \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/javascript/#alerts\");\n        var el3 = dom.createTextNode(\"Bootstrap - Alert messages\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-alert dismissable=true theme=\\\"info\\\"}}\\n    Dismissable info alert\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-alert}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-alert theme=\\\"success\\\"}}\\n    Success alert\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-alert}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-alert theme=\\\"warning\\\"}}\\n    Warning alert\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-alert}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-alert theme=\\\"danger\\\"}}\\n    Danger alert\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-alert}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [26]);\n        var morphs = new Array(9);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [12, 3]),3,3);\n        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [14, 3]),3,3);\n        morphs[4] = dom.createMorphAt(element0,1,1);\n        morphs[5] = dom.createMorphAt(element0,3,3);\n        morphs[6] = dom.createMorphAt(element0,5,5);\n        morphs[7] = dom.createMorphAt(element0,7,7);\n        morphs[8] = dom.createMorphAt(element0,9,9);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-alert\",[],[\"dismissable\",true,\"theme\",\"info\"],0,null,[\"loc\",[null,[18,8],[20,21]]]],\n        [\"block\",\"sl-alert\",[],[\"theme\",\"success\"],1,null,[\"loc\",[null,[34,8],[34,63]]]],\n        [\"block\",\"sl-alert\",[],[\"theme\",\"warning\"],2,null,[\"loc\",[null,[48,8],[48,63]]]],\n        [\"block\",\"sl-alert\",[],[\"theme\",\"danger\"],3,null,[\"loc\",[null,[62,8],[62,61]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"dismiss\",\"type\",\"String\",\"requires\",\"dismissable=true\"],4,null,[\"loc\",[null,[81,4],[83,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"dismissable\",\"type\",\"Boolean\",\"default\",\"false\"],5,null,[\"loc\",[null,[85,4],[87,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],6,null,[\"loc\",[null,[89,4],[91,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"theme\",\"type\",\"String\",\"default\",\"\\\"info\\\"\"],7,null,[\"loc\",[null,[93,4],[95,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],8,null,[\"loc\",[null,[97,4],[99,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-button', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 16,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 16,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Default Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 28,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 28,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Primary Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 40,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 40,\n              \"column\": 51\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Info Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 52,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 52,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Success Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 64,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 64,\n              \"column\": 57\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Warning Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 76,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 76,\n              \"column\": 55\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Danger Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 88,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 88,\n              \"column\": 56\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Disabled Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 100,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 100,\n              \"column\": 53\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Hover Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 112,\n              \"column\": 13\n            },\n            \"end\": {\n              \"line\": 112,\n              \"column\": 51\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Link Button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 131,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 133,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An action to fire when the button is clicked.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 135,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 137,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Whether the browser should propagate the button click event.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 139,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 141,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"class\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute for the button.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 143,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 145,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Whether the button is disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 147,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 149,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text label on the button.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 151,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 153,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the button is placed in a pending state, with the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"pendingLabel\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" value becoming the primary button label text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 155,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 157,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text to display during associated AJAX activity.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 159,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 161,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content string.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 164,\n                \"column\": 37\n              },\n              \"end\": {\n                \"line\": 164,\n                \"column\": 74\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"sl-modal\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 163,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 165,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Used to trigger opening of a \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" by passing in the name of the stream that the modal is registered to.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"demos.sl-modal\"],[],0,null,[\"loc\",[null,[164,37],[164,86]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    var child18 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 167,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 169,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Suffix string of Bootstrap button sizes; \\\"extra-small\\\", \\\"small\\\", \\\"medium\\\" (default) or \\\"large\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child19 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 171,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 173,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bootstrap contextual style type; \\\"danger\\\", \\\"default\\\", \\\"hover\\\", \\\"info\\\", \\\"link\\\", \\\"primary\\\", \\\"success\\\", \\\"warning\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child20 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 175,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 177,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 179,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-button.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-button\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"An active <button> component. Based on \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/css/#buttons\");\n        var el3 = dom.createTextNode(\"Bootstrap - Buttons\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"default\\\"}}Default Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"primary\\\"}}Primary Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"info\\\"}}Info Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"success\\\"}}Success Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"warning\\\"}}Warning Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"danger\\\"}}Danger Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button disabled=true}}Disabled Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"hover\\\"}}Hover Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-button theme=\\\"link\\\"}}Link Button\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [36]);\n        var morphs = new Array(21);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3, 3]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3, 3]),0,0);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [12, 3, 3]),0,0);\n        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [14, 3, 3]),0,0);\n        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [16, 3, 3]),0,0);\n        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [18, 3, 3]),0,0);\n        morphs[6] = dom.createMorphAt(dom.childAt(fragment, [20, 3, 3]),0,0);\n        morphs[7] = dom.createMorphAt(dom.childAt(fragment, [22, 3, 3]),0,0);\n        morphs[8] = dom.createMorphAt(dom.childAt(fragment, [24, 3, 3]),0,0);\n        morphs[9] = dom.createMorphAt(element0,1,1);\n        morphs[10] = dom.createMorphAt(element0,3,3);\n        morphs[11] = dom.createMorphAt(element0,5,5);\n        morphs[12] = dom.createMorphAt(element0,7,7);\n        morphs[13] = dom.createMorphAt(element0,9,9);\n        morphs[14] = dom.createMorphAt(element0,11,11);\n        morphs[15] = dom.createMorphAt(element0,13,13);\n        morphs[16] = dom.createMorphAt(element0,15,15);\n        morphs[17] = dom.createMorphAt(element0,17,17);\n        morphs[18] = dom.createMorphAt(element0,19,19);\n        morphs[19] = dom.createMorphAt(element0,21,21);\n        morphs[20] = dom.createMorphAt(element0,23,23);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-button\",[],[\"theme\",\"default\"],0,null,[\"loc\",[null,[16,13],[16,71]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"primary\"],1,null,[\"loc\",[null,[28,13],[28,71]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"info\"],2,null,[\"loc\",[null,[40,13],[40,65]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"success\"],3,null,[\"loc\",[null,[52,13],[52,71]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"warning\"],4,null,[\"loc\",[null,[64,13],[64,71]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"danger\"],5,null,[\"loc\",[null,[76,13],[76,69]]]],\n        [\"block\",\"sl-button\",[],[\"disabled\",true],6,null,[\"loc\",[null,[88,13],[88,70]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"hover\"],7,null,[\"loc\",[null,[100,13],[100,67]]]],\n        [\"block\",\"sl-button\",[],[\"theme\",\"link\"],8,null,[\"loc\",[null,[112,13],[112,65]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"action\",\"type\",\"Function\"],9,null,[\"loc\",[null,[131,4],[133,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"bubbles\",\"type\",\"Boolean\",\"default\",\"true\"],10,null,[\"loc\",[null,[135,4],[137,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"class\",\"type\",\"String\"],11,null,[\"loc\",[null,[139,4],[141,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],12,null,[\"loc\",[null,[143,4],[145,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],13,null,[\"loc\",[null,[147,4],[149,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"pending\",\"type\",\"Boolean\",\"default\",\"false\"],14,null,[\"loc\",[null,[151,4],[153,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"pendingLabel\",\"type\",\"Function\",\"default\",\"null\"],15,null,[\"loc\",[null,[155,4],[157,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],16,null,[\"loc\",[null,[159,4],[161,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"showModalWithStreamName\",\"type\",\"String\"],17,null,[\"loc\",[null,[163,4],[165,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"size\",\"type\",\"String\",\"default\",\"\\\"medium\\\"\"],18,null,[\"loc\",[null,[167,4],[169,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"theme\",\"type\",\"String\",\"default\",\"\\\"default\\\"\"],19,null,[\"loc\",[null,[171,4],[173,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],20,null,[\"loc\",[null,[175,4],[177,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17, child18, child19, child20]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-calendar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 33,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Action to call when a day is clicked that contains one of the content dates. An array of content objects with dates occurring on the clicked date will be returned to this action.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 37,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 39,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bound array of objects with date values, looked up using the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"dateValuePath\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 41,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 43,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The month number to display (1-12).\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 45,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 47,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The year to display.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 49,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 51,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Path to the content objects' date value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 53,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 55,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The locale string to use for \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"em\");\n          var el2 = dom.createTextNode(\"moment\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" date formats.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 57,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 59,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the view is locked in the initial mode, and forward and back buttons are disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 61,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 63,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The view to display the calendar in; \\\"days\\\", \\\"months\\\", or \\\"years\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 65,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-calendar.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-calendar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A standalone calendar to display date values from an array of objects.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-calendar action=\\\"logLabel\\\" content=content}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Route/Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"model: [\\n    {\\n        date: new Date(),\\n        label: 'Today!'\\n    }\\n]\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [14]);\n        var morphs = new Array(9);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(element0,9,9);\n        morphs[6] = dom.createMorphAt(element0,11,11);\n        morphs[7] = dom.createMorphAt(element0,13,13);\n        morphs[8] = dom.createMorphAt(element0,15,15);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-calendar\",[],[\"action\",\"logLabel\",\"class\",\"col-sm-6\",\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"content\",[\"loc\",[null,[24,65],[24,72]]]]],[],[]]],[\"loc\",[null,[24,8],[24,74]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"action\",\"type\",\"Function\"],0,null,[\"loc\",[null,[33,4],[35,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"content\",\"type\",\"Object[]\"],1,null,[\"loc\",[null,[37,4],[39,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"currentMonth\",\"type\",\"Number\",\"default\",\"current month\"],2,null,[\"loc\",[null,[41,4],[43,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"currentYear\",\"type\",\"Number\",\"default\",\"current year\"],3,null,[\"loc\",[null,[45,4],[47,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"dateValuePath\",\"type\",\"String\",\"default\",\"\\\"date\\\"\"],4,null,[\"loc\",[null,[49,4],[51,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"locale\",\"type\",\"String\",\"default\",\"\\\"en\\\"\"],5,null,[\"loc\",[null,[53,4],[55,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"locked\",\"type\",\"Boolean\",\"default\",\"false\"],6,null,[\"loc\",[null,[57,4],[59,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"viewMode\",\"type\",\"String\",\"default\",\"\\\"days\\\"\"],7,null,[\"loc\",[null,[61,4],[63,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-chart', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 59,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 61,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An object of options passed directly to Highcharts initialization.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Array of series data to bind to the component.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        CSS string for the height inline style value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 71,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 73,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the chart is masked and a loading icon appears.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 75,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The title of the chart's panel.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 79,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 81,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        CSS string for the width inline style value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 83,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-chart.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-chart\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A wrapper component for \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://www.highcharts.com\");\n        var el3 = dom.createTextNode(\"Highcharts\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"Highcharts is only free for non-commercial use and requires a license for any other use. See\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://shop.highsoft.com/faq/non-commercial#what-is-commercial-website\");\n        var el3 = dom.createTextNode(\"this FAQ page\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" for more information.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-chart\\n    options=chartOptions\\n    series=content\\n    title=\\\"Fruit Consumption\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"chartOptions: {\\n    chart: {\\n        type: 'bar'\\n    },\\n\\n    xAxis: {\\n        categories: [ 'Apples', 'Bananas', 'Oranges' ]\\n    },\\n\\n    yAxis: {\\n        title: {\\n            text: 'Fruit Eaten'\\n        }\\n    }\\n}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Route\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"content = [\\n    {\\n        name: 'Jane',\\n        data: [ 1, 0, 4 ]\\n    }, {\\n        name: 'John',\\n        data: [ 5, 7, 3 ]\\n    }\\n]\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [16]);\n        var morphs = new Array(7);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(element0,9,9);\n        morphs[6] = dom.createMorphAt(element0,11,11);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-chart\",[],[\"options\",[\"subexpr\",\"@mut\",[[\"get\",\"chartOptions\",[\"loc\",[null,[50,27],[50,39]]]]],[],[]],\"series\",[\"subexpr\",\"@mut\",[[\"get\",\"content\",[\"loc\",[null,[50,47],[50,54]]]]],[],[]],\"title\",\"Fruit Consumption\"],[\"loc\",[null,[50,8],[50,82]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"options\",\"required\",true,\"type\",\"Object\"],0,null,[\"loc\",[null,[59,4],[61,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"series\",\"required\",true,\"type\",\"Array\"],1,null,[\"loc\",[null,[63,4],[65,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"height\",\"type\",\"String\"],2,null,[\"loc\",[null,[67,4],[69,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"isLoading\",\"type\",\"Boolean\",\"default\",\"false\"],3,null,[\"loc\",[null,[71,4],[73,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],4,null,[\"loc\",[null,[75,4],[77,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"width\",\"type\",\"String\"],5,null,[\"loc\",[null,[79,4],[81,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-checkbox', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 22,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 24,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"label label-success\");\n          var el2 = dom.createTextNode(\"Checked!\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 59,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 61,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The bound value indicating if the checkbox is checked or not.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the checkbox is disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Label text to display beside the checkbox.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 71,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 73,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 75,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 79,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 81,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 83,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-checkbox.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-checkbox\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"An improved substitute for the default <input type=\\\"checkbox\\\"> element. See \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/css/#forms-controls\");\n        var el3 = dom.createTextNode(\"Bootstrap - Supported controls\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" for details.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-checkbox\\n    checked=checkboxValue\\n    label=\\\"Checkbox\\\"\\n    name=\\\"checkbox\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-checkbox\\n    disabled=true\\n    label=\\\"Disabled checkbox\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-input-based\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [8, 3]);\n        var element1 = dom.childAt(fragment, [22]);\n        var morphs = new Array(9);\n        morphs[0] = dom.createMorphAt(element0,3,3);\n        morphs[1] = dom.createMorphAt(element0,5,5);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[3] = dom.createMorphAt(element1,1,1);\n        morphs[4] = dom.createMorphAt(element1,3,3);\n        morphs[5] = dom.createMorphAt(element1,5,5);\n        morphs[6] = dom.createMorphAt(element1,7,7);\n        morphs[7] = dom.createMorphAt(element1,9,9);\n        morphs[8] = dom.createMorphAt(element1,11,11);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-checkbox\",[],[\"checked\",[\"subexpr\",\"@mut\",[[\"get\",\"checkboxValue\",[\"loc\",[null,[20,30],[20,43]]]]],[],[]],\"label\",\"Checkbox\",\"name\",\"checkbox\"],[\"loc\",[null,[20,8],[20,78]]]],\n        [\"block\",\"if\",[[\"get\",\"checkboxValue\",[\"loc\",[null,[22,14],[22,27]]]]],[],0,null,[\"loc\",[null,[22,8],[24,15]]]],\n        [\"inline\",\"sl-checkbox\",[],[\"disabled\",true,\"label\",\"Disabled checkbox\"],[\"loc\",[null,[39,8],[39,63]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"checked\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[59,4],[61,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],2,null,[\"loc\",[null,[63,4],[65,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],3,null,[\"loc\",[null,[67,4],[69,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\"],4,null,[\"loc\",[null,[71,4],[73,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],5,null,[\"loc\",[null,[75,4],[77,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],6,null,[\"loc\",[null,[79,4],[81,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-date-picker', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 45,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 47,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Action to call when the date is changed.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 49,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 51,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Whether or not to close the datepicker immediately when a date is selected.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 53,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 55,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, show week numbers to the left of the week rows.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 57,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 59,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, displays a \\\"Clear\\\" button at the bottom of the datepicker to clear the input value. If \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"autoclose\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" is also set to true, this button will also close the datepicker.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 61,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 63,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Days of the week that should be disabled. Values are 0 (Sunday) to 6 (Saturday). Multiple values should be comma-separated.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 65,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 67,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the input field is disabled and the datepicker will never display.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 69,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 71,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The latest date that may be selected. All later dates will be disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 73,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 75,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, forces parsing of the input value when the picker is close. That is, when an invalid date is left in the input field by the user, the picker will forcibly parse that value, and set the input's value to the new, valid date, conforming to the given \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"format\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 77,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 86,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The date format; combination of d, dd, D, DD, m, mm, M, MM, yy, yyyy\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"d, dd : Numeric date, no leading zero and leading zero, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"D, DD : Abbreviated and full weekday names, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"m, mm : Numeric month, no leading zero and leading zero, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"M, MM : Abbreviated and full month names, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"yy, yyyy : 2- and 4-digit years, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 88,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 90,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The help text below the datepicker's input field.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 92,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 94,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        A list of inputs to be used in a range picker, which will be attached to the selected element. Allows for explicitly creating a range picker on a non-standard element.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 96,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 98,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Whether or not to allow date navigation by arrow keys.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 100,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 102,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The label text above the datepicker's input field.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 104,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 106,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The IETF code of the language to use for month and day names.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 108,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 110,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Set a limit for the view mode. Accepts \\\"days\\\", \\\"months\\\", or \\\"years\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 112,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 114,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Enable multidate picking. Each date in month view acts as a toggle button, keeping track of which dates the user has selected in order. If a number is given, the picker will limit how many dates can be selected to that number, dropping the oldest dates from the list when the number is exceeded. true equates to no limit. The input’s value (if present) is set to a string generated by joining the dates, formatted, with multidateSeparator.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 116,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 118,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        A space-separated string consisting of one or two of \\\"left\\\" or \\\"right\\\", \\\"top\\\" or \\\"bottom\\\", and \\\"auto\\\" (may be omitted). Refers to the location of the picker popup's \\\"anchor\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 120,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 122,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"placeholder\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute text for the date input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child18 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 124,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 126,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child19 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 128,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 130,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The earliest date that may be selected. All earlier dates will be disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child20 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 132,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 134,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The view that the calendar's datepicker should show when created.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child21 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 136,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 138,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child22 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 140,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 142,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Displays a \\\"Today\\\" button at the bottom of the datepicker to select the current date. If true, the \\\"Today\\\" button will only move the current date into view. If \\\"linked\\\", the current date will also be selected.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child23 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 144,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 146,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, highlight the current date.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child24 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 148,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 150,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The date either selected by the datepicker or entered by the user.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child25 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 152,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 154,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Day of the week to start on. 0 (Sunday) to 6 (Saturday).\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 156,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-date-picker.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-date-picker\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"An input component to select date values. Based on \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://bootstrap-datepicker.readthedocs.org/en/release/index.html\");\n        var el3 = dom.createTextNode(\"bootstrap-datepicker\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-date-picker label=\\\"Date picker\\\"}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-component-input-id\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [26]);\n        var morphs = new Array(27);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(element0,9,9);\n        morphs[6] = dom.createMorphAt(element0,11,11);\n        morphs[7] = dom.createMorphAt(element0,13,13);\n        morphs[8] = dom.createMorphAt(element0,15,15);\n        morphs[9] = dom.createMorphAt(element0,17,17);\n        morphs[10] = dom.createMorphAt(element0,19,19);\n        morphs[11] = dom.createMorphAt(element0,21,21);\n        morphs[12] = dom.createMorphAt(element0,23,23);\n        morphs[13] = dom.createMorphAt(element0,25,25);\n        morphs[14] = dom.createMorphAt(element0,27,27);\n        morphs[15] = dom.createMorphAt(element0,29,29);\n        morphs[16] = dom.createMorphAt(element0,31,31);\n        morphs[17] = dom.createMorphAt(element0,33,33);\n        morphs[18] = dom.createMorphAt(element0,35,35);\n        morphs[19] = dom.createMorphAt(element0,37,37);\n        morphs[20] = dom.createMorphAt(element0,39,39);\n        morphs[21] = dom.createMorphAt(element0,41,41);\n        morphs[22] = dom.createMorphAt(element0,43,43);\n        morphs[23] = dom.createMorphAt(element0,45,45);\n        morphs[24] = dom.createMorphAt(element0,47,47);\n        morphs[25] = dom.createMorphAt(element0,49,49);\n        morphs[26] = dom.createMorphAt(element0,51,51);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-date-picker\",[],[\"label\",\"Date picker\"],[\"loc\",[null,[16,8],[16,46]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"action\",\"type\",\"Function\"],0,null,[\"loc\",[null,[45,4],[47,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"autoclose\",\"type\",\"Boolean\",\"default\",\"true\"],1,null,[\"loc\",[null,[49,4],[51,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"calendarWeeks\",\"type\",\"Boolean\",\"default\",\"false\"],2,null,[\"loc\",[null,[53,4],[55,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"clearBtn\",\"type\",\"Boolean\",\"default\",\"false\"],3,null,[\"loc\",[null,[57,4],[59,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"daysOfWeekDisabled\",\"type\",\"Array\"],4,null,[\"loc\",[null,[61,4],[63,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"String\",\"default\",\"false\"],5,null,[\"loc\",[null,[65,4],[67,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"endDate\",\"type\",\"Date/String\"],6,null,[\"loc\",[null,[69,4],[71,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"forceParse\",\"type\",\"Boolean\",\"default\",\"true\"],7,null,[\"loc\",[null,[73,4],[75,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"format\",\"type\",\"String\",\"default\",\"\\\"mm/dd/yyyy\\\"\"],8,null,[\"loc\",[null,[77,4],[86,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"helpText\",\"type\",\"String\"],9,null,[\"loc\",[null,[88,4],[90,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"inputs\",\"type\",\"Array\"],10,null,[\"loc\",[null,[92,4],[94,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"keyboardNavigation\",\"type\",\"Boolean\",\"default\",\"true\"],11,null,[\"loc\",[null,[96,4],[98,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],12,null,[\"loc\",[null,[100,4],[102,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"language\",\"type\",\"String\",\"default\",\"\\\"en\\\"\"],13,null,[\"loc\",[null,[104,4],[106,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"minViewMode\",\"type\",\"String\"],14,null,[\"loc\",[null,[108,4],[110,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"multidate\",\"type\",\"Boolean/Number\",\"default\",\"false\"],15,null,[\"loc\",[null,[112,4],[114,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"orientation\",\"type\",\"String\",\"default\",\"\\\"auto\\\"\"],16,null,[\"loc\",[null,[116,4],[118,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"placeholder\",\"type\",\"String\"],17,null,[\"loc\",[null,[120,4],[122,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],18,null,[\"loc\",[null,[124,4],[126,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"startDate\",\"type\",\"Date/String\"],19,null,[\"loc\",[null,[128,4],[130,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"startView\",\"type\",\"String\",\"default\",\"\\\"month\\\"\"],20,null,[\"loc\",[null,[132,4],[134,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],21,null,[\"loc\",[null,[136,4],[138,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"todayBtn\",\"type\",\"Boolean/String\",\"default\",\"false\"],22,null,[\"loc\",[null,[140,4],[142,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"todayHighlight\",\"type\",\"Boolean\",\"default\",\"false\"],23,null,[\"loc\",[null,[144,4],[146,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"String\"],24,null,[\"loc\",[null,[148,4],[150,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"weekStart\",\"type\",\"Number/String\"],25,null,[\"loc\",[null,[152,4],[154,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17, child18, child19, child20, child21, child22, child23, child24, child25]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-date-range-picker', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 2,\n              \"column\": 62\n            },\n            \"end\": {\n              \"line\": 2,\n              \"column\": 111\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-date-picker\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 43,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 45,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"placeholder\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute text for the end date input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 47,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 49,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The binding value for the endDate input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 51,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 60,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The date format used for both inputs; combination of d, dd, D, DD, m, mm, M, MM, yy, yyyy\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"d, dd : Numeric date, no leading zero and leading zero, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"D, DD : Abbreviated and full weekday names, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"m, mm : Numeric month, no leading zero and leading zero, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"M, MM : Abbreviated and full month names, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"yy, yyyy : 2- and 4-digit years, respectively\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 62,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 64,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The latest possible date for the range.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 66,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 68,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The earliest possible date for the range.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 70,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 72,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"placeholder\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute text for the start date input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 74,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 76,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The binding value for the startDate input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 78,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-date-range-picker.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-date-range-picker\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A component to use for date ranges, using two \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" components.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-date-range-picker\\n    label=\\\"Select date range\\\"\\n    startDatePlaceholder=\\\"Select start date\\\"\\n    endDatePlaceholder=\\\"Select end date\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-component-input-id\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [20]);\n        var morphs = new Array(9);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[2] = dom.createMorphAt(element0,1,1);\n        morphs[3] = dom.createMorphAt(element0,3,3);\n        morphs[4] = dom.createMorphAt(element0,5,5);\n        morphs[5] = dom.createMorphAt(element0,7,7);\n        morphs[6] = dom.createMorphAt(element0,9,9);\n        morphs[7] = dom.createMorphAt(element0,11,11);\n        morphs[8] = dom.createMorphAt(element0,13,13);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"demos.sl-date-picker\"],[],0,null,[\"loc\",[null,[2,62],[2,123]]]],\n        [\"inline\",\"sl-date-range-picker\",[],[\"label\",\"Select date range\",\"startDatePlaceholder\",\"Select start date\",\"endDatePlaceholder\",\"Select end date\"],[\"loc\",[null,[20,8],[24,10]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"endDatePlaceholder\",\"type\",\"String\"],1,null,[\"loc\",[null,[43,4],[45,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"endDateValue\",\"type\",\"String\",\"default\",\"null\"],2,null,[\"loc\",[null,[47,4],[49,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"format\",\"type\",\"String\",\"default\",\"\\\"mm/dd/yyyy\\\"\"],3,null,[\"loc\",[null,[51,4],[60,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"maxDate\",\"type\",\"Date/String\",\"default\",\"null\"],4,null,[\"loc\",[null,[62,4],[64,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"minDate\",\"type\",\"Date/String\",\"default\",\"null\"],5,null,[\"loc\",[null,[66,4],[68,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"startDatePlaceholder\",\"type\",\"String\"],6,null,[\"loc\",[null,[70,4],[72,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"startDateValue\",\"type\",\"String\",\"default\",\"null\"],7,null,[\"loc\",[null,[74,4],[76,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-date-time', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 72,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 74,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The string value for the current moment.js timezone name (i.e., \\\"America/Chicago\\\").\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 76,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 78,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The string format to show the datetime text in. Can be \\\"date\\\", \\\"datetime\\\", or \\\"relative\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 80,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 82,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The locale string to use for moment.js date formats.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 84,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 86,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 88,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 90,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 92,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 94,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The bound date value, parseable by moment.js. If not supplied, the current date and time is used.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 96,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-date-time.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-date-time\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A formattable date and time component with included tooltip.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-date-time timezone=\\\"America/Chicago\\\"}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-date-time\\n    format=\\\"relative\\\"\\n    timezone=\\\"America/Chicago\\\"\\n    value=firstDayDate\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-date-time\\n    format=\\\"date\\\"\\n    timezone=\\\"America/Chicago\\\"\\n    value=threeMonthsAgoDate\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [22]);\n        var morphs = new Array(9);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3, 3]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3, 3]),0,0);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [12, 3, 3]),0,0);\n        morphs[3] = dom.createMorphAt(element0,1,1);\n        morphs[4] = dom.createMorphAt(element0,3,3);\n        morphs[5] = dom.createMorphAt(element0,5,5);\n        morphs[6] = dom.createMorphAt(element0,7,7);\n        morphs[7] = dom.createMorphAt(element0,9,9);\n        morphs[8] = dom.createMorphAt(element0,11,11);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-date-time\",[],[\"timezone\",\"America/Chicago\"],[\"loc\",[null,[16,12],[16,55]]]],\n        [\"inline\",\"sl-date-time\",[],[\"format\",\"relative\",\"timezone\",\"America/Chicago\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"firstDayDate\",[\"loc\",[null,[35,18],[35,30]]]]],[],[]]],[\"loc\",[null,[32,12],[36,10]]]],\n        [\"inline\",\"sl-date-time\",[],[\"format\",\"date\",\"timezone\",\"America/Chicago\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"threeMonthsAgoDate\",[\"loc\",[null,[55,18],[55,36]]]]],[],[]]],[\"loc\",[null,[52,12],[56,10]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"timezone\",\"type\",\"String\",\"required\",true],0,null,[\"loc\",[null,[72,4],[74,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"format\",\"type\",\"String\",\"default\",\"\\\"datetime\\\"\"],1,null,[\"loc\",[null,[76,4],[78,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"locale\",\"type\",\"String\",\"default\",\"\\\"en\\\"\"],2,null,[\"loc\",[null,[80,4],[82,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],3,null,[\"loc\",[null,[84,4],[86,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],4,null,[\"loc\",[null,[88,4],[90,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"Array/Date/Moment/Number/Object/String\",\"default\",\"now\"],5,null,[\"loc\",[null,[92,4],[94,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-drop-button', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 22,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 28,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(5);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);\n          morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);\n          morphs[4] = dom.createMorphAt(fragment,9,9,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"sl-drop-option\",[],[\"action\",\"logRed\",\"label\",\"Red\"],[\"loc\",[null,[23,12],[23,58]]]],\n          [\"inline\",\"sl-drop-option\",[],[\"action\",\"logGreen\",\"label\",\"Green\"],[\"loc\",[null,[24,12],[24,62]]]],\n          [\"inline\",\"sl-drop-option\",[],[\"action\",\"logBlue\",\"label\",\"Blue\"],[\"loc\",[null,[25,12],[25,60]]]],\n          [\"content\",\"sl-drop-option\",[\"loc\",[null,[26,12],[26,30]]]],\n          [\"inline\",\"sl-drop-option\",[],[\"action\",\"logWhite\",\"label\",\"White\"],[\"loc\",[null,[27,12],[27,62]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 47,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 49,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Aligns the dropdown menu \\\"left\\\" or \\\"right\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 51,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 53,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An array of hash objects containing the same optional properties as the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"{{sl-drop-option}} below. Note that currently, the context is different between these two ways of defining drop-button options.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 55,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 57,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text label for button text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 59,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 61,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Suffix string for the Bootstrap button size; \\\"extra-small\\\", \\\"small\\\", \\\"medium\\\" (default), or \\\"large\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The theme style string to use for the button; \\\"default\\\" or \\\"hover\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 71,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 73,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 81,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 83,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Action to fire when the option is clicked.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 85,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 87,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text label for the option in the menu. If this property is omitted, the option becomes a divider.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 89,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-drop-button.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-drop-button\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A combination of a button with a drop-down menu, with triggered actions. Utilizes \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/javascript/#dropdowns\");\n        var el3 = dom.createTextNode(\"Bootstrap - Dropdowns\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-drop-button label=\\\"Select a color\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-drop-option action=\\\"logRed\\\" label=\\\"Red\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-drop-option action=\\\"logGreen\\\" label=\\\"Green\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-drop-option action=\\\"logBlue\\\" label=\\\"Blue\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-drop-option}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-drop-option action=\\\"logWhite\\\" label=\\\"White\\\"}}\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-drop-button}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-drop-button Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-drop-option Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [20]);\n        var element1 = dom.childAt(fragment, [26]);\n        var morphs = new Array(10);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(element0,9,9);\n        morphs[6] = dom.createMorphAt(element0,11,11);\n        morphs[7] = dom.createMorphAt(element0,13,13);\n        morphs[8] = dom.createMorphAt(element1,1,1);\n        morphs[9] = dom.createMorphAt(element1,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-drop-button\",[],[\"label\",\"Select a color\"],0,null,[\"loc\",[null,[22,8],[28,27]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"align\",\"type\",\"String\",\"default\",\"\\\"left\\\"\"],1,null,[\"loc\",[null,[47,4],[49,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"content\",\"type\",\"Array\"],2,null,[\"loc\",[null,[51,4],[53,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],3,null,[\"loc\",[null,[55,4],[57,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],4,null,[\"loc\",[null,[59,4],[61,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"size\",\"type\",\"String\",\"default\",\"\\\"medium\\\"\"],5,null,[\"loc\",[null,[63,4],[65,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"theme\",\"type\",\"String\",\"default\",\"\\\"default\\\"\"],6,null,[\"loc\",[null,[67,4],[69,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],7,null,[\"loc\",[null,[71,4],[73,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"action\",\"type\",\"String\"],8,null,[\"loc\",[null,[81,4],[83,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],9,null,[\"loc\",[null,[85,4],[87,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-grid/detail', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-grid/detail.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" fruit: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(element0,0,0);\n        morphs[1] = dom.createMorphAt(element0,2,2);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.name\",[\"loc\",[null,[1,4],[1,18]]]],\n        [\"content\",\"model.fruit\",[\"loc\",[null,[1,26],[1,41]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-grid/footer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-grid/footer.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Viewing \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\" of \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\" Colors\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n        morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"content.length\",[\"loc\",[null,[1,8],[1,26]]]],\n        [\"content\",\"totalCount\",[\"loc\",[null,[1,30],[1,44]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-grid/header', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 4,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid/header.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(2);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"sl-drop-option\",[],[\"click\",[\"subexpr\",\"@mut\",[[\"get\",\"sayHello\",[\"loc\",[null,[2,27],[2,35]]]]],[],[]],\"label\",\"Say Hello\",\"targetObject\",[\"subexpr\",\"@mut\",[[\"get\",\"parentView\",[\"loc\",[null,[2,67],[2,77]]]]],[],[]]],[\"loc\",[null,[2,4],[2,79]]]],\n          [\"inline\",\"sl-drop-option\",[],[\"click\",[\"subexpr\",\"@mut\",[[\"get\",\"sayGoodbye\",[\"loc\",[null,[3,27],[3,37]]]]],[],[]],\"label\",\"Say Goodbye\",\"targetObject\",[\"subexpr\",\"@mut\",[[\"get\",\"parentView\",[\"loc\",[null,[3,71],[3,81]]]]],[],[]]],[\"loc\",[null,[3,4],[3,83]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 5,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-grid/header.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-drop-button\",[],[\"label\",\"Do something\"],0,null,[\"loc\",[null,[1,0],[4,19]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-grid', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 68,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 82,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createTextNode(\"Colors\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 91,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 102,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"An array of column definition objects. Each column definition object can contain the following values:\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"align\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - A \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"string\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" that determines which direction to align the column's text (default: \\\"left\\\")\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"primary\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - A \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"boolean\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" that determines whether the column remains shown when the detail pane is visible (default: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"false\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\")\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"size\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - The width of the column; either a string for relative sizing (\\\"small\\\", \\\"medium\\\", or \\\"large\\\"), or a number for exact number of pixels; the default is null for auto width\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"sortable\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - A \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"boolean\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" that determines whether the column is sortable or not (default: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"false\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\")\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"template\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - The name of a template to use for the cell value, for more complex content; uses the \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createTextNode(\"rowController\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" as its controller\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"title\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - The displayed title of the column\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"valuePath\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - The lookup string for the column's basic output; only used if \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"template\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" is omitted\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 104,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 106,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Array of records to display as the rows.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 108,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 110,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The text to label the row actions' button with.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 112,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 114,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When this is true, the grid requests data in a continuous paging manner, without the use of pagination options or data. See \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"requestData\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" for information on how content is handled in a \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"continuous\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" grid.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 116,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 118,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of a component to render in the detail pane. The component is supplied a `model` property representing the record of the row that was clicked on to open the pane. If `detailComponent` is omitted, the detail pane will not be opened when a row in the list pane is clicked.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 120,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 122,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of a component to render as the detail-pane footer. The component is supplied a `model` property representing the record of the row that was clicked on to open the pane. If this property is omitted, the detail footer will not be rendered.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 124,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 126,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of a component to render as the detail-pane header. The component is supplied a `model` property representing the record of the row that was clicked on to open the pane. If this property is omitted, the detail header will not be rendered.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 128,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 130,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The string to use for the filter button label text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 132,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 134,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of a component to render in the filter pane. If this property is omitted, the filter button and pane will be disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 136,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 138,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The application path to a template to use for list-pane footer. This template is rendered in the context of the sl-grid component. If this property is omitted, the component will look for a file \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"./footer.hbs\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\", and if not found, will not render anything for the footer.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 140,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 142,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Determines the overall height of the sl-grid component. When the value is \\\"auto\\\" (the default), then the component will responsively size its own height to the allowed space in the viewport. Setting it to a number will lock the height to that many pixels high.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 144,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 148,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createElement(\"em\");\n          var el3 = dom.createTextNode(\"Valid only for non-\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createTextNode(\"continuous\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" grids\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\".\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"The number of records shown per page.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 150,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 156,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"The name of an action to trigger when a data change is requested.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"For a \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"continuous\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" grid, this is triggered when the end of the content data in the grid's table is encountered. The action function is not sent anything, and should handle simply appending data onto the bound \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"content\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" array itself.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"For a non-\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"continuous\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" grid—the default—the action function should accept a page number to load data into \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"content\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" for.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 158,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 203,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"An array of objects defining what actions display in the right-most column for each row in the list pane. Each object in this array should contain the following values:\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"action\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - A \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"string\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" name of an action to trigger when this action option is selected\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"label\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - A \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"string\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" to use for the label of the action option as a dropdown item\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"In order for an action to be handled in the controller and/or routes, the action must be specified when using the grid in a template. When an action menu option is selected, the content object for that row is sent as an argument to that action's handler. The following example illustrates the use of \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"rowActions\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" with action handlers in a controller:\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h6\");\n          var el2 = dom.createTextNode(\"Controller\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"pre\");\n          var el2 = dom.createTextNode(\"actions: {\\n    logName( row ) {\\n        window.console.log( 'Name:', Ember.get( row, 'name' ) );\\n    },\\n\\n    logFruit( row ) {\\n        window.console.log( 'Fruit:', Ember.get( row, 'fruit' ) );\\n    }\\n},\\n\\ncolumns: [\\n    // some column definitions\\n],\\n\\ncontent: [\\n    // some content\\n],\\n\\nrowActions: [\\n    {\\n        label: 'Log',\\n        action: 'sendLog'\\n    },\\n    {\\n        label: 'Another Action',\\n        action: 'anotherAction'\\n    }\\n]\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h6\");\n          var el2 = dom.createTextNode(\"Template\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"pre\");\n          var el2 = dom.createTextNode(\"{{sl-grid\\n    columns=columns\\n    content=content\\n    sendLog=(action \\\"logName\\\")\\n    anotherAction=(action \\\"logFruit\\\")\\n}}\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 205,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 207,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of an action to trigger when a row on the list-pane is clicked. If this is omitted, then the detail-pane will open with the model context of the clicked row's record. If no valid detailPath is defined, then nothing will happen when a list-pane row is clicked.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 209,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 211,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of an action to trigger when a sortable column is selected for sorting. This action should accept two arguments: the column definition to sort on, and a boolean for whether the column is sorted ascending (true) or descending (false).\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 213,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 215,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The total number of records for the content. This value is used to determine when new pages in a \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"continuous\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" grid should be requested, and the interface text in a non-\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"continuous\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" grid.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 217,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-grid.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-grid\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A dual-pane, master-detail split panel grid.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template: demos/sl-grid.hbs\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-grid\\n    columns=columns\\n    content=sortedModel\\n    detailComponent=\\\"demos/sl-grid-detail\\\"\\n    detailFooterComponent=\\\"demos/sl-grid-detail-footer\\\"\\n    detailHeaderComponent=\\\"demos/sl-grid-detail-header\\\"\\n    footerPath=\\\"demos/sl-grid/footer\\\"\\n    height=400\\n    rowActions=rowActions\\n    sendLog=(action \\\"logName\\\")\\n    sortColumn=\\\"sortColumn\\\"\\n    totalCount=totalCount\\n}}\\n    <h3>Colors</h3>\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-grid}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"The \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"sendLog\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" action in the above template is not a built-in action of sl-grid, but is defined in the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"rowActions\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" property specifically for this example. See the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"rowActions\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" property documentation for a more in-depth example.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template: components/demos/sl-grid-detail-footer.hbs\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{model.hexCode}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template: components/demos/sl-grid-detail-header.hbs\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"Color: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{model.name}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template: components/demos/sl-grid-detail.hbs\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"<h3>\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{model.name}} fruit: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{model.fruit}}</h3>\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template: demos/sl-grid/footer.hbs\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"Viewing \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{content.length}} of \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{totalCount}} Colors\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"columns: [\\n    {\\n        primary: true,\\n        title: 'Color',\\n        valuePath: 'name'\\n    }, {\\n        size: 'small',\\n        sortable: true,\\n        title: 'Fruit',\\n        valuePath: 'fruit'\\n    }, {\\n        size: 'small',\\n        title: 'Hex Code',\\n        valuePath: 'hexCode'\\n    }\\n],\\n\\nrowActions: [\\n    {\\n        action: 'sendLog',\\n        label: 'Log'\\n    }\\n]\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [14]);\n        var morphs = new Array(18);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(element0,9,9);\n        morphs[6] = dom.createMorphAt(element0,11,11);\n        morphs[7] = dom.createMorphAt(element0,13,13);\n        morphs[8] = dom.createMorphAt(element0,15,15);\n        morphs[9] = dom.createMorphAt(element0,17,17);\n        morphs[10] = dom.createMorphAt(element0,19,19);\n        morphs[11] = dom.createMorphAt(element0,21,21);\n        morphs[12] = dom.createMorphAt(element0,23,23);\n        morphs[13] = dom.createMorphAt(element0,25,25);\n        morphs[14] = dom.createMorphAt(element0,27,27);\n        morphs[15] = dom.createMorphAt(element0,29,29);\n        morphs[16] = dom.createMorphAt(element0,31,31);\n        morphs[17] = dom.createMorphAt(element0,33,33);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-grid\",[],[\"columns\",[\"subexpr\",\"@mut\",[[\"get\",\"columns\",[\"loc\",[null,[69,20],[69,27]]]]],[],[]],\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"sortedModel\",[\"loc\",[null,[70,20],[70,31]]]]],[],[]],\"detailComponent\",\"demos/sl-grid-detail\",\"detailFooterComponent\",\"demos/sl-grid-detail-footer\",\"detailHeaderComponent\",\"demos/sl-grid-detail-header\",\"footerPath\",\"demos/sl-grid/footer\",\"height\",400,\"rowActions\",[\"subexpr\",\"@mut\",[[\"get\",\"rowActions\",[\"loc\",[null,[76,23],[76,33]]]]],[],[]],\"sendLog\",[\"subexpr\",\"action\",[\"logName\"],[],[\"loc\",[null,[77,20],[77,38]]]],\"sortColumn\",\"sortColumn\",\"totalCount\",[\"subexpr\",\"@mut\",[[\"get\",\"totalCount\",[\"loc\",[null,[79,23],[79,33]]]]],[],[]]],0,null,[\"loc\",[null,[68,8],[82,20]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"columns\",\"type\",\"Array\",\"required\",true],1,null,[\"loc\",[null,[91,4],[102,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"content\",\"type\",\"Array\",\"required\",true],2,null,[\"loc\",[null,[104,4],[106,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"actionButtonLabel\",\"type\",\"String\",\"default\",\"\\\"Actions\\\"\"],3,null,[\"loc\",[null,[108,4],[110,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"continuous\",\"type\",\"Boolean\",\"default\",\"false\"],4,null,[\"loc\",[null,[112,4],[114,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"detailComponent\",\"type\",\"String\"],5,null,[\"loc\",[null,[116,4],[118,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"detailFooterComponent\",\"type\",\"String\"],6,null,[\"loc\",[null,[120,4],[122,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"detailHeaderComponent\",\"type\",\"String\"],7,null,[\"loc\",[null,[124,4],[126,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"filterButtonLabel\",\"type\",\"String\",\"default\",\"Filter\"],8,null,[\"loc\",[null,[128,4],[130,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"filterComponent\",\"type\",\"String\"],9,null,[\"loc\",[null,[132,4],[134,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"footerPath\",\"type\",\"String\"],10,null,[\"loc\",[null,[136,4],[138,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"height\",\"type\",\"Number/String\",\"default\",\"\\\"auto\\\"\"],11,null,[\"loc\",[null,[140,4],[142,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"pageSize\",\"type\",\"Number\",\"default\",\"25\"],12,null,[\"loc\",[null,[144,4],[148,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"requestData\",\"type\",\"String\"],13,null,[\"loc\",[null,[150,4],[156,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"rowActions\",\"type\",\"Array\"],14,null,[\"loc\",[null,[158,4],[203,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"rowClick\",\"type\",\"String\"],15,null,[\"loc\",[null,[205,4],[207,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"sortColumn\",\"type\",\"String\"],16,null,[\"loc\",[null,[209,4],[211,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"totalCount\",\"type\",\"Number\"],17,null,[\"loc\",[null,[213,4],[215,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-input', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 212,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 214,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An action to trigger when the input loses focus.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 216,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 219,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the input field will be styled similarly to inline text, but\\n        when clicked will allow editing.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 221,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 223,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, input is disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 225,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 227,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text to display below the input element.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 229,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 231,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        String for label text above the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 233,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 235,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 237,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 239,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect optional status. This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 241,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 243,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"placeholder\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 245,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 247,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 249,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 251,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"readonly\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 253,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 255,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect required status. This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 257,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 259,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The string lookup for each suggestion's \\\"name\\\" value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 261,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 263,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Array of objects used as typeahead suggestions. Each object must contain a key whose name matches the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"suggestionNamePath\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property value, which is \\\"name\\\" by default.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 265,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 267,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 269,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 271,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"type\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 273,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 275,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bound value of the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 277,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-input.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-input\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A wrapper component for <input>. See \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/css/#forms\");\n        var el3 = dom.createTextNode(\"Bootstrap - Forms\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" for details.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Input with label and helpText\\\"\\n    helpText=\\\"Help text content goes here\\\"\\n    placeholder=\\\"Enter some text\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Input with typeahead suggestions\\\"\\n    placeholder=\\\"Enter a Name\\\"\\n    suggestions=names\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"model: [\\n    names: [\\n        \\\"Jeff\\\",\\n        \\\"Michael\\\",\\n        \\\"Jeremy\\\"\\n    ]\\n]\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Input with typeahead suggestions using suggestionNamePath\\\"\\n    placeholder=\\\"Enter a color\\\"\\n    suggestions=colors\\n    suggestionNamePath=\\\"id\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"model: [\\n    colors: [\\n        { id: 'Black' },\\n        { id: 'Blue' },\\n        { id: 'Gray' },\\n        { id: 'Green' },\\n        { id: 'Orange' },\\n        { id: 'Purple' },\\n        { id: 'Red' },\\n        { id: 'White' },\\n        { id: \\\"Yellow\\\" }\\n    ]\\n]\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Disabled input\\\"\\n    disabled=true\\n    placeholder=\\\"You can't enter anything here\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Readonly input\\\"\\n    readonly=true\\n    value=\\\"Look but don't touch!\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Required input\\\"\\n    required=true\\n    placeholder=\\\"You'd better enter something here\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    label=\\\"Optional input\\\"\\n    optional=true\\n    placeholder=\\\"Meh, whatev\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input\\n    clickToEdit=true\\n    label=\\\"Click-to-edit input\\\"\\n    placeholder=\\\"Enter value\\\"\\n    value=\\\"Initial value\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-component-input-id\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-input-based\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [34]);\n        var morphs = new Array(24);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [12, 3]),3,3);\n        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [14, 3]),3,3);\n        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [16, 3]),3,3);\n        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [18, 3]),3,3);\n        morphs[6] = dom.createMorphAt(dom.childAt(fragment, [20, 3]),3,3);\n        morphs[7] = dom.createMorphAt(dom.childAt(fragment, [22, 3]),3,3);\n        morphs[8] = dom.createMorphAt(element0,1,1);\n        morphs[9] = dom.createMorphAt(element0,3,3);\n        morphs[10] = dom.createMorphAt(element0,5,5);\n        morphs[11] = dom.createMorphAt(element0,7,7);\n        morphs[12] = dom.createMorphAt(element0,9,9);\n        morphs[13] = dom.createMorphAt(element0,11,11);\n        morphs[14] = dom.createMorphAt(element0,13,13);\n        morphs[15] = dom.createMorphAt(element0,15,15);\n        morphs[16] = dom.createMorphAt(element0,17,17);\n        morphs[17] = dom.createMorphAt(element0,19,19);\n        morphs[18] = dom.createMorphAt(element0,21,21);\n        morphs[19] = dom.createMorphAt(element0,23,23);\n        morphs[20] = dom.createMorphAt(element0,25,25);\n        morphs[21] = dom.createMorphAt(element0,27,27);\n        morphs[22] = dom.createMorphAt(element0,29,29);\n        morphs[23] = dom.createMorphAt(element0,31,31);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-input\",[],[\"label\",\"Input with label and helpText\",\"helpText\",\"Help text content goes here\",\"placeholder\",\"Enter some text\"],[\"loc\",[null,[20,8],[24,10]]]],\n        [\"inline\",\"sl-input\",[],[\"label\",\"Input with typeahead suggestions\",\"placeholder\",\"Enter a Name\",\"suggestions\",[\"subexpr\",\"@mut\",[[\"get\",\"names\",[\"loc\",[null,[51,24],[51,29]]]]],[],[]]],[\"loc\",[null,[48,8],[52,10]]]],\n        [\"inline\",\"sl-input\",[],[\"label\",\"Input with typeahead suggestions using suggestionNamePath\",\"placeholder\",\"Enter a color\",\"suggestions\",[\"subexpr\",\"@mut\",[[\"get\",\"colors\",[\"loc\",[null,[86,24],[86,30]]]]],[],[]],\"suggestionNamePath\",\"id\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"colorValue\",[\"loc\",[null,[88,18],[88,28]]]]],[],[]]],[\"loc\",[null,[83,8],[89,10]]]],\n        [\"inline\",\"sl-input\",[],[\"label\",\"Disabled input\",\"disabled\",true,\"placeholder\",\"You can't enter anything here\"],[\"loc\",[null,[105,8],[109,10]]]],\n        [\"inline\",\"sl-input\",[],[\"label\",\"Readonly input\",\"readonly\",true,\"value\",\"Look but don't touch!\"],[\"loc\",[null,[125,8],[129,10]]]],\n        [\"inline\",\"sl-input\",[],[\"label\",\"Required input\",\"required\",true,\"placeholder\",\"You'd better enter something here\"],[\"loc\",[null,[145,8],[149,10]]]],\n        [\"inline\",\"sl-input\",[],[\"label\",\"Optional input\",\"optional\",true,\"placeholder\",\"Meh, whatev\"],[\"loc\",[null,[165,8],[169,10]]]],\n        [\"inline\",\"sl-input\",[],[\"clickToEdit\",true,\"label\",\"Click-to-edit input\",\"placeholder\",\"Enter value\",\"value\",\"Initial value\"],[\"loc\",[null,[186,8],[191,10]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"blur\",\"type\",\"String\"],0,null,[\"loc\",[null,[212,4],[214,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"clickToEdit\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[216,4],[219,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],2,null,[\"loc\",[null,[221,4],[223,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"helpText\",\"type\",\"String\"],3,null,[\"loc\",[null,[225,4],[227,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],4,null,[\"loc\",[null,[229,4],[231,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\"],5,null,[\"loc\",[null,[233,4],[235,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optional\",\"type\",\"Boolean\",\"default\",\"false\"],6,null,[\"loc\",[null,[237,4],[239,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"placeholder\",\"type\",\"String\"],7,null,[\"loc\",[null,[241,4],[243,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],8,null,[\"loc\",[null,[245,4],[247,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"readonly\",\"type\",\"Boolean\",\"default\",\"false\"],9,null,[\"loc\",[null,[249,4],[251,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"required\",\"type\",\"Boolean\",\"default\",\"false\"],10,null,[\"loc\",[null,[253,4],[255,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"suggestionNamePath\",\"type\",\"String\",\"default\",\"\\\"name\\\"\"],11,null,[\"loc\",[null,[257,4],[259,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"suggestions\",\"type\",\"Array\"],12,null,[\"loc\",[null,[261,4],[263,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],13,null,[\"loc\",[null,[265,4],[267,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"type\",\"type\",\"String\",\"default\",\"\\\"text\\\"\"],14,null,[\"loc\",[null,[269,4],[271,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"String\"],15,null,[\"loc\",[null,[273,4],[275,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-loading-icon', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 25,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 27,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-loading-icon.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, a light version of the icon will be used (useful with masks).\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 29,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-loading-icon.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-loading-icon\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A simple loading icon span.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-loading-icon}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [14]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"sl-loading-icon\",[\"loc\",[null,[16,8],[16,27]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"inverse\",\"type\",\"Boolean\",\"default\",\"false\"],0,null,[\"loc\",[null,[25,4],[27,22]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-menu', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 50,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 52,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name of an action to trigger whenever a sub-menu item's action is triggered. The action should accept \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"em\");\n          var el2 = dom.createTextNode(\"actionName\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" and \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"em\");\n          var el2 = dom.createTextNode(\"data\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" from the menu item.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 54,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 56,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the menu includes a show-all menu item.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 58,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 66,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"The array of menu items, each object member containing the following properties:\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"action\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - A \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"string\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" name of an action to pass back to the controller using the \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createTextNode(\"action\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" component binding\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"data\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - Any value to pass up through the action\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"label\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"String\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" text to display on the menu item link\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"items\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" - An \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createTextNode(\"array\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" for sub-menu items on this menu item (recursive structure)\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 68,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 70,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The name to register a stream with on the streamService. See \\\"Stream Actions\\\" below.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 79,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 81,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Trigger the currently selected item's \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"action\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\", sending its optional \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"data\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 83,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 85,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Trigger hiding all of the sub-menus\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 87,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 89,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Select an item by its index \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"em\");\n          var el2 = dom.createTextNode(\"{Number}\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" in the current selected context\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 91,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 96,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In the top-level menu, select the first item in the current selection's sub-menu\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In a sub-menu, select the next sibling item, wrapping around to the top when necessary\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 98,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 103,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In the top-level menu, select the previous sibling item\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In a sub-menu, select the parent menu\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 105,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 107,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Select the next sibling menu item, wrapping around the list when necessary\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 109,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 111,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Select the parent menu item\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 113,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 115,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Select the previous sibling menu item, wrapping around the list when necessary\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 117,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 122,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In the top-level menu, select the next sibling item\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In a sub-menu, select the first item in the current item's sub-menu\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 124,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 126,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Select the first item in the current item's sub-menu\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 128,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 134,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"In the top-level menu, do not select anything different\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"On the first item of the first level of sub-menu, select the parent item\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"On any other sub-menu item, select the previous sibling, wrapping around the list when necessary\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 136,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 138,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Trigger showing all of the menu items\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 139,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-menu.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-menu\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A component to build complex menu hierarchies.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-menu\\n    action=\\\"doSomething\\\"\\n    allowShowAll=true\\n    items=menuItems\\n    streamName=menuStreamName\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"This demo app showcases the following keybindings set up to trigger stream actions:\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Escape key: hideAll\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Key 0: showAll\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Keys 1-9: select( 0-8 )\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Tab: selectNext\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Shift+tab: selectPrevious\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Enter: doAction\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Up key: selectUp\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Left key: selectLeft\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Right key: selectRight\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Down key: selectDown\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createElement(\"strong\");\n        var el4 = dom.createTextNode(\"-\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" key: selectSubMenu\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        dom.setAttribute(el1,\"id\",\"stream-actions\");\n        var el2 = dom.createTextNode(\"Stream Actions\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"If the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"streamName\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" property is set on the component, it will register a stream named that value, listen for actions matching the following names, and act accordingly.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [18]);\n        var morphs = new Array(17);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(fragment,26,26,contextualElement);\n        morphs[6] = dom.createMorphAt(fragment,28,28,contextualElement);\n        morphs[7] = dom.createMorphAt(fragment,30,30,contextualElement);\n        morphs[8] = dom.createMorphAt(fragment,32,32,contextualElement);\n        morphs[9] = dom.createMorphAt(fragment,34,34,contextualElement);\n        morphs[10] = dom.createMorphAt(fragment,36,36,contextualElement);\n        morphs[11] = dom.createMorphAt(fragment,38,38,contextualElement);\n        morphs[12] = dom.createMorphAt(fragment,40,40,contextualElement);\n        morphs[13] = dom.createMorphAt(fragment,42,42,contextualElement);\n        morphs[14] = dom.createMorphAt(fragment,44,44,contextualElement);\n        morphs[15] = dom.createMorphAt(fragment,46,46,contextualElement);\n        morphs[16] = dom.createMorphAt(fragment,48,48,contextualElement);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-menu\",[],[\"action\",\"doSomething\",\"allowShowAll\",true,\"items\",[\"subexpr\",\"@mut\",[[\"get\",\"menuItems\",[\"loc\",[null,[24,18],[24,27]]]]],[],[]],\"streamName\",[\"subexpr\",\"@mut\",[[\"get\",\"menuStreamName\",[\"loc\",[null,[25,23],[25,37]]]]],[],[]]],[\"loc\",[null,[21,8],[26,10]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"action\",\"type\",\"String\"],0,null,[\"loc\",[null,[50,4],[52,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"allowShowAll\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[54,4],[56,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"items\",\"type\",\"Array\"],2,null,[\"loc\",[null,[58,4],[66,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"streamName\",\"type\",\"String\"],3,null,[\"loc\",[null,[68,4],[70,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"doAction\"],4,null,[\"loc\",[null,[79,0],[81,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"hideAll\"],5,null,[\"loc\",[null,[83,0],[85,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"select\"],6,null,[\"loc\",[null,[87,0],[89,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectDown\"],7,null,[\"loc\",[null,[91,0],[96,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectLeft\"],8,null,[\"loc\",[null,[98,0],[103,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectNext\"],9,null,[\"loc\",[null,[105,0],[107,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectParent\"],10,null,[\"loc\",[null,[109,0],[111,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectPrevious\"],11,null,[\"loc\",[null,[113,0],[115,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectRight\"],12,null,[\"loc\",[null,[117,0],[122,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectSubMenu\"],13,null,[\"loc\",[null,[124,0],[126,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectUp\"],14,null,[\"loc\",[null,[128,0],[134,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"showAll\"],15,null,[\"loc\",[null,[136,0],[138,18]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 26,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 28,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"A simple modal example\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 20,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 31,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(3);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"sl-modal-header\",[],[\"title\",\"Simple Example\",\"ariaLabelledBy\",[\"subexpr\",\"@mut\",[[\"get\",\"modal.ariaLabelledBy\",[\"loc\",[null,[23,31],[23,51]]]]],[],[]]],[\"loc\",[null,[21,12],[24,14]]]],\n          [\"block\",\"sl-modal-body\",[],[],0,null,[\"loc\",[null,[26,12],[28,30]]]],\n          [\"content\",\"sl-modal-footer\",[\"loc\",[null,[30,12],[30,31]]]]\n        ],\n        locals: [\"modal\"],\n        templates: [child0]\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 64,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 70,\n                \"column\": 4\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"close\");\n            dom.setAttribute(el1,\"data-dismiss\",\"modal\");\n            dom.setAttribute(el1,\"type\",\"button\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"span\");\n            dom.setAttribute(el2,\"aria-hidden\",\"true\");\n            dom.setAttribute(el2,\"class\",\"fa fa-close\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"span\");\n            dom.setAttribute(el2,\"class\",\"sr-only\");\n            var el3 = dom.createTextNode(\"close\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"custom header\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element0 = dom.childAt(fragment, [3]);\n            var morphs = new Array(1);\n            morphs[0] = dom.createAttrMorph(element0, 'id');\n            return morphs;\n          },\n          statements: [\n            [\"attribute\",\"id\",[\"get\",\"modal.ariaLabelledBy\",[\"loc\",[null,[69,39],[69,59]]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 72,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 74,\n                \"column\": 4\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"modal with a custom header close button\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(3);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);\n          morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"sl-modal-header\",[],[],0,null,[\"loc\",[null,[64,4],[70,24]]]],\n          [\"block\",\"sl-modal-body\",[],[],1,null,[\"loc\",[null,[72,4],[74,22]]]],\n          [\"content\",\"sl-modal-footer\",[\"loc\",[null,[76,4],[76,23]]]]\n        ],\n        locals: [\"modal\"],\n        templates: [child0, child1]\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 109,\n                \"column\": 16\n              },\n              \"end\": {\n                \"line\": 111,\n                \"column\": 16\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"Modal with multiple buttons in the footer\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 113,\n                \"column\": 16\n              },\n              \"end\": {\n                \"line\": 116,\n                \"column\": 16\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"button\");\n            dom.setAttribute(el1,\"class\",\"btn btn-default\");\n            dom.setAttribute(el1,\"data-dismiss\",\"modal\");\n            var el2 = dom.createTextNode(\"Close\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"button\");\n            dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n            var el2 = dom.createTextNode(\"Save changes\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 106,\n              \"column\": 12\n            },\n            \"end\": {\n              \"line\": 117,\n              \"column\": 12\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(3);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"sl-modal-header\",[],[\"title\",\"Custom Footer\"],[\"loc\",[null,[107,16],[107,57]]]],\n          [\"block\",\"sl-modal-body\",[],[],0,null,[\"loc\",[null,[109,16],[111,34]]]],\n          [\"block\",\"sl-modal-footer\",[],[],1,null,[\"loc\",[null,[113,16],[116,36]]]]\n        ],\n        locals: [],\n        templates: [child0, child1]\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 133,\n              \"column\": 41\n            },\n            \"end\": {\n              \"line\": 133,\n              \"column\": 80\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-button\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 141,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 143,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Action to call after modal is shown.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 145,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 147,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Action to call after modal is shown.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 149,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 151,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Whether to animate opening and closing of modal.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 153,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 155,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Whether to show backdrop.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 157,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 159,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Action to call after modal is shown.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 161,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 163,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Action to call after modal is shown.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 165,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 167,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    The name to register a stream with on the streamService. See \\\"Stream Actions\\\" below.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 173,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 175,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Title of the modal.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 180,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 182,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Close button text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 187,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 189,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    This attribute is automatically rendered as \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"role=\\\"dialog\\\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 191,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 193,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    This attribute is automatically rendered as \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"aria-hidden=\\\"true\\\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 195,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 218,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\" This attribute is automatically rendered as \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"aria-labelledby=\\\"X\\\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\", where X is a string composed of the value modalTitle- followed by a random number.  If you set the context \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"as |modal|\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" in the sl-modal opening handlebar statement and pass in \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"title=\\\"Simple Example\\\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" and \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"ariaLabelledBy=modal.ariaLabelledBy\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"to the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"sl-modal-header\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" component, the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"aria-labelledby\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" attribute will automatically point to the id of the title element. If you do not pass in a title and are \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"em\");\n          var el3 = dom.createTextNode(\"not\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" using a custom header, the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"aria-labelledby\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" attribute will not be present.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"If you would like to use a custom header you will need to identify a section of text that serves as the label for this dialog and give it the same id value assigned to the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"aria-labelledby\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" attribute.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"The example below illustrates how to bind the value of the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"ariaLabelledBy\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" property to the id of a target element using \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"id=\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"{{modal.ariaLabelledBy}}\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\".\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"pre\");\n          var el2 = dom.createTextNode(\"{{#sl-modal name=\\\"labelledbyDemo\\\" as |modal|}}\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{#sl-modal-header}}\\n        <button class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\n            <span aria-hidden=\\\"true\\\" class=\\\"fa fa-close\\\"></span>\\n            <span class=\\\"sr-only\\\">Close</span>\\n        </button>\\n        <span class=\\\"modal-title\\\" id=\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{modal.ariaLabelledBy}}>Custom Header</span>\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{/sl-modal-header}}\\n\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{#sl-modal-body}}\\n       <p>Modal with a custom header</p>\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{/sl-modal-body}}\\n\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{sl-modal-footer}}\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{/sl-modal}}\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 220,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 235,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"The \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"ariaDescribedBy\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" property can be set on the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"sl-modal\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" component. Once this property is set, you will need to provide an element with a section of text whose \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"id\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" attribute corresponds to the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"ariaDescribedBy\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" property set on the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"sl-modal\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" component, as shown in the code below.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"pre\");\n          var el2 = dom.createTextNode(\"{{#sl-modal name=\\\"describedbyDemo\\\" ariaDescribedBy=\\\"modalDescription\\\"}}\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{#sl-modal-header}}\\n       <span id=\\\"modalDescription\\\">A description of the modal</span>\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{/sl-modal-header}}\\n\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{#sl-modal-body}}\\n       <p>Modal showing describedby usage</p>\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{/sl-modal-body}}\\n\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{sl-modal-footer}}\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"{{/sl-modal}}\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 243,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 245,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Trigger to hide the modal\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child18 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 247,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 249,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    Trigger to show the modal\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 250,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-modal.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-modal\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A modal component used to wrap content in. Based on \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/javascript/#modals\");\n        var el3 = dom.createTextNode(\"Bootstrap - Modals\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"id\",\"simple\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-lg-8\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h6\");\n        var el5 = dom.createTextNode(\"Simple usage\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"pre\");\n        var el5 = dom.createTextNode(\"{{#sl-modal streamName=\\\"demoModal\\\" as |modal|}}\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{sl-modal-header title=\\\"Simple Example\\\" ariaLabelledBy=modal.ariaLabelledBy}}\\n\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{#sl-modal-body}}\\n         <p>A simple modal example</p>\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal-body}}\\n\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{sl-modal-footer}}\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal}} \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-lg-4\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h6\");\n        var el5 = dom.createTextNode(\"Click to Show Component\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-lg-8\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h6\");\n        var el5 = dom.createTextNode(\"Custom header\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"pre\");\n        var el5 = dom.createTextNode(\"{{#sl-modal streamName=\\\"customHeader\\\" as |modal|}}\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{#sl-modal-header}}\\n        <button class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\n            <span aria-hidden=\\\"true\\\" class=\\\"fa fa-close\\\"></span>\\n            <span class=\\\"sr-only\\\">Close</span>\\n        </button>\\n        <span class=\\\"modal-title\\\" id=\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{modal.ariaLabelledBy}}>Custom Header</span>\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal-header}}\\n\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{#sl-modal-body}}\\n         <p>A custom header and close button</p>\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal-body}}\\n\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{sl-modal-footer}}\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal}}\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-lg-4\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h6\");\n        var el5 = dom.createTextNode(\"Click to Show Component\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-lg-8\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h6\");\n        var el5 = dom.createTextNode(\"Custom footer with multiple buttons\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"pre\");\n        var el5 = dom.createTextNode(\"{{#sl-modal streamName=\\\"customFooter\\\"}}\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{sl-modal-header title=\\\"Custom Footer\\\"}}\\n\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{#sl-modal-body}}\\n         <p>Custom footer with multiple buttons</p>\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal-body}}\\n\\n    \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{#sl-modal-footer}}\\n         <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n         <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n   \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal-footer}}\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"{{/sl-modal}}\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-lg-4\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h6\");\n        var el5 = dom.createTextNode(\"Click to Show Component\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h2\");\n        var el3 = dom.createTextNode(\"Triggering a modal to open using a sl-button\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"The code below shows how to use a \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" to trigger a modal with a name of \\\"demo\\\" to open, when clicked.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Pass in the name of the modal as the value to the \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"showModalWithStreamName\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" property.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"pre\");\n        var el3 = dom.createTextNode(\" \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"{{sl-button showModalWithStreamName=\\\"demo\\\" label=\\\"Open Modal\\\"}}\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-modal Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-modal-header Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-modal-footer Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"ARIA Support\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Stream Actions\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"If the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"streamName\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" property is set on the component, it will register a stream named that value, listen for actions matching the following names, and act accordingly.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [8, 1]);\n        var element2 = dom.childAt(fragment, [10, 1]);\n        var element3 = dom.childAt(fragment, [12, 1]);\n        var morphs = new Array(22);\n        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),5,5);\n        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]),3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]),5,5);\n        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3]),3,3);\n        morphs[4] = dom.createMorphAt(dom.childAt(element3, [1]),5,5);\n        morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]),3,3);\n        morphs[6] = dom.createMorphAt(dom.childAt(fragment, [16, 3]),1,1);\n        morphs[7] = dom.createMorphAt(fragment,22,22,contextualElement);\n        morphs[8] = dom.createMorphAt(fragment,24,24,contextualElement);\n        morphs[9] = dom.createMorphAt(fragment,26,26,contextualElement);\n        morphs[10] = dom.createMorphAt(fragment,28,28,contextualElement);\n        morphs[11] = dom.createMorphAt(fragment,30,30,contextualElement);\n        morphs[12] = dom.createMorphAt(fragment,32,32,contextualElement);\n        morphs[13] = dom.createMorphAt(fragment,34,34,contextualElement);\n        morphs[14] = dom.createMorphAt(fragment,40,40,contextualElement);\n        morphs[15] = dom.createMorphAt(fragment,46,46,contextualElement);\n        morphs[16] = dom.createMorphAt(fragment,52,52,contextualElement);\n        morphs[17] = dom.createMorphAt(fragment,54,54,contextualElement);\n        morphs[18] = dom.createMorphAt(fragment,56,56,contextualElement);\n        morphs[19] = dom.createMorphAt(fragment,58,58,contextualElement);\n        morphs[20] = dom.createMorphAt(fragment,66,66,contextualElement);\n        morphs[21] = dom.createMorphAt(fragment,68,68,contextualElement);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-modal\",[],[\"streamName\",\"demoModal\"],0,null,[\"loc\",[null,[20,8],[31,21]]]],\n        [\"inline\",\"sl-button\",[],[\"label\",\"Open Modal\",\"showModalWithStreamName\",\"demoModal\"],[\"loc\",[null,[35,12],[38,14]]]],\n        [\"block\",\"sl-modal\",[],[\"streamName\",\"customHeader\"],1,null,[\"loc\",[null,[63,0],[77,13]]]],\n        [\"inline\",\"sl-button\",[],[\"label\",\"Open Modal\",\"showModalWithStreamName\",\"customHeader\"],[\"loc\",[null,[81,12],[84,14]]]],\n        [\"block\",\"sl-modal\",[],[\"streamName\",\"customFooter\"],2,null,[\"loc\",[null,[106,12],[117,25]]]],\n        [\"inline\",\"sl-button\",[],[\"label\",\"Open Modal\",\"showModalWithStreamName\",\"customFooter\"],[\"loc\",[null,[121,12],[124,14]]]],\n        [\"block\",\"link-to\",[\"demos.sl-button\"],[],3,null,[\"loc\",[null,[133,41],[133,92]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"afterHide\",\"type\",\"Function\"],4,null,[\"loc\",[null,[141,0],[143,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"afterShow\",\"type\",\"Function\"],5,null,[\"loc\",[null,[145,0],[147,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"animated\",\"type\",\"Boolean\",\"default\",\"true\"],6,null,[\"loc\",[null,[149,0],[151,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"backdrop\",\"type\",\"Boolean\",\"default\",\"true\"],7,null,[\"loc\",[null,[153,0],[155,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"beforeHide\",\"type\",\"Function\"],8,null,[\"loc\",[null,[157,0],[159,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"beforeShow\",\"type\",\"Function\"],9,null,[\"loc\",[null,[161,0],[163,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"streamName\",\"type\",\"String\"],10,null,[\"loc\",[null,[165,0],[167,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],11,null,[\"loc\",[null,[173,0],[175,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"buttonText\",\"type\",\"String\",\"default\",\"Close\"],12,null,[\"loc\",[null,[180,0],[182,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"role\"],13,null,[\"loc\",[null,[187,0],[189,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"aria-hidden\"],14,null,[\"loc\",[null,[191,0],[193,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"aria-labelledby\"],15,null,[\"loc\",[null,[195,0],[218,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"aria-describedby\"],16,null,[\"loc\",[null,[220,0],[235,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"hide\"],17,null,[\"loc\",[null,[243,0],[245,18]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"show\"],18,null,[\"loc\",[null,[247,0],[249,18]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17, child18]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-pagination', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 24,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 26,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The total number of pages.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 28,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 30,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the state of the pagination component will not change.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 32,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 34,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An action triggered when the currentPage value is changed. The page number changed to is sent to the action.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 36,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 38,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The current page bound value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 40,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 42,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An action triggered when the page is incremented successfully. The action is passed the new page number.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 44,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 46,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        An action triggered when the page is decremented successfully. The action is passed the new page number.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 48,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-pagination.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-pagination\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A component used for displaying and controlling pages of content.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-pagination changePage=\\\"changePage\\\" totalPages=5}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [14]);\n        var morphs = new Array(7);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        morphs[4] = dom.createMorphAt(element0,7,7);\n        morphs[5] = dom.createMorphAt(element0,9,9);\n        morphs[6] = dom.createMorphAt(element0,11,11);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-pagination\",[],[\"changePage\",\"changePage\",\"totalPages\",5],[\"loc\",[null,[15,8],[15,62]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"totalPages\",\"required\",true,\"type\",\"Number\"],0,null,[\"loc\",[null,[24,4],[26,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"busy\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[28,4],[30,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"changePage\",\"type\",\"String\"],2,null,[\"loc\",[null,[32,4],[34,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"currentPage\",\"type\",\"Number\",\"default\",\"1\"],3,null,[\"loc\",[null,[36,4],[38,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"nextPage\",\"type\",\"String\"],4,null,[\"loc\",[null,[40,4],[42,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"previousPage\",\"type\",\"String\"],5,null,[\"loc\",[null,[44,4],[46,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-panel', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 18,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 20,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"Hello world!\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 29,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 31,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text for the panel heading.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 33,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the panel body becomes masked and a loading icon appears.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 37,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-panel.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-panel\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A basic content wrapper for \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/components/#panels\");\n        var el3 = dom.createTextNode(\"Bootstrap - Panels\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-panel heading=\\\"Test Panel\\\"}}\\n    <p>Hello world!</p>\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-panel}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [14]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-panel\",[],[\"heading\",\"Test Panel\"],0,null,[\"loc\",[null,[18,8],[20,21]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"heading\",\"type\",\"String\"],1,null,[\"loc\",[null,[29,4],[31,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"loading\",\"type\",\"Boolean\",\"default\",\"false\"],2,null,[\"loc\",[null,[33,4],[35,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-progress-bar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 96,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 98,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the striped progress bar will be animated.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 100,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 102,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, label text is shown over the bar.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 104,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 106,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 108,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 110,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the progress bar will be striped.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 112,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 114,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The Bootstrap contextual theme string to style the progress bar with.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 116,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 118,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip content text, or popover title text when \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"popover\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property is set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 120,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 122,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The bound integer value for the progress (1-100).\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 124,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-progress-bar.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-progress-bar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"Component for integer-based progress bar.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-progress-bar label=true value=60}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-progress-bar label=true theme=\\\"success\\\" value=40}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-progress-bar striped=true theme=\\\"warning\\\" value=70}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-progress-bar\\n    animated=true\\n    label=true\\n    striped=true\\n    theme=\\\"danger\\\"\\n    value=90\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-input type=\\\"Number\\\" value=dynamicValue}}\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-progress-bar label=true value=dynamicValue}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        Dynamic value input: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        sl-tooltip-enabled\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"group-list\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [16, 3]);\n        var element1 = dom.childAt(fragment, [28]);\n        var morphs = new Array(13);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [12, 3]),3,3);\n        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [14, 3]),3,3);\n        morphs[4] = dom.createMorphAt(element0,3,3);\n        morphs[5] = dom.createMorphAt(element0,5,5);\n        morphs[6] = dom.createMorphAt(element1,1,1);\n        morphs[7] = dom.createMorphAt(element1,3,3);\n        morphs[8] = dom.createMorphAt(element1,5,5);\n        morphs[9] = dom.createMorphAt(element1,7,7);\n        morphs[10] = dom.createMorphAt(element1,9,9);\n        morphs[11] = dom.createMorphAt(element1,11,11);\n        morphs[12] = dom.createMorphAt(element1,13,13);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-progress-bar\",[],[\"label\",true,\"value\",60],[\"loc\",[null,[16,8],[16,47]]]],\n        [\"inline\",\"sl-progress-bar\",[],[\"label\",true,\"theme\",\"success\",\"value\",40],[\"loc\",[null,[28,8],[28,63]]]],\n        [\"inline\",\"sl-progress-bar\",[],[\"striped\",true,\"theme\",\"warning\",\"value\",70],[\"loc\",[null,[40,8],[40,65]]]],\n        [\"inline\",\"sl-progress-bar\",[],[\"animated\",true,\"label\",true,\"striped\",true,\"theme\",\"danger\",\"value\",90],[\"loc\",[null,[57,8],[63,10]]]],\n        [\"inline\",\"sl-input\",[],[\"type\",\"Number\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"dynamicValue\",[\"loc\",[null,[76,60],[76,72]]]]],[],[]]],[\"loc\",[null,[76,29],[76,74]]]],\n        [\"inline\",\"sl-progress-bar\",[],[\"label\",true,\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"dynamicValue\",[\"loc\",[null,[77,43],[77,55]]]]],[],[]]],[\"loc\",[null,[77,8],[77,57]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"animated\",\"type\",\"Boolean\",\"default\",\"false\",\"requires\",\"striped=true\"],0,null,[\"loc\",[null,[96,4],[98,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[100,4],[102,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],2,null,[\"loc\",[null,[104,4],[106,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"striped\",\"type\",\"Boolean\",\"default\",\"false\"],3,null,[\"loc\",[null,[108,4],[110,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"theme\",\"type\",\"String\",\"default\",\"\\\"default\\\"\"],4,null,[\"loc\",[null,[112,4],[114,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],5,null,[\"loc\",[null,[116,4],[118,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"Number\"],6,null,[\"loc\",[null,[120,4],[122,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-radio-group', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 93\n            },\n            \"end\": {\n              \"line\": 4,\n              \"column\": 130\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"sl-radio\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 27,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 36,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(4);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);\n          morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"sl-radio\",[],[\"label\",\"Red\",\"value\",\"red\"],[\"loc\",[null,[32,12],[32,48]]]],\n          [\"inline\",\"sl-radio\",[],[\"label\",\"Green\",\"value\",\"green\"],[\"loc\",[null,[33,12],[33,52]]]],\n          [\"inline\",\"sl-radio\",[],[\"label\",\"Blue\",\"value\",\"blue\"],[\"loc\",[null,[34,12],[34,50]]]],\n          [\"inline\",\"sl-radio\",[],[\"label\",\"Splorge\",\"disabled\",true],[\"loc\",[null,[35,12],[35,54]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 58,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 61,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"Shared \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"name\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" attribute for the radio inputs.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"NOTE: This property will overwrite all child \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"em\");\n          var el3 = dom.createTextNode(\"sl-radio\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"s' \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"name\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" values.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 66,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"When true, all child radio inputs will be disabled.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"NOTE: When true, this property overrides all child \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"em\");\n          var el3 = dom.createTextNode(\"sl-radio\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"s' \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"disabled\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" values.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 68,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 73,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"When true, all child radio inputs will be displayed inline.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"When false, all child radio inputs will not be displayed inline.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"NOTE: When true or false, this property will overwrite all child \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"em\");\n          var el3 = dom.createTextNode(\"sl-radio\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"s' \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"inline\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" values.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 75,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text label for radio group as a whole.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 79,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 81,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect optional status.  This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 83,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 85,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 87,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 89,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect required status.  This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 91,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 93,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 95,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 97,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bound value for the radiogroup component.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 99,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-radio-group.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-radio-group\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A component that contains a group of \\\"radio\\\" type inputs. See \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/css/#forms-controls\");\n        var el3 = dom.createTextNode(\"Bootstrap - Supported controls\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"The \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"em\");\n        var el3 = dom.createTextNode(\"sl-radio-group\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" component wraps a number of \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"em\");\n        var el3 = dom.createTextNode(\"sl-radio\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" components. See \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" for radio-specific options.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-radio-group\\n    label=\\\"Color selection\\\"\\n    name=\\\"colorRadio\\\"\\n    value=currentColor\\n}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-radio label=\\\"Red\\\" value=\\\"red\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-radio label=\\\"Green\\\" value=\\\"green\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-radio label=\\\"Blue\\\" value=\\\"blue\\\"}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-radio label=\\\"Splorge\\\" disabled=true}}\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-radio-group}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Current color: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-input-based\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-radio-group Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [10, 3]);\n        var element1 = dom.childAt(fragment, [22]);\n        var morphs = new Array(12);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [4]),5,5);\n        morphs[1] = dom.createMorphAt(element0,3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n        morphs[3] = dom.createMorphAt(element1,1,1);\n        morphs[4] = dom.createMorphAt(element1,3,3);\n        morphs[5] = dom.createMorphAt(element1,5,5);\n        morphs[6] = dom.createMorphAt(element1,7,7);\n        morphs[7] = dom.createMorphAt(element1,9,9);\n        morphs[8] = dom.createMorphAt(element1,11,11);\n        morphs[9] = dom.createMorphAt(element1,13,13);\n        morphs[10] = dom.createMorphAt(element1,15,15);\n        morphs[11] = dom.createMorphAt(element1,17,17);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"demos.sl-radio\"],[],0,null,[\"loc\",[null,[4,93],[4,142]]]],\n        [\"block\",\"sl-radio-group\",[],[\"label\",\"Color selection\",\"name\",\"colorRadio\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"currentColor\",[\"loc\",[null,[30,18],[30,30]]]]],[],[]]],1,null,[\"loc\",[null,[27,8],[36,27]]]],\n        [\"content\",\"currentColor\",[\"loc\",[null,[38,27],[38,43]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\",\"required\",true],2,null,[\"loc\",[null,[58,4],[61,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],3,null,[\"loc\",[null,[63,4],[66,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"inline\",\"type\",\"Boolean\",\"default\",\"null\"],4,null,[\"loc\",[null,[68,4],[73,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],5,null,[\"loc\",[null,[75,4],[77,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optional\",\"type\",\"Boolean\",\"default\",\"false\"],6,null,[\"loc\",[null,[79,4],[81,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],7,null,[\"loc\",[null,[83,4],[85,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"required\",\"type\",\"Boolean\",\"default\",\"false\"],8,null,[\"loc\",[null,[87,4],[89,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],9,null,[\"loc\",[null,[91,4],[93,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"String\"],10,null,[\"loc\",[null,[95,4],[97,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-radio', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 47,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 49,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the radio button will be disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 51,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 53,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Display the radio inputs inline with each other.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 55,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 57,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text label for the button.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 59,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 61,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the button.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-radio.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bound value for the radio button.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 67,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-radio.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-radio\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"Individual radio button component.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-radio inline=true label=\\\"Test radio button\\\"}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-radio disabled=true label=\\\"Disabled radio button\\\"}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-input-based\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [22]);\n        var morphs = new Array(7);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(element0,1,1);\n        morphs[3] = dom.createMorphAt(element0,3,3);\n        morphs[4] = dom.createMorphAt(element0,5,5);\n        morphs[5] = dom.createMorphAt(element0,7,7);\n        morphs[6] = dom.createMorphAt(element0,9,9);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-radio\",[],[\"inline\",true,\"label\",\"Test radio button\"],[\"loc\",[null,[16,8],[16,58]]]],\n        [\"inline\",\"sl-radio\",[],[\"disabled\",true,\"label\",\"Disabled radio button\"],[\"loc\",[null,[28,8],[28,64]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],0,null,[\"loc\",[null,[47,4],[49,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"inline\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[51,4],[53,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],2,null,[\"loc\",[null,[55,4],[57,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\"],3,null,[\"loc\",[null,[59,4],[61,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"String\"],4,null,[\"loc\",[null,[63,4],[65,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-select', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 68,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 74,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bound content for the select's options. Each item can be one of the following:\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"A native value (number, string, etc.) which becomes the option's label and value\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"An object containing values for the option's label, value, and (optional) description. The lookup keys for these values are defined by \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createTextNode(\"optionDescriptionPath\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\", \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createTextNode(\"optionLabelPath\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\", and \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createTextNode(\"optionValuePath\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\".\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 76,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 78,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Disables the search filter.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 80,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 82,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, input is disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 84,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 86,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Help text to display below the select input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 88,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 90,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text label for the select input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 92,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 94,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The maximum number of selections allowed when \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"multiple=true\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\".  By default there is no maximum value enforced.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 96,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 98,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Enables multiple selections.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 100,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 102,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 104,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 106,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Option's description field path.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 108,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 110,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Option's label field path.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 112,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 114,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Option's value field path.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 116,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 118,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect optional status.  This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 120,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 122,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"placeholder\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the select.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 124,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 126,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 128,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 130,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"readonly\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 132,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 134,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect required status.  This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 136,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 138,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 140,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 142,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Bound value to the selected value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 144,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-select.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-select\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A full-featured select input component. Based on \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://ivaynberg.github.io/select2/\");\n        var el3 = dom.createTextNode(\"Select2\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-select\\n    content=content\\n    label=\\\"Single item select\\\"\\n    placeholder=\\\"Select a color\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-select\\n    content=numbers\\n    disableSearch=true\\n    label=\\\"Multiple number select, no search\\\"\\n    multiple=true\\n    placeholder=\\\"Select number(s)\\\"\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-input-based\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [22]);\n        var morphs = new Array(20);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(element0,1,1);\n        morphs[3] = dom.createMorphAt(element0,3,3);\n        morphs[4] = dom.createMorphAt(element0,5,5);\n        morphs[5] = dom.createMorphAt(element0,7,7);\n        morphs[6] = dom.createMorphAt(element0,9,9);\n        morphs[7] = dom.createMorphAt(element0,11,11);\n        morphs[8] = dom.createMorphAt(element0,13,13);\n        morphs[9] = dom.createMorphAt(element0,15,15);\n        morphs[10] = dom.createMorphAt(element0,17,17);\n        morphs[11] = dom.createMorphAt(element0,19,19);\n        morphs[12] = dom.createMorphAt(element0,21,21);\n        morphs[13] = dom.createMorphAt(element0,23,23);\n        morphs[14] = dom.createMorphAt(element0,25,25);\n        morphs[15] = dom.createMorphAt(element0,27,27);\n        morphs[16] = dom.createMorphAt(element0,29,29);\n        morphs[17] = dom.createMorphAt(element0,31,31);\n        morphs[18] = dom.createMorphAt(element0,33,33);\n        morphs[19] = dom.createMorphAt(element0,35,35);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-select\",[],[\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"content\",[\"loc\",[null,[21,20],[21,27]]]]],[],[]],\"label\",\"Single item select\",\"placeholder\",\"Select a color\"],[\"loc\",[null,[20,8],[24,10]]]],\n        [\"inline\",\"sl-select\",[],[\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"numbers\",[\"loc\",[null,[43,20],[43,27]]]]],[],[]],\"disableSearch\",true,\"label\",\"Multiple number select, no search\",\"multiple\",true,\"placeholder\",\"Select number(s)\"],[\"loc\",[null,[42,8],[48,10]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"content\",\"required\",true,\"type\",\"Array\"],0,null,[\"loc\",[null,[68,4],[74,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disableSearch\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[76,4],[78,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],2,null,[\"loc\",[null,[80,4],[82,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"helpText\",\"type\",\"String\"],3,null,[\"loc\",[null,[84,4],[86,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],4,null,[\"loc\",[null,[88,4],[90,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"maximumSelectionSize\",\"type\",\"Number\",\"default\",\"null\"],5,null,[\"loc\",[null,[92,4],[94,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"multiple\",\"type\",\"Boolean\",\"default\",\"false\"],6,null,[\"loc\",[null,[96,4],[98,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\"],7,null,[\"loc\",[null,[100,4],[102,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optionDescriptionPath\",\"type\",\"String\",\"default\",\"\\\"description\\\"\"],8,null,[\"loc\",[null,[104,4],[106,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optionLabelPath\",\"type\",\"String\",\"default\",\"\\\"label\\\"\"],9,null,[\"loc\",[null,[108,4],[110,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optionValuePath\",\"type\",\"String\",\"default\",\"\\\"value\\\"\"],10,null,[\"loc\",[null,[112,4],[114,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optional\",\"type\",\"Boolean\",\"default\",\"false\"],11,null,[\"loc\",[null,[116,4],[118,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"placeholder\",\"type\",\"String\"],12,null,[\"loc\",[null,[120,4],[122,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],13,null,[\"loc\",[null,[124,4],[126,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"readonly\",\"type\",\"Boolean\",\"default\",\"false\"],14,null,[\"loc\",[null,[128,4],[130,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"required\",\"type\",\"Boolean\",\"default\",\"false\"],15,null,[\"loc\",[null,[132,4],[134,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],16,null,[\"loc\",[null,[136,4],[138,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"Array/String\"],17,null,[\"loc\",[null,[140,4],[142,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-span', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 33,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-span.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"class\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute to apply to the span.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 37,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 39,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-span.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, a loading icon will be displayed in place of content.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 41,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 43,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-span.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The value to display once loaded/ready.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 45,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-span.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-span\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A wrapper to intelligently represent state for inline content.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"<p>\\n    Loads in 5 seconds:&emsp;\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{sl-span\\n        class=\\\"text-success\\\"\\n        loading=isLoading\\n        value=\\\"Done!\\\"\\n    }}\\n</p>\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Note: This component does not provide a time-delay mechanism.  The 5 second time delay represented in the example is implemented in the demonstration controller and is employed to emulate the waiting for a promise to be resolved in order to demonstrate the loading state of this component and the final display of the resolved data value.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Loads in 5 seconds: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [14]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3, 3]),1,1);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element0,5,5);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-span\",[],[\"class\",\"text-success\",\"loading\",[\"subexpr\",\"@mut\",[[\"get\",\"isLoading\",[\"loc\",[null,[24,75],[24,84]]]]],[],[]],\"value\",\"Done!\"],[\"loc\",[null,[24,36],[24,100]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"class\",\"type\",\"String\"],0,null,[\"loc\",[null,[33,4],[35,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"loading\",\"type\",\"Boolean\",\"default\",\"false\"],1,null,[\"loc\",[null,[37,4],[39,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"String\"],2,null,[\"loc\",[null,[41,4],[43,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-tab-panel', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 29,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 31,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"demos/tabs/tab-one\",[\"loc\",[null,[30,16],[30,38]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 33,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 35,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"demos/tabs/tab-two\",[\"loc\",[null,[34,16],[34,38]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child2 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 37,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 39,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"Content for tab three!\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 28,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 40,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(3);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);\n          morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"sl-tab-pane\",[],[\"label\",\"One\",\"name\",\"one\"],0,null,[\"loc\",[null,[29,12],[31,28]]]],\n          [\"block\",\"sl-tab-pane\",[],[\"label\",\"Two\",\"name\",\"two\"],1,null,[\"loc\",[null,[33,12],[35,28]]]],\n          [\"block\",\"sl-tab-pane\",[],[\"label\",\"Three\",\"name\",\"three\"],2,null,[\"loc\",[null,[37,12],[39,28]]]]\n        ],\n        locals: [],\n        templates: [child0, child1, child2]\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 49,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 51,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        How to align the tabs, \\\"left\\\" or \\\"right\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 53,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 55,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Name of the initial active tab. This value corresponds to the value set on the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property of the sl-tab-pane component. If omitted, the first tab pane will be open on initialization.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The text label for the tab pane's tab.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 71,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"This value is never displayed in the tabs.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"Used to set the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"data-tab-name\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" attribute on the tab and used internally by the component to manage tab selection.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"The name provided can be specified in the \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"code\");\n          var el3 = dom.createTextNode(\"initialTabName\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" property of the sl-tab-panel component to indicate which tab should be active when initially displayed.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 73,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-tab-panel.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-tab-panel\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A component with selectable tabs and related tab panes. Based on \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/javascript/#tabs\");\n        var el3 = dom.createTextNode(\"Bootstrap - Togglable tabs\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-tab-panel}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{#sl-tab-pane label=\\\"One\\\" name=\\\"one\\\"}}\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{demos/tabs/tab-one}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-tab-pane}}\\n\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{#sl-tab-pane label=\\\"Two\\\" name=\\\"two\\\"}}\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{demos/tabs/tab-two}}\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-tab-pane}}\\n\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{#sl-tab-pane label=\\\"Three\\\" name=\\\"three\\\"}}\\n        <p>Content for tab three!</p>\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-tab-pane}}\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-tab-panel}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-tab-panel Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"sl-tab-pane Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [14]);\n        var element1 = dom.childAt(fragment, [20]);\n        var morphs = new Array(5);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        morphs[3] = dom.createMorphAt(element1,1,1);\n        morphs[4] = dom.createMorphAt(element1,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-tab-panel\",[],[],0,null,[\"loc\",[null,[28,8],[40,25]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"alignTabs\",\"type\",\"String\",\"default\",\"\\\"left\\\"\"],1,null,[\"loc\",[null,[49,4],[51,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"initialTabName\",\"type\",\"String\"],2,null,[\"loc\",[null,[53,4],[55,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\",\"required\",true],3,null,[\"loc\",[null,[63,4],[65,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\",\"required\",true],4,null,[\"loc\",[null,[67,4],[71,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-textarea', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"autofocus\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" HTML attribute value, passed directly to the underlying <textarea>.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 71,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 73,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"cols\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 75,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the textarea is disabled.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 79,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 81,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Text to display below the textarea.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child4 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 83,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 85,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        String for label text above the input.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child5 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 87,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 89,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"maxlength\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child6 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 91,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 93,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the textarea.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child7 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 95,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 97,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect optional status. This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child8 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 99,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 101,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"placeholder\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the textarea.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child9 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 103,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 105,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child10 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 107,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 109,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"readonly\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value for the textarea.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child11 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 111,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 113,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        When true, the component is styled to reflect required status. This styling will only be in effect if the \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"label\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property has also been set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child12 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 115,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 117,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"rows\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child13 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 119,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 121,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"selectionDirection\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" HTML attribute value, passed directly to the underlying <textarea>. Can be \\\"forward\\\", \\\"backward\\\", or \\\"none\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child14 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 123,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 125,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"selectionEnd\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" HTML attribute value, passed directly to the underlying <textarea>.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child15 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 127,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 129,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"selectionStart\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" HTML attribute value, passed directly to the underlying <textarea>.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child16 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 131,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 133,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"spellcheck\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" HTML attribute value, passed directly to the underlying <textarea>.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child17 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 135,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 137,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"tabindex\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" attribute value.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child18 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 139,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 141,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip text string, or becomes popover title with supplied popover property.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child19 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 143,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 145,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"wrap\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" HTML attribute value, passed directly to the underlying <textarea>. Can be \\\"hard\\\" or \\\"soft\\\".\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child20 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 147,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 149,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        The bound value of the textarea.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 151,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-textarea.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-textarea\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A Bootstrap-wrapped component based on Ember's textarea helper.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-textarea\\n    label=\\\"First textarea\\\"\\n    placeholder=\\\"Enter some text!\\\"\\n    rows=6\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{sl-textarea\\n    disabled=true\\n    label=\\\"Second textarea\\\"\\n    placeholder=\\\"You can't enter anything...\\\"\\n    rows=4\\n}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-component-input-id\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-input-based\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"sl-tooltip-enabled\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [22]);\n        var morphs = new Array(23);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3]),3,3);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(element0,1,1);\n        morphs[3] = dom.createMorphAt(element0,3,3);\n        morphs[4] = dom.createMorphAt(element0,5,5);\n        morphs[5] = dom.createMorphAt(element0,7,7);\n        morphs[6] = dom.createMorphAt(element0,9,9);\n        morphs[7] = dom.createMorphAt(element0,11,11);\n        morphs[8] = dom.createMorphAt(element0,13,13);\n        morphs[9] = dom.createMorphAt(element0,15,15);\n        morphs[10] = dom.createMorphAt(element0,17,17);\n        morphs[11] = dom.createMorphAt(element0,19,19);\n        morphs[12] = dom.createMorphAt(element0,21,21);\n        morphs[13] = dom.createMorphAt(element0,23,23);\n        morphs[14] = dom.createMorphAt(element0,25,25);\n        morphs[15] = dom.createMorphAt(element0,27,27);\n        morphs[16] = dom.createMorphAt(element0,29,29);\n        morphs[17] = dom.createMorphAt(element0,31,31);\n        morphs[18] = dom.createMorphAt(element0,33,33);\n        morphs[19] = dom.createMorphAt(element0,35,35);\n        morphs[20] = dom.createMorphAt(element0,37,37);\n        morphs[21] = dom.createMorphAt(element0,39,39);\n        morphs[22] = dom.createMorphAt(element0,41,41);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-textarea\",[],[\"label\",\"First textarea\",\"placeholder\",\"Enter some text!\",\"rows\",6],[\"loc\",[null,[20,8],[24,10]]]],\n        [\"inline\",\"sl-textarea\",[],[\"disabled\",true,\"label\",\"Second textarea\",\"placeholder\",\"You can't enter anything...\",\"rows\",4],[\"loc\",[null,[41,8],[46,10]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"autofocus\",\"type\",\"Number\",\"default\",\"false\"],0,null,[\"loc\",[null,[67,4],[69,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"cols\",\"type\",\"Number/String\"],1,null,[\"loc\",[null,[71,4],[73,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"disabled\",\"type\",\"Boolean\",\"default\",\"false\"],2,null,[\"loc\",[null,[75,4],[77,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"helpText\",\"type\",\"String\"],3,null,[\"loc\",[null,[79,4],[81,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"label\",\"type\",\"String\"],4,null,[\"loc\",[null,[83,4],[85,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"maxlength\",\"type\",\"Number/String\"],5,null,[\"loc\",[null,[87,4],[89,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"name\",\"type\",\"String\"],6,null,[\"loc\",[null,[91,4],[93,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"optional\",\"type\",\"Boolean\",\"default\",\"false\"],7,null,[\"loc\",[null,[95,4],[97,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"placeholder\",\"type\",\"String\"],8,null,[\"loc\",[null,[99,4],[101,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],9,null,[\"loc\",[null,[103,4],[105,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"readonly\",\"type\",\"Boolean\",\"default\",\"false\"],10,null,[\"loc\",[null,[107,4],[109,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"required\",\"type\",\"Boolean\",\"default\",\"false\"],11,null,[\"loc\",[null,[111,4],[113,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"rows\",\"type\",\"Number/String\"],12,null,[\"loc\",[null,[115,4],[117,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectionDirection\",\"type\",\"String\",\"default\",\"\\\"forward\\\"\"],13,null,[\"loc\",[null,[119,4],[121,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectionEnd\",\"type\",\"Number/String\"],14,null,[\"loc\",[null,[123,4],[125,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"selectionStart\",\"type\",\"Number/String\"],15,null,[\"loc\",[null,[127,4],[129,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"spellcheck\",\"type\",\"Boolean\",\"default\",\"false\"],16,null,[\"loc\",[null,[131,4],[133,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"tabindex\",\"type\",\"String\"],17,null,[\"loc\",[null,[135,4],[137,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\"],18,null,[\"loc\",[null,[139,4],[141,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"wrap\",\"type\",\"String\",\"default\",\"\\\"soft\\\"\"],19,null,[\"loc\",[null,[143,4],[145,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"value\",\"type\",\"String\"],20,null,[\"loc\",[null,[147,4],[149,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15, child16, child17, child18, child19, child20]\n    };\n  }()));\n\n});","define('dummy/templates/demos/sl-tooltip', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 21,\n              \"column\": 11\n            },\n            \"end\": {\n              \"line\": 21,\n              \"column\": 75\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tooltip.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Tooltip example\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 39,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 44,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tooltip.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            Popover example\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 63,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tooltip.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Tooltip content text, or popover title text when \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"code\");\n          var el2 = dom.createTextNode(\"popover\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" property is set.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 67,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"dummy/templates/demos/sl-tooltip.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Popover content text.\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 71,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demos/sl-tooltip.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"sl-tooltip\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        dom.setAttribute(el1,\"class\",\"lead\");\n        var el2 = dom.createTextNode(\"A simple component that surrounds content to enable Bootstrap's \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/javascript/#tooltips\");\n        var el3 = dom.createTextNode(\"tooltip\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" and \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://getbootstrap.com/javascript/#popovers\");\n        var el3 = dom.createTextNode(\"popover\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" behavior.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Examples\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-tooltip\\n    tagName=\\\"u\\\"\\n    title=\\\"Tooltip text!\\\"\\n}}\\n    Tooltip example\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-tooltip}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Template\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"pre\");\n        var el4 = dom.createTextNode(\"{{#sl-tooltip\\n    popover=\\\"Popover content!\\\"\\n    tagName=\\\"u\\\"\\n    title=\\\"Popover title\\\"\\n}}\\n    Popover example\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"{{/sl-tooltip}}\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-lg-6\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h6\");\n        var el4 = dom.createTextNode(\"Rendered Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Mixins used\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group-item\");\n        var el3 = dom.createTextNode(\"\\n        sl-tooltip-enabled\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Properties\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"list-group\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [22]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8, 3, 3]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [10, 3]),3,3);\n        morphs[2] = dom.createMorphAt(element0,1,1);\n        morphs[3] = dom.createMorphAt(element0,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sl-tooltip\",[],[\"tagName\",\"u\",\"title\",\"Tooltip text!\"],0,null,[\"loc\",[null,[21,11],[21,90]]]],\n        [\"block\",\"sl-tooltip\",[],[\"popover\",\"Popover content!\",\"tagName\",\"u\",\"title\",\"Popover title\"],1,null,[\"loc\",[null,[39,8],[44,23]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"title\",\"type\",\"String\",\"required\",true],2,null,[\"loc\",[null,[63,4],[65,22]]]],\n        [\"block\",\"property-text\",[],[\"name\",\"popover\",\"type\",\"String\"],3,null,[\"loc\",[null,[67,4],[69,22]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3]\n    };\n  }()));\n\n});","define('dummy/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 68,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 71,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-cubes fa-4x\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createElement(\"b\");\n          var el3 = dom.createTextNode(\"Demo\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 76,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 79,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"dummy/templates/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-plug fa-4x\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createElement(\"b\");\n          var el3 = dom.createTextNode(\"Supported Browsers\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 86,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/index.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12 text-center\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"sl-ember-components REPLACE_APPLICATION_VERSION\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        dom.setAttribute(el3,\"class\",\"lead\");\n        var el4 = dom.createTextNode(\"An Ember CLI Addon that provides a variety of UI components.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"class\",\"col-md-2\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"class\",\"col-md-2\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Components\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"alert\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"button\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"calendar\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"chart\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"checkbox\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"date-picker\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"date-range-picker\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"date-time\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"drop-button\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"drop-option\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"grid\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"input\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"loading-icon\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"menu\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"modal\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"pagination\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"panel\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"progress-bar\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"radio\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"radio-group\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"select\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"span\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"tab-pane\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"tab-panel\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"textarea\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"tooltip\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"class\",\"col-md-2\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Mixins\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"sl-component-input-id\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"input-based\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"tooltip-enabled\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"class\",\"col-md-2\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Utility Classes\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"sl-menu-key-adapter\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"class\",\"col-md-2\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Services\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"sl-modal-service\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"class\",\"col-md-3 text-center\");\n        dom.setAttribute(el3,\"href\",\"http://softlayer.github.io/sl-ember-components/docs\");\n        dom.setAttribute(el3,\"target\",\"new\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h3\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"fa fa-book fa-4x\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Documentation\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"class\",\"col-md-3 text-center\");\n        dom.setAttribute(el3,\"href\",\"https://github.com/softlayer/sl-ember-components\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h3\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"fa fa-github fa-4x\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Available on GitHub\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [4, 1]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(element0,1,1);\n        morphs[1] = dom.createMorphAt(element0,5,5);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"demos\"],[\"class\",\"col-md-3 text-center\"],0,null,[\"loc\",[null,[68,8],[71,20]]]],\n        [\"block\",\"link-to\",[\"browsers\"],[\"class\",\"col-md-3 text-center\"],1,null,[\"loc\",[null,[76,8],[79,20]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/blanket-options', function () {\n\n    'use strict';\n\n    /* globals blanket, module */\n\n    var options = {\n        modulePrefix: 'sl-ember-components',\n        filter: '//.*sl-ember-components/.*/',\n        antifilter: '//.*(tests|template).*/',\n        loaderExclusions: [],\n        enableCoverage: true,\n        modulePattern: '\\/(\\\\w+)',\n        branchTracking: true,\n        cliOptions: {\n            reporters: ['json'],\n            autostart: true\n        }\n    };\n\n    if ('undefined' === typeof exports) {\n        blanket.options(options);\n    } else {\n        module.exports = options;\n    }\n\n});","define('dummy/tests/blanket-options.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('blanket-options.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'blanket-options.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/components/demos/sl-grid-detail.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/demos');\n  QUnit.test('components/demos/sl-grid-detail.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'components/demos/sl-grid-detail.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/components/demos/tabs/tab-one.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/demos/tabs');\n  QUnit.test('components/demos/tabs/tab-one.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'components/demos/tabs/tab-one.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/components/property-text.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/property-text.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'components/property-text.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/browsers.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/browsers.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/browsers.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-calendar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-calendar.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-calendar.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-chart.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-chart.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-chart.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-date-time.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-date-time.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-date-time.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-drop-button.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-drop-button.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-drop-button.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-grid.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-grid.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-grid.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-input.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-input.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-input.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-menu.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-menu.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-menu.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-pagination.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-pagination.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-pagination.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-progress-bar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-progress-bar.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-progress-bar.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-radio-group.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-radio-group.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-radio-group.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-select.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-select.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-select.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/sl-span.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos');\n  QUnit.test('controllers/demos/sl-span.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/sl-span.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demos/tabs/home.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/demos/tabs');\n  QUnit.test('controllers/demos/tabs/home.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'controllers/demos/tabs/home.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n    'use strict';\n\n    var resolver = Resolver['default'].create();\n\n    resolver.namespace = {\n        modulePrefix: config['default'].modulePrefix,\n        podModulePrefix: config['default'].podModulePrefix\n    };\n\n    exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, Ember, Application, config) {\n\n    'use strict';\n\n\n\n    exports['default'] = startApp;\n    function startApp(attrs) {\n        var attributes = Ember['default'].merge({}, config['default'].APP);\n        attributes = Ember['default'].merge(attributes, attrs);\n\n        var application = undefined;\n        Ember['default'].run(function () {\n            application = Application['default'].create(attributes);\n            application.setupForTesting();\n            application.injectTestHelpers();\n        });\n\n        return application;\n    }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-alert-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-alert', 'Integration | Component | sl alert', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], [], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('alert'), 'Has class \"alert\"');\n\n        assert.ok(this.$('>:first-child').hasClass('alert-info'), 'Default theme class is applied');\n\n        assert.strictEqual(this.$('>:first-child').attr('role'), 'alert', 'ARIA role is applied');\n    });\n\n    ember_qunit.test('Theme property is supported', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Warning alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['theme', 'testValue'], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('alert-testValue'), 'Warning theme class is applied');\n    });\n\n    ember_qunit.test('\"dismissable\" set to true', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert with dismissable\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['dismissable', true], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('alert-dismissable'), true, 'Component has alert-dismissable class');\n\n        assert.strictEqual(this.$('>:first-child').find('button').length, 1, 'Dismissable button was rendered');\n    });\n\n    ember_qunit.test('Dismiss Action is called on button click', function (assert) {\n\n        var dismissAction = function dismissAction() {\n            assert.ok(true, 'A dismiss action was called');\n        };\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Dismissable is true with dismiss action\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['dismissable', true, 'dismiss', 'dismissAction'], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        this.on('dismissAction', dismissAction);\n        this.$('>:first-child').find('button').click();\n    });\n\n    ember_qunit.test('Dismiss Action is not possible when dismissable is false', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Dismissable is false with dismiss action\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['dismiss', 'dismissAction'], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('button').length, 0, 'Dismissable button was not rendered');\n\n        assert.strictEqual(this.$('>:first-child').hasClass('alert-dismissable'), false, 'Component does not indicate dismissable');\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 28], [2, 35]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 40], [2, 47]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-alert-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-alert-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-alert-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-button-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-button', 'Integration | Component | sl button', {\n        integration: true\n    });\n\n    var template = Ember.HTMLBars.template((function () {\n        var child0 = (function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 2,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('        Default Text\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })();\n\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 5,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n            },\n            statements: [['block', 'sl-button', [], [], 0, null, ['loc', [null, [2, 4], [4, 18]]]]],\n            locals: [],\n            templates: [child0]\n        };\n    })());\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(template);\n\n        assert.ok(this.$('>:first-child').hasClass('btn'), 'Has class \"btn\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-button'), 'Has class \"sl-button\"');\n\n        assert.ok(this.$('>:first-child').hasClass('btn-default'), 'Has default theme class');\n    });\n\n    ember_qunit.test('Default action is triggered when element is clicked', function (assert) {\n        assert.expect(1);\n\n        this.on('externalAction', function () {\n            assert.ok(true, 'External action was called');\n        });\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['action', 'externalAction'], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        this.$('>:first-child').click();\n    });\n\n    ember_qunit.test('Button is disabled when disabled is set to true', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['disabled', true], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').is(':disabled'), true, 'Component becomes disabled');\n    });\n\n    ember_qunit.test('Class property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('           Test Button\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['class', 'testClass'], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('testClass'));\n    });\n\n    ember_qunit.test('Labels are correctly initialized', function (assert) {\n        var labelText = 'Test';\n\n        this.set('label', labelText);\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['label', ['subexpr', '@mut', [['get', 'label', ['loc', [null, [2, 27], [2, 32]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), labelText, 'Expected label text is present');\n    });\n\n    ember_qunit.test('Correct size class is applied', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['size', 'large'], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('btn-lg'), 'Has expected class \"btn-lg\"');\n    });\n\n    ember_qunit.test('Content is yielded', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Some yielded text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], [], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'Some yielded text', 'Content yields successfully');\n    });\n\n    ember_qunit.test('Theme class is applied correctly', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['theme', 'success'], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('btn-success'), 'Has expected class \"btn-success\"');\n    });\n\n    ember_qunit.test('Label is correct for pending state', function (assert) {\n        var pendingLabelText = 'Pending';\n        var changedPendingLabelText = 'Changed pending label text';\n        var staticText = 'Static';\n\n        this.set('staticText', staticText);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(1);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['content', 'staticText', ['loc', [null, [3, 12], [3, 26]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], [], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), staticText, 'Static text is set initially');\n\n        this.set('pendingLabel', pendingLabelText);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 5,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(1);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['content', 'staticText', ['loc', [null, [4, 12], [4, 26]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['pendingLabel', ['subexpr', '@mut', [['get', 'pendingLabel', ['loc', [null, [2, 34], [2, 46]]]]], [], []], 'pending', true], 0, null, ['loc', [null, [2, 8], [5, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), pendingLabelText, 'Pending text is set while pending');\n\n        this.set('pendingLabel', changedPendingLabelText);\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), changedPendingLabelText, 'Pending label text is set correctly when updated dynamically');\n    });\n\n    ember_qunit.test('Pending class is present when in pending state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default Text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['pendingLabel', 'pending', 'pending', true], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('pending'));\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            default text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 27], [2, 32]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            default text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 29], [2, 36]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            default text\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-button', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 27], [2, 32]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 41], [2, 48]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 22]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-button-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-button-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-button-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-calendar-test', ['ember', 'ember-qunit', 'qunit', 'sinon'], function (Ember, ember_qunit, qunit, sinon) {\n\n    'use strict';\n\n    var testContent = Ember['default'].A([{\n        date: new Date(2022, 8, 17),\n        label: 'Today!'\n    }]);\n\n    var multipleTestContent = Ember['default'].A([{\n        date: new Date(2022, 8, 17),\n        label: 'Event 1 Today!'\n    }, {\n        date: new Date(2022, 8, 17),\n        label: 'Event 2 Today!'\n    }, {\n        date: new Date(2022, 8, 17),\n        label: 'Event 3 Today!'\n    }, {\n        date: new Date(2022, 8, 20),\n        label: 'Event 1 Another Day!'\n    }]);\n\n    ember_qunit.moduleForComponent('sl-calendar', 'Integration | Component | sl calendar', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-calendar', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-calendar'), 'Has class \"sl-calendar\"');\n\n        assert.ok(this.$('>:first-child').find('> div:first-child').hasClass('datepicker'), 'First child of component has class \"datepicker\"');\n\n        assert.ok(this.$('>:first-child').find('> div:first-child').hasClass('datepicker-inline'), 'First child of component has class \"datepicker-inline\"');\n\n        assert.ok(this.$('>:first-child').find('> .datepicker > div:first-child').hasClass('datepicker-days'), 'Day view is visible');\n    });\n\n    ember_qunit.test('Check for classes set on items outside of range in picker', function (assert) {\n        this.set('currentYear', 2015);\n        this.set('currentMonth', 1);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var missingOld = false;\n        var missingNew = false;\n\n        // test the days\n\n        var days = this.$('>:first-child').find('.datepicker-days .day');\n\n        var firstReached = false;\n        var lastReached = false;\n\n        days.each(function () {\n            var testDay = parseInt($(this).text());\n\n            if (1 === testDay) {\n                firstReached = true;\n            }\n\n            if (!firstReached) {\n                if (!$(this).hasClass('old')) {\n                    missingOld = true;\n                }\n            }\n\n            if (lastReached) {\n                if (!$(this).hasClass('new')) {\n                    missingNew = true;\n                }\n            }\n\n            if (31 === testDay && firstReached) {\n                lastReached = true;\n            }\n        });\n\n        assert.notOk(missingOld, 'All days prior to the first have class \"old\"');\n\n        assert.notOk(missingNew, 'All days after the 31st have class \"new\"');\n\n        // test the years\n\n        this.$('>:first-child').find('.datepicker-switch').trigger('click'); // open month picker\n        this.$('>:first-child').find('.datepicker-switch').trigger('click'); // open year picker\n        var yearSpan = this.$('>:first-child').find('.datepicker-switch').text().trim().split('-');\n\n        var years = this.$('>:first-child').find('.datepicker-years > table > tbody > tr > td > *');\n\n        missingOld = false;\n        missingNew = false;\n\n        years.each(function () {\n            var testYear = parseInt($(this).text());\n\n            if (testYear > parseInt(yearSpan[1])) {\n                if (!$(this).hasClass('new')) {\n                    missingNew = true;\n                }\n            }\n\n            if (testYear < parseInt(yearSpan[0])) {\n                if (!$(this).hasClass('old')) {\n                    missingOld = true;\n                }\n            }\n        });\n\n        assert.notOk(missingOld, 'Years prior to range have class \"old\"');\n\n        assert.notOk(missingNew, 'Years after selected ranged have class \"new\"');\n    });\n\n    ember_qunit.test('Setting currentYear and currentMonth modifies the view correctly', function (assert) {\n\n        var currentYear = 2025;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 1);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'January ' + currentYear, 'Current month and year are set correctly in the view');\n    });\n\n    qunit.skip('Setting dateValuePath modifies the view correctly', function (assert) {\n\n        var modifiedValuePath = Ember['default'].A([{\n            modifiedDatePath: new Date(2022, 8, 17),\n            label: 'Today!'\n        }]);\n\n        this.set('currentYear', 2022);\n\n        this.set('currentMonth', 9);\n\n        this.set('content', modifiedValuePath);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'dateValuePath', 'modifiedDatePath', 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [5, 24], [5, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [6, 25], [6, 37]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.active').text().trim(), 17, 'Active day is set correctly');\n    });\n\n    qunit.skip('Active day is set correctly', function (assert) {\n\n        this.set('currentYear', 2022);\n\n        this.set('currentMonth', 9);\n\n        this.set('content', Ember['default'].A());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []]], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.active').text().trim(), '', 'No active day is set');\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.active').text().trim(), 17, 'Active day is set correctly');\n\n        this.set('content', multipleTestContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var active = this.$('>:first-child').find('.active');\n\n        assert.strictEqual(active.length, 2, 'There are two unique dates assigned the .active class');\n\n        assert.strictEqual(active[0].innerHTML, '17', 'First unique date instance is correct');\n\n        assert.strictEqual(active[1].innerHTML, '20', 'Second unique date instance is correct');\n    });\n\n    ember_qunit.test('Setting locale to Spanish modifies the view correctly', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 9);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['locale', 'es', 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'Septiembre ' + currentYear, 'Current month in Spanish is set correctly in the view');\n    });\n\n    ember_qunit.test('Action fires when day is clicked', function (assert) {\n\n        assert.expect(1);\n\n        this.set('currentYear', 2022);\n\n        this.set('currentMonth', 9);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['action', 'testAction', 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [5, 24], [5, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [6, 25], [6, 37]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function () {\n            assert.ok(true, 'The test action was called');\n        });\n\n        this.$('>:first-child').find('.active').click();\n    });\n\n    qunit.skip('Action passes through expected objects in content array', function (assert) {\n\n        assert.expect(8);\n\n        this.set('currentYear', 2022);\n\n        this.set('currentMonth', 9);\n\n        this.set('content', multipleTestContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['action', 'testAction', 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [5, 24], [5, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [6, 25], [6, 37]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function (dateContent) {\n\n            // This group of asserts verifies the multiple events on Sep. 17th\n            if ('Event 1 Today!' === dateContent[0].label) {\n                assert.strictEqual(dateContent[0].date.toString(), 'Sat Sep 17 2022 00:00:00 GMT-0500 (CDT)', 'The date property was passed through');\n\n                assert.strictEqual(dateContent[0].label, 'Event 1 Today!', 'The label property was passed through');\n\n                assert.strictEqual(dateContent[1].date.toString(), 'Sat Sep 17 2022 00:00:00 GMT-0500 (CDT)', 'The date property was passed through');\n\n                assert.strictEqual(dateContent[1].label, 'Event 2 Today!', 'The label property was passed through');\n\n                assert.strictEqual(dateContent[2].date.toString(), 'Sat Sep 17 2022 00:00:00 GMT-0500 (CDT)', 'The date property was passed through');\n\n                assert.strictEqual(dateContent[2].label, 'Event 3 Today!', 'The label property was passed through');\n                // This group of asserts verifies the event on Sep. 20th\n            } else {\n                    assert.strictEqual(dateContent[0].date.toString(), 'Tue Sep 20 2022 00:00:00 GMT-0500 (CDT)', 'The date property was passed through');\n\n                    assert.strictEqual(dateContent[0].label, 'Event 1 Another Day!', 'The label property was passed through');\n                }\n        });\n\n        this.$('>:first-child').find('.active').click();\n    });\n\n    qunit.skip('Setting viewMode modifies the view correctly', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 9);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []]], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child'), '\"viewMode\" of days renders');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child'), '\"viewMode\" of months renders');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child'), '\"viewMode\" of years renders');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'The current month and year are set correctly');\n\n        assert.strictEqual(this.$('>:first-child').find('.active').text().trim(), 17, 'The current day is set correctly');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'viewMode', 'months', 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [5, 24], [5, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [6, 25], [6, 37]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n\n        assert.strictEqual(this.$('>:first-child').find('.active').text().trim(), 'Sep', 'The current month is set correctly');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'viewMode', 'years', 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [5, 24], [5, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [6, 25], [6, 37]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'The year range is set correctly');\n\n        assert.strictEqual(this.$('>:first-child').find('.active').text().trim(), currentYear.toString(), 'The current year is set correctly');\n    });\n\n    ember_qunit.test('Navigating Forward by Month', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 9);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'The current month is set correctly');\n\n        this.$('>:first-child').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'October ' + currentYear, 'The next month is set correctly');\n    });\n\n    ember_qunit.test('Navigating Backward by Month', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 9);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'The current month is set correctly');\n\n        this.$('>:first-child').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'August ' + currentYear, 'The previous month is set correctly');\n    });\n\n    ember_qunit.test('Navigating Forward by Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n\n        this.$('>:first-child').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), (currentYear + 1).toString(), 'The next year is set correctly');\n    });\n\n    ember_qunit.test('Navigating Backward by Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n\n        this.$('>:first-child').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), (currentYear - 1).toString(), 'The previous year is set correctly');\n    });\n\n    ember_qunit.test('Navigating Forward by Decade', function (assert) {\n\n        this.set('currentYear', 2022);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'The current Decade is set correctly');\n\n        this.$('>:first-child').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2030-2039', 'The next Decade is set correctly');\n    });\n\n    ember_qunit.test('Navigating Backward by Decade', function (assert) {\n\n        this.set('currentYear', 2022);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'The current Decade is set correctly');\n\n        this.$('>:first-child').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2010-2019', 'The previous Decade is set correctly');\n    });\n\n    ember_qunit.test('When Locked, interacting with the view is not Possible', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 8);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-calendar', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('sl-calendar-locked'), false, 'Default rendered component does not have class \"sl-calendar-locked\"');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['locked', true, 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-calendar-locked'), 'Locked, rendered component has class \"sl-calendar-locked\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'August ' + currentYear, 'The current month is set correctly');\n\n        this.$('>:first-child').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'August ' + currentYear, 'The next month is set correctly');\n\n        this.$('>:first-child').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'August ' + currentYear, 'The next month is set correctly');\n\n        this.$('>:first-child').find('.datepicker-switch').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'August ' + currentYear, 'The next month is set correctly');\n    });\n\n    ember_qunit.test('Navigating from Month to Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 9);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'The current month is set correctly');\n\n        this.$('>:first-child').find('.datepicker-switch').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n    });\n\n    ember_qunit.test('Navigating from Year to Month', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 9);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n\n        this.$('>:first-child').find('.active').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'The current month is set correctly');\n    });\n\n    ember_qunit.test('Navigating from Year to Decade', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n\n        this.$('>:first-child').find('.datepicker-switch').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'The current decade is set correctly');\n    });\n\n    ember_qunit.test('Navigating from Decade to Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'The current decade is set correctly');\n\n        this.$('>:first-child').find('.active').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'The current year is set correctly');\n    });\n\n    ember_qunit.test('Navigating Forward by Month Crosses to Next Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 12);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'December ' + currentYear, 'The current month is set correctly');\n\n        this.$('>:first-child').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'January ' + (currentYear + 1), 'The next month is in the next year');\n    });\n\n    ember_qunit.test('Navigating Backward by Month Crosses to Previous Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear', currentYear);\n\n        this.set('currentMonth', 1);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [3, 24], [3, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [4, 25], [4, 37]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'January ' + currentYear, 'The current month is set correctly');\n\n        this.$('>:first-child').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'December ' + (currentYear - 1), 'The previous month is in the previous year');\n    });\n\n    ember_qunit.test('All Days are Displayed in Order', function (assert) {\n        this.set('currentYear', 2015);\n        this.set('currentMonth', 1);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['viewMode', 'days', 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth', ['loc', [null, [5, 25], [5, 37]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.day').text().trim(), '28293031123456789101112131415161718192021222324252627282930311234567', 'All days listed in order for specified month as expected');\n    });\n\n    ember_qunit.test('All Twelve Months are Displayed in Order', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['viewMode', 'months'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('span').text().trim(), 'JanFebMarAprMayJunJulAugSepOctNovDec', 'Twelve months are listed in order');\n    });\n\n    ember_qunit.test('Twelve Years are Displayed in Order', function (assert) {\n\n        this.set('currentYear', 2022);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['viewMode', 'years', 'currentYear', ['subexpr', '@mut', [['get', 'currentYear', ['loc', [null, [4, 24], [4, 35]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('span').text().trim(), '201920202021202220232024202520262027202820292030', 'Twelve years are listed in order');\n    });\n\n    // -------------------------------------------------------------------------\n    // Start of Dual Component Tests\n\n    ember_qunit.test('Dual instance: Action fires when day is clicked', function (assert) {\n\n        var testAction1 = sinon['default'].spy();\n        var testAction2 = sinon['default'].spy();\n\n        this.set('currentYear1', 2035);\n        this.set('currentMonth1', 1);\n\n        this.set('currentYear2', 2022);\n        this.set('currentMonth2', 9);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 14,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['action', 'testAction1', 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [5, 24], [5, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [6, 25], [6, 38]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]], ['inline', 'sl-calendar', [], ['action', 'testAction2', 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [10, 20], [10, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [11, 24], [11, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [12, 25], [12, 38]]]]], [], []]], ['loc', [null, [8, 8], [13, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction1', testAction1);\n        this.on('testAction2', testAction2);\n\n        this.$('>:nth-child(2)').find('.active').click();\n\n        assert.notOk(testAction1.called, 'Component instance one: did not fire an action');\n\n        assert.ok(testAction2.called, 'Component instance two: fired an action');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Forward by Month', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        var currentMonth = 9;\n        this.set('currentMonth1', currentMonth);\n        this.set('currentMonth2', currentMonth);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [3, 25], [3, 38]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [4, 24], [4, 36]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [7, 25], [7, 38]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [8, 24], [8, 36]]]]], [], []]], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'Component instance one: current month has not changed');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), 'October ' + currentYear, 'Component instance two: Current month advances one month');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Backward by Month', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        var currentMonth = 9;\n        this.set('currentMonth1', currentMonth);\n        this.set('currentMonth2', currentMonth);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [3, 25], [3, 38]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [4, 24], [4, 36]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [7, 25], [7, 38]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [8, 24], [8, 36]]]]], [], []]], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'Component instance one: current month has not changed');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), 'August ' + currentYear, 'Component instance two: Current month adjusts to previous month');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Forward by Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'Component instance one: year did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), (currentYear + 1).toString(), 'Component instance two: year advances by one year');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Backward by Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'Component instance one: year did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), (currentYear - 1).toString(), 'Component instance two: year adjusts to previous year');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Forward by Decade', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'Component instance one: decade did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), '2030-2039', 'Component instance two: next decade is set correctly');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Backward by Decade', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'Component instance one: decade did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), '2010-2019', 'Component instance two: decade is set to the previous decade');\n    });\n\n    ember_qunit.test('Dual instance: Navigating from Month to Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        var currentMonth = 9;\n        this.set('currentMonth1', currentMonth);\n        this.set('currentMonth2', currentMonth);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [4, 25], [4, 38]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [8, 25], [8, 38]]]]], [], []]], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.datepicker-switch').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'Component instance one: current month did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), currentYear.toString(), 'Component instance two: current year is set correctly');\n    });\n\n    ember_qunit.test('Dual instance: Navigating from Year to Month', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        var currentMonth = 9;\n        this.set('currentMonth1', currentMonth);\n        this.set('currentMonth2', currentMonth);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 14,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [4, 24], [4, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [5, 25], [5, 38]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [7, 10]]]], ['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [9, 20], [9, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [10, 24], [10, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [11, 25], [11, 38]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [8, 8], [13, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.active').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'Component instance one: current year did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), 'September ' + currentYear, 'Component instance two: current month is set correctly');\n    });\n\n    ember_qunit.test('Dual instance: Navigating from Year to Decade', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'viewMode', 'months'], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.datepicker-switch').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), currentYear.toString(), 'Component instance one: current year did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), '2020-2029', 'Component instance two: current decade is set correctly');\n    });\n\n    ember_qunit.test('Dual instance: Navigating from Decade to Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        this.set('content', testContent);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 12,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [4, 24], [4, 36]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [2, 8], [6, 10]]]], ['inline', 'sl-calendar', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [8, 20], [8, 27]]]]], [], []], 'currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [9, 24], [9, 36]]]]], [], []], 'viewMode', 'years'], ['loc', [null, [7, 8], [11, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.active').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), '2020-2029', 'Component instance two: current decade did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), currentYear.toString(), 'Component instance two: current year is set correctly');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Forward by Month Crosses to Next Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        var currentMonth = 12;\n        this.set('currentMonth1', currentMonth);\n        this.set('currentMonth2', currentMonth);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [4, 25], [4, 38]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [8, 25], [8, 38]]]]], [], []]], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.next').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'December ' + currentYear, 'Component instance one: current month did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), 'January ' + (currentYear + 1), 'Component instance two: next month is in the next year');\n    });\n\n    ember_qunit.test('Dual instance: Navigating Backward by Month Crosses to Previous Year', function (assert) {\n\n        var currentYear = 2022;\n        this.set('currentYear1', currentYear);\n        this.set('currentYear2', currentYear);\n\n        var currentMonth = 1;\n        this.set('currentMonth1', currentMonth);\n        this.set('currentMonth2', currentMonth);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 10,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(2);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear1', ['loc', [null, [3, 24], [3, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth1', ['loc', [null, [4, 25], [4, 38]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]], ['inline', 'sl-calendar', [], ['currentYear', ['subexpr', '@mut', [['get', 'currentYear2', ['loc', [null, [7, 24], [7, 36]]]]], [], []], 'currentMonth', ['subexpr', '@mut', [['get', 'currentMonth2', ['loc', [null, [8, 25], [8, 38]]]]], [], []]], ['loc', [null, [6, 8], [9, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:nth-child(2)').find('.prev').click();\n\n        assert.strictEqual(this.$('>:first-child').find('.datepicker-switch').text().trim(), 'January ' + currentYear, 'Component instance one: current month did not change');\n\n        assert.strictEqual(this.$('>:nth-child(2)').find('.datepicker-switch').text().trim(), 'December ' + (currentYear - 1), 'Component instance two: previous month is in the previous year');\n    });\n\n});","define('dummy/tests/integration/components/sl-calendar-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-calendar-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-calendar-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-chart-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-chart', 'Integration | Component | sl chart', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.set('testseries', []);\n        this.set('testoptions', {});\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 26], [2, 36]]]]], [], []], 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 45], [2, 56]]]]], [], []]], ['loc', [null, [2, 8], [2, 58]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-chart'), 'has class sl-chart');\n\n        assert.ok(this.$('>:first-child').hasClass('panel'), 'has class panel');\n\n        assert.ok(this.$('>:first-child').hasClass('panel-default'), 'has class panel-default');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-panel'), 'has class sl-panel');\n    });\n\n    ember_qunit.test('Loading state adds loading class', function (assert) {\n        this.set('testseries', []);\n        this.set('testoptions', {});\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 26], [2, 36]]]]], [], []], 'isLoading', false, 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 61], [2, 72]]]]], [], []]], ['loc', [null, [2, 8], [2, 74]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('sl-loading'), false, 'Default rendered component does not have \"sl-loading\" class');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 26], [2, 36]]]]], [], []], 'isLoading', true, 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 60], [2, 71]]]]], [], []]], ['loc', [null, [2, 8], [2, 73]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('sl-loading'), true, 'Default rendered component does have \"sl-loading\" class');\n    });\n\n    ember_qunit.test('Title property is set', function (assert) {\n        this.set('testseries', []);\n        this.set('testoptions', {});\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 26], [2, 36]]]]], [], []], 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 45], [2, 56]]]]], [], []]], ['loc', [null, [2, 8], [2, 58]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.panel-heading').html(), undefined, 'No chart title is rendered when title is not set');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['title', 'Peak serve hours', 'series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 51], [2, 61]]]]], [], []], 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 70], [2, 81]]]]], [], []]], ['loc', [null, [2, 8], [2, 83]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.panel-heading').html(), 'Peak serve hours', 'Chart title is created with title value');\n    });\n\n    ember_qunit.test('Width property is set on the internal chart', function (assert) {\n        var width = 100;\n\n        this.set('testseries', []);\n        this.set('testoptions', {});\n        this.set('width', width);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 26], [2, 36]]]]], [], []], 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 45], [2, 56]]]]], [], []], 'width', ['subexpr', '@mut', [['get', 'width', ['loc', [null, [2, 63], [2, 68]]]]], [], []]], ['loc', [null, [2, 8], [2, 70]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('div.chart').width(), width, 'Chart div has correct width by default');\n\n        width = 50;\n        this.set('width', width);\n\n        assert.strictEqual(this.$('>:first-child').find('div.chart').width(), width, 'Chart div width updates correctly');\n    });\n\n    ember_qunit.test('Height property is set on the internal chart', function (assert) {\n        var height = 100;\n\n        this.set('testseries', []);\n        this.set('testoptions', {});\n        this.set('height', height);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-chart', [], ['series', ['subexpr', '@mut', [['get', 'testseries', ['loc', [null, [2, 26], [2, 36]]]]], [], []], 'options', ['subexpr', '@mut', [['get', 'testoptions', ['loc', [null, [2, 45], [2, 56]]]]], [], []], 'height', ['subexpr', '@mut', [['get', 'height', ['loc', [null, [2, 64], [2, 70]]]]], [], []]], ['loc', [null, [2, 8], [2, 72]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('div.chart').height(), height, 'Chart div has correct height by default');\n\n        height = 50;\n        this.set('height', height);\n\n        assert.strictEqual(this.$('>:first-child').find('div.chart').height(), height, 'Chart div height updates correctly');\n    });\n\n});","define('dummy/tests/integration/components/sl-chart-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-chart-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-chart-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-checkbox-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-checkbox', 'Integration | Component | sl checkbox', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-checkbox', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('checkbox'), 'Has class \"checkbox\"');\n\n        assert.ok(this.$('>:first-child').hasClass('form-group'), 'Has class \"form-group\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-checkbox'), 'Has class \"sl-checkbox\"');\n    });\n\n    ember_qunit.test('Disabled state applies class and disables input', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-checkbox', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('disabled'), false, 'Initially does not have class \"disabled\"');\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('disabled'), false, 'Rendered input is initially enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-checkbox', [], ['disabled', true], ['loc', [null, [2, 8], [2, 37]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('disabled'), true, 'Has class \"disabled\"');\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('disabled'), true, 'Rendered input is disabled');\n    });\n\n    ember_qunit.test('Checked state applies property to input', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-checkbox', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('checked'), false, 'Rendered input is not checked');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-checkbox', [], ['checked', true], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('checked'), true, 'Rendered input is checked');\n    });\n\n    ember_qunit.test('name applies property to input', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-checkbox', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('name'), '', 'Rendered input has empty name');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-checkbox', [], ['name', 'testname'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('name'), 'testname', 'Rendered input has name set');\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-checkbox', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 28], [2, 33]]]]], [], []]], ['loc', [null, [2, 8], [2, 35]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-checkbox', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 30], [2, 37]]]]], [], []]], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-checkbox', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 28], [2, 33]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 42], [2, 49]]]]], [], []]], ['loc', [null, [2, 8], [2, 51]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-checkbox-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-checkbox-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-checkbox-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-date-picker-test', ['ember-qunit', 'ember', 'sinon'], function (ember_qunit, Ember, sinon) {\n\n    'use strict';\n\n    var defaultTemplate = Ember['default'].HTMLBars.template((function () {\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 3,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n    ');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                return morphs;\n            },\n            statements: [['content', 'sl-date-picker', ['loc', [null, [2, 4], [2, 22]]]]],\n            locals: [],\n            templates: []\n        };\n    })());\n\n    ember_qunit.moduleForComponent('sl-date-picker', 'Integration | Component | sl date picker', {\n        integration: true,\n\n        afterEach: function afterEach() {\n            Ember['default'].$('.datepicker').remove();\n        }\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(defaultTemplate);\n\n        var first = this.$('>:first-child');\n        var input = first.find('input');\n\n        assert.ok(first.hasClass('form-group'), 'Default rendered component has class \"form-group\"');\n\n        assert.ok(first.hasClass('sl-date-picker'), 'Default rendered component has class \"sl-date-picker\"');\n\n        assert.ok(input.hasClass('date-picker'), 'Default rendered input has class \"date-picker\"');\n\n        assert.ok(input.hasClass('form-control'), 'Default rendered input has class \"form-control\"');\n    });\n\n    ember_qunit.test('disabled is accepted as a parameter', function (assert) {\n        this.render(defaultTemplate);\n\n        var input = this.$('>:first-child').find('input');\n\n        assert.notOk(input.prop('disabled'), 'Default rendered date picker is not disabled');\n\n        this.render('\\n        {{sl-date-picker disabled=true}}\\n    ');\n\n        input = this.$('>:first-child').find('input');\n\n        assert.ok(input.prop('disabled'), 'Date picker is disabled when disabled property is true');\n    });\n\n    ember_qunit.test('helpText is accepted as a parameter', function (assert) {\n        this.render(defaultTemplate);\n\n        var first = this.$('>:first-child');\n\n        assert.strictEqual(first.find('.help-block').length, 0, 'Default rendered component does not have any help text');\n\n        var helpText = 'Please select a date';\n\n        this.set('helpText', helpText);\n\n        this.render('\\n        {{sl-date-picker helpText=helpText}}\\n    ');\n\n        first = this.$('>:first-child');\n\n        assert.strictEqual(first.find('.help-block').text().trim(), helpText);\n    });\n\n    ember_qunit.test('value is accepted as a parameter', function (assert) {\n        this.render(defaultTemplate);\n\n        var input = this.$('>:first-child').find('input');\n\n        assert.strictEqual(input.val().trim(), '', 'Default rendered datepicker has no prefilled value');\n\n        var value = '10/20/2010';\n\n        this.set('value', value);\n\n        this.render('\\n        {{sl-date-picker value=value}}\\n    ');\n\n        input = this.$('>:first-child').find('input');\n\n        assert.strictEqual(input.val().trim(), value);\n    });\n\n    ember_qunit.test('label is accepted as a parameter', function (assert) {\n        this.render(defaultTemplate);\n\n        assert.strictEqual(this.$('>:first-child').find('label').length, 0, 'Default rendered date picker does not have a label');\n\n        var labeltext = 'lorem ipsum';\n\n        this.set('label', labeltext);\n\n        this.render('hbs\\n        {{sl-date-picker label=label}}\\n    ');\n\n        var first = this.$('>:first-child');\n\n        assert.strictEqual(first.find('label').html(), labeltext, 'label element was created with label parameter text');\n\n        assert.strictEqual(first.find('label').prop('for'), first.find('input').prop('id'), 'label is used for date input');\n    });\n\n    ember_qunit.test('placeholder is accepted as a parameter', function (assert) {\n        this.render(defaultTemplate);\n\n        var input = this.$('>:first-child').find('input');\n\n        assert.notOk(input.prop('placeholder'), 'Default rendered component does not have a placeholder');\n\n        var placeholder = 'Select a date';\n\n        this.set('placeholder', placeholder);\n\n        this.render('hbs\\n        {{sl-date-picker placeholder=placeholder}}\\n    ');\n\n        input = this.$('>:first-child').find('input');\n\n        assert.strictEqual(input.prop('placeholder'), placeholder);\n    });\n\n    ember_qunit.test('action is fired when date changes on datepicker', function (assert) {\n        assert.expect(1);\n\n        var done = assert.async();\n\n        this.on('action', function () {\n            assert.ok('Action was fired');\n\n            done();\n        });\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-picker', [], ['action', 'action'], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('input.date-picker').triggerHandler('focus');\n\n        Ember['default'].$('.day:first').click();\n    });\n\n    ember_qunit.test('updateDateRange() - clears input date when outside of startDate range', function (assert) {\n        this.set('startDate');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-picker', [], ['startDate', ['subexpr', '@mut', [['get', 'startDate', ['loc', [null, [2, 35], [2, 44]]]]], [], []]], ['loc', [null, [2, 8], [2, 47]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('input.date-picker');\n\n        input.triggerHandler('focus');\n\n        Ember['default'].$('.day:first').click();\n\n        this.set('startDate', window.moment().add(30, 'days').toDate());\n\n        assert.strictEqual(input.datepicker().val(), '', 'The datepicker input value was cleared successfully');\n    });\n\n    ember_qunit.test('updateDateRange() - clears input date when outside of endDate range', function (assert) {\n        this.set('endDate');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-picker', [], ['endDate', ['subexpr', '@mut', [['get', 'endDate', ['loc', [null, [2, 33], [2, 40]]]]], [], []]], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('input.date-picker');\n\n        input.triggerHandler('focus');\n\n        Ember['default'].$('.day:first').click();\n\n        this.set('endDate', window.moment().subtract(60, 'days').toDate());\n\n        assert.strictEqual(input.datepicker().val(), '', 'The datepicker input value was cleared successfully');\n    });\n\n    ember_qunit.test('End date is set on datepicker when endDate property is updated', function (assert) {\n        var endDate = window.moment('2016-01-01').toDate();\n        var endDateTwo = window.moment('2016-02-02').toDate();\n\n        this.set('endDate', endDate);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-picker', [], ['endDate', ['subexpr', '@mut', [['get', 'endDate', ['loc', [null, [2, 33], [2, 40]]]]], [], []]], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('input.date-picker');\n        var datePicker = input.data('datepicker');\n        var spy = sinon['default'].spy(Object.getPrototypeOf(datePicker), 'setEndDate');\n\n        this.set('endDate', endDateTwo);\n\n        assert.ok(spy.calledWith(endDateTwo));\n\n        datePicker.setEndDate.restore();\n    });\n\n    ember_qunit.test('Start date is set on datepicker when startDate property is updated', function (assert) {\n        var startDate = window.moment('2016-01-01').toDate();\n        var startDateTwo = window.moment('2016-02-02').toDate();\n\n        this.set('startDate', startDate);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-picker', [], ['startDate', ['subexpr', '@mut', [['get', 'startDate', ['loc', [null, [2, 35], [2, 44]]]]], [], []]], ['loc', [null, [2, 8], [2, 46]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('input.date-picker');\n        var datePicker = input.data('datepicker');\n        var spy = sinon['default'].spy(Object.getPrototypeOf(datePicker), 'setStartDate');\n\n        this.set('startDate', startDateTwo);\n\n        assert.ok(spy.calledWith(startDateTwo));\n\n        datePicker.setStartDate.restore();\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 28], [2, 35]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 40], [2, 47]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-date-picker-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-date-picker-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-date-picker-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-date-range-picker-test', ['ember', 'ember-qunit', 'qunit'], function (Ember, ember_qunit, qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-date-range-picker', 'Integration | Component | sl date range picker', {\n        afterEach: function afterEach() {\n            Ember['default'].$('.datepicker').remove();\n        },\n\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-date-range-picker', ['loc', [null, [2, 8], [2, 32]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-date-range-picker'), 'Has class \"sl-date-range-picker\"');\n    });\n\n    ember_qunit.test('placeholders are accepted', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['label', 'Select date range', 'startDatePlaceholder', '__StartPlaceholder__', 'endDatePlaceholder', '__EndPlaceholder__'], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-start-date').find('input').prop('placeholder'), '__StartPlaceholder__', 'Start date input placeholder is set');\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-end-date').find('input').prop('placeholder'), '__EndPlaceholder__', 'End date input placeholder is set');\n    });\n\n    ember_qunit.test('label is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['label', 'lorem ipsum'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label').html(), 'lorem ipsum', 'The \"label\" property text was set');\n\n        assert.strictEqual(this.$('>:first-child').find('label').prop('for'), this.$('>:first-child').find('.sl-daterange-start-date').find('input').prop('id'), '\"label for\" property has the correct value');\n    });\n\n    ember_qunit.test('endDatePlaceholder is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['endDatePlaceholder', 'Select end date'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-end-date').find('input').attr('placeholder'), 'Select end date', 'The \"endDatePlaceholder\" property text was set');\n    });\n\n    ember_qunit.test('startDatePlaceholder is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['startDatePlaceholder', 'Select start date'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-start-date').find('input').attr('placeholder'), 'Select start date', 'The \"startDatePlaceholder\" property text was set');\n    });\n\n    ember_qunit.test('helpText is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['helpText', 'This is helpful'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.help-block').html(), 'This is helpful', 'The \"helpText\" property text was set');\n    });\n\n    ember_qunit.test('startDateValue is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['startDateValue', '09/25/2015'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-start-date').find('input').val(), '09/25/2015', 'The \"startDateValue\" property text was set');\n    });\n\n    ember_qunit.test('endDateValue is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['endDateValue', '12/25/2015'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-end-date').find('input').val(), '12/25/2015', 'The \"endDateValue\" property text was set');\n    });\n\n    ember_qunit.test('format is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['format', 'm/d/yyyy', 'startDateValue', '09/25/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('.sl-daterange-start-date').find('input');\n        input.triggerHandler('focus');\n\n        Ember['default'].$('.datepicker').last().find('.datepicker-days').find('td').not('.old').first().trigger('click');\n\n        assert.strictEqual(input.val(), '9/1/2015', 'The selected date was formatted based on the \"format\" property');\n    });\n\n    ember_qunit.test('minDate is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['minDate', '09/15/2015', 'startDateValue', '09/25/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('.sl-daterange-start-date').find('input').triggerHandler('focus');\n\n        assert.strictEqual(Ember['default'].$('.datepicker').last().find('.datepicker-days').find('td').not('.disabled').first().text(), '15', 'The \"minDate\" was set correctly');\n    });\n\n    ember_qunit.test('maxDate is accepted as a parameter', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['maxDate', '09/28/2015', 'endDateValue', '09/25/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('.sl-daterange-end-date').find('input').triggerHandler('focus');\n\n        assert.strictEqual(Ember['default'].$('.datepicker').last().find('.datepicker-days').find('td').not('.disabled').last().text(), '28', 'The \"maxDate\" was set correctly');\n    });\n\n    ember_qunit.test('Selected day is set in the start date input field', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['startDateValue', '09/25/2015'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('.sl-daterange-start-date').find('input');\n        input.triggerHandler('focus');\n\n        Ember['default'].$('.datepicker').last().find('.datepicker-days').find('td').not('.old').first().trigger('click');\n\n        assert.strictEqual(input.val(), '09/01/2015', 'The selected day is set in the input field');\n    });\n\n    ember_qunit.test('Selected day is set in the end date input field', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['endDateValue', '09/25/2015'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var input = this.$('>:first-child').find('.sl-daterange-end-date').find('input');\n        input.triggerHandler('focus');\n\n        Ember['default'].$('.datepicker').last().find('.datepicker-days').find('td').not('.old').first().trigger('click');\n\n        assert.strictEqual(input.val(), '09/01/2015', 'The selected day is set in the input field');\n    });\n\n    qunit.skip('\"startDateValue\" cannot be less than \"minDate\"', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['minDate', '09/28/2015', 'startDateValue', '09/25/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-start-date').find('input').val(), '09/28/2015', 'The \"startDateValue\" is not less than the \"minDate\"');\n    });\n\n    qunit.skip('\"endDateValue\" cannot be more than \"maxDate\"', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['maxDate', '09/25/2015', 'endDateValue', '09/28/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-daterange-end-date').find('input').val(), '09/25/2015', 'The \"endDateValue\" is not more than the \"maxDate\"');\n    });\n\n    qunit.skip('\"endDateValue\" cannot be less than \"startDateValue\"', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['startDateValue', '09/25/2015', 'endDateValue', '09/20/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notEqual(this.$('>:first-child').find('.sl-daterange-end-date').find('input').val(), '09/20/2015', 'The \"endDateValue\" is not less than the \"startDateValue\"');\n    });\n\n    qunit.skip('\"startDateValue\" cannot be more than \"endDateValue\"', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-range-picker', [], ['startDateValue', '09/25/2015', 'endDateValue', '09/20/2015'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notEqual(this.$('>:first-child').find('.sl-daterange-start-date').find('input').val(), '09/25/2015', 'The \"startDateValue\" is not more than the \"endDateValue\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-date-range-picker-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-date-range-picker-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-date-range-picker-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-date-time-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-date-time', 'Integration | Component | sl date time', {\n        integration: true\n    });\n\n    ember_qunit.test('Defaults applied correctly', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['timezone', 'America/Chicago'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var element = this.$('>:first-child');\n\n        assert.ok(element.hasClass('sl-datetime'), 'Default rendered component has class \"sl-datetime\"');\n\n        var defaultRendered = element.text().trim();\n        var defaultRegEx = /^[a-zA-Z]+[,]\\s[a-zA-Z]+\\s\\d{1,2}[a-z]{2}\\s\\d{4}[,]\\s\\d{1,2}[:]\\d{2}\\s(AM|PM)\\s[A-Z]+$/;\n\n        assert.strictEqual(defaultRegEx.test(defaultRendered), true, 'Default datetime string matches default pattern');\n\n        var datetimeAttr = element.attr('datetime');\n        var dataOriginalTitleAttr = element.attr('data-original-title');\n\n        assert.strictEqual(datetimeAttr, dataOriginalTitleAttr, 'Attributes datetime and data-original-title match');\n\n        var datetimeTZRegex = /^\\d{4}[-]\\d{2}[-]\\d{2}\\s\\d{1,2}[:]\\d{2}\\s[A-Z]+$/;\n\n        assert.strictEqual(datetimeTZRegex.test(element.attr('datetime')), true, 'Attribute datetime matches ISO datetime format plus timezone code');\n\n        var data = element.data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), dataOriginalTitleAttr, 'Tooltip title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default tooltip trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Relative values applied correctly', function (assert) {\n\n        var pastDate = window.moment().subtract(4321, 'minutes').toISOString();\n\n        this.set('value', pastDate);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['timezone', 'America/Chicago', 'format', 'relative', 'value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [5, 18], [5, 23]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var pastRendered = this.$('>:first-child').text().trim();\n\n        assert.strictEqual(pastRendered, window.moment(pastDate).fromNow(), 'Relative date is rendered correctly');\n\n        var datetimeAttr = this.$('>:first-child').attr('datetime');\n        var dataOriginalTitleAttr = this.$('>:first-child').attr('data-original-title');\n\n        assert.strictEqual(datetimeAttr, dataOriginalTitleAttr, 'Attributes datetime and data-original-title match');\n\n        assert.strictEqual(/^\\d{4}[-]\\d{2}[-]\\d{2}\\s\\d{1,2}[:]\\d{2}\\s[A-Z]+$/.test(datetimeAttr), true, 'Attribute datetime matches ISO datetime format plus timezone code');\n\n        var futureDate = window.moment().add(123456, 'minutes').toISOString();\n\n        this.set('value', futureDate);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['timezone', 'America/Chicago', 'format', 'relative', 'value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [5, 18], [5, 23]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var futureRendered = this.$('>:first-child').text().trim();\n\n        assert.strictEqual(futureRendered, 'in 3 months', 'Future datetime string matches default pattern');\n    });\n\n    ember_qunit.test('Date values applied correctly', function (assert) {\n\n        var pastDateISO = window.moment().subtract(3, 'months').toISOString();\n\n        this.set('value', pastDateISO);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['format', 'date', 'timezone', 'America/Chicago', 'value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [5, 18], [5, 23]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var pastRendered = this.$('>:first-child').text().trim();\n        var pastDate = window.moment().subtract(3, 'months');\n\n        assert.strictEqual(pastRendered, pastDate.format('YYYY-MM-DD'), 'Default date string matches default date pattern');\n\n        var datetimeAttr = this.$('>:first-child').attr('datetime');\n        var dataOriginalTitleAttr = this.$('>:first-child').attr('data-original-title');\n\n        assert.strictEqual(datetimeAttr, dataOriginalTitleAttr, 'Attributes datetime and data-original-title match');\n\n        assert.strictEqual(/^\\d{4}[-]\\d{2}[-]\\d{2}\\s\\d{1,2}[:]\\d{2}\\s[A-Z]+$/.test(this.$('>:first-child').attr('datetime')), true, 'Attribute datetime matches ISO datetime format plus timezone code');\n    });\n\n    ember_qunit.test('tooltip properties are set correctly', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['timezone', 'America/Chicago'], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        var datetimeValue = this.$('>:first-child').attr('data-original-title');\n\n        assert.strictEqual(tooltipData.getTitle(), datetimeValue, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['timezone', 'America/Chicago', 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [4, 20], [4, 27]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-date-time', [], ['timezone', 'America/Chicago', 'title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [4, 18], [4, 23]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [5, 20], [5, 27]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-date-time-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-date-time-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-date-time-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-drop-button-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-drop-button', 'Integration | Component | sl drop button', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-drop-button', ['loc', [null, [2, 6], [2, 24]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('btn-group'), 'Has class \"btn-group\"');\n\n        assert.ok(this.$('>:first-child').hasClass('dropdown'), 'Has class \"dropdown\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-drop-button'), 'Has class \"sl-drop-button\"');\n\n        assert.ok(this.$('>:first-child').find('button').hasClass('dropdown-toggle'), 'Has class \"dropdown-toggle\"');\n\n        assert.ok(this.$('>:first-child').find('ul').hasClass('dropdown-menu'), 'Has class \"dropdown-menu\"');\n\n        assert.ok(this.$('>:first-child').hasClass('dropdown-default'), 'Has class \"dropdown-default\"');\n\n        assert.strictEqual(this.$('>:first-child').find('ul').attr('role'), 'menu', 'ARIA role is properly set to \"menu\"');\n    });\n\n    ember_qunit.test('Theme property applies theme class', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['theme', 'hover'], ['loc', [null, [2, 6], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('dropdown-hover'), 'Rendered drop-button has new theme class');\n    });\n\n    ember_qunit.test('Label property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['label', 'test'], ['loc', [null, [2, 6], [2, 37]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'test', '\"label\" property is rendered correctly');\n    });\n\n    ember_qunit.test('size property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['size', 'large'], ['loc', [null, [2, 6], [2, 37]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('button').hasClass('btn-lg'), '\"size\" property renders expected class \"btn-lg\"');\n    });\n\n    ember_qunit.test('align property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['align', 'right'], ['loc', [null, [2, 6], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('ul').hasClass('dropdown-menu-right'), '\"align\" property renders expected class \"dropdown-menu-right\"');\n    });\n\n    ember_qunit.test('Icon class property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['label', 'test'], ['loc', [null, [2, 6], [2, 37]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('span').hasClass('caret'), true, 'Default component has iconClass \"caret\"');\n\n        assert.strictEqual(this.$('>:first-child').find('span.caret').length, 1, 'Default rendered component includes caret icon span');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n      ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['label', 'test', 'iconClass', 'test'], ['loc', [null, [2, 6], [2, 54]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('span.test').length, 1, 'Rendered component includes test icon span');\n    });\n\n    ember_qunit.test('label is set properly on \"sl-drop-option\"', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(1);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-drop-option', [], ['label', 'red'], ['loc', [null, [3, 12], [3, 42]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-drop-button', [], ['label', 'test'], 0, null, ['loc', [null, [2, 8], [4, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('ul').text().trim(), 'red', '\"sl-drop-option\" sets label properly');\n    });\n\n    ember_qunit.test('Content is yielded when label is not set', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('           ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createElement('div');\n                        dom.setAttribute(el1, 'class', 'test');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 27\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    dom.insertBoundary(fragment, null);\n                    return morphs;\n                },\n                statements: [['block', 'sl-drop-button', [], [], 0, null, ['loc', [null, [2, 8], [4, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.test').length, 1);\n    });\n\n    ember_qunit.test('sl-drop-option icon is supported', function (assert) {\n        var testContent = {\n            label: 'test',\n            icon: 'caret'\n        };\n\n        this.set('content', [testContent]);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [2, 33], [2, 40]]]]], [], []]], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find(':first-child').find('img').attr('src'), 'caret', '\"icon\" property on sl-drop-option is supported');\n    });\n\n    ember_qunit.test('sl-drop-option label is supported', function (assert) {\n        var testContent = {\n            label: 'test'\n        };\n\n        this.set('content', [testContent]);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-button', [], ['content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [2, 33], [2, 40]]]]], [], []]], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('ul').text().trim(), 'test', '\"label\" property on sl-drop-option is supported');\n    });\n\n    ember_qunit.test('Click action triggers bound action', function (assert) {\n        assert.expect(1);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(1);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-drop-option', [], ['action', 'testAction', 'label', 'red'], ['loc', [null, [3, 12], [3, 62]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-drop-button', [], [], 0, null, ['loc', [null, [2, 8], [4, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        this.on('testAction', function () {\n            assert.ok(true, 'The test action was called');\n        });\n\n        this.$('>:first-child').find('a').click();\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 28], [2, 35]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 40], [2, 47]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-drop-button-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-drop-button-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-drop-button-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-drop-option-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-drop-option', 'Integration | Component | sl drop option', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-drop-option', ['loc', [null, [2, 8], [2, 26]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-drop-option'), 'Rendered component has class \"sl-drop-option\"');\n\n        assert.strictEqual(this.$('>:first-child').attr('role'), 'menuitem', 'ARIA role is properly set to \"menuitem\"');\n    });\n\n    ember_qunit.test('Option type class value depends on `label` value', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-drop-option', ['loc', [null, [2, 8], [2, 26]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('presentation'), false, 'Rendered component initially does not have class \"presentation\"');\n\n        assert.ok(this.$('>:first-child').hasClass('divider'), 'Rendered component initially has class \"divider\"');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-option', [], ['label', 'test'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').hasClass('divider'), false, 'Rendered component does not have class \"divider\"');\n\n        assert.ok(this.$('>:first-child').hasClass('presentation'), 'Rendered compnonet has class \"presentation\" with valid \"label\" value');\n    });\n\n    ember_qunit.test('label is present thus hyperlink tag is rendered', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-drop-option', ['loc', [null, [2, 8], [2, 26]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notOk(this.$('>:first-child').find('a').attr('role'), 'Hyperlink is not rendered if label is not set');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-option', [], ['label', 'test'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('a').attr('role'), 'menuitem', 'Hyperlink is rendered if label is set');\n\n        assert.strictEqual(this.$('>:first-child').find('a').text().trim(), 'test', 'Hyperlink text is that of label value');\n    });\n\n    ember_qunit.test('if label is present and icon is set icon image tag is rendered with sample path', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-option', [], ['label', 'test'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notOk(this.$('>:first-child').find('img').attr('src'), 'Icon is not present thus img tag not set');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-option', [], ['label', 'test', 'icon', 'testDir/testImg.jpeg'], ['loc', [null, [2, 8], [2, 67]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('img').attr('src'), 'testDir/testImg.jpeg', 'Icon is present with correct path and img tag is rendered with same path');\n    });\n\n    ember_qunit.test('Action is wired into template hyperlink tag', function (assert) {\n        assert.expect(1);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-drop-option', [], ['action', 'testAction', 'label', 'test'], ['loc', [null, [2, 8], [2, 59]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function () {\n            assert.ok(true, 'The test action was called');\n        });\n\n        this.$('>:first-child').find('a').click();\n    });\n\n});","define('dummy/tests/integration/components/sl-drop-option-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-drop-option-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-drop-option-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-grid-cell-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-grid-cell', 'Integration | Component | sl grid cell', {\n        integration: true\n    });\n\n    var defaultColumn = Ember['default'].Object.extend({\n        valuePath: 'value'\n    });\n\n    var defaultRow = Ember['default'].Object.extend({\n        value: 'Test'\n    });\n\n    var defaultTemplate = Ember['default'].HTMLBars.template((function () {\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 3,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n    ');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                return morphs;\n            },\n            statements: [['inline', 'sl-grid-cell', [], ['column', ['subexpr', '@mut', [['get', 'column', ['loc', [null, [2, 26], [2, 32]]]]], [], []], 'row', ['subexpr', '@mut', [['get', 'row', ['loc', [null, [2, 37], [2, 40]]]]], [], []]], ['loc', [null, [2, 4], [2, 42]]]]],\n            locals: [],\n            templates: []\n        };\n    })());\n\n    ember_qunit.test('Column alignment class is applied', function (assert) {\n        var column = defaultColumn.create({\n            align: 'right'\n        });\n        var row = defaultRow.create();\n\n        this.set('column', column);\n        this.set('row', row);\n\n        this.render(defaultTemplate);\n\n        assert.ok(this.$('>:first-child').hasClass('text-right'), 'Component has expected class \"text-right\" with right-aligned column');\n    });\n\n    ember_qunit.test('Primary column class is applied', function (assert) {\n        var column = defaultColumn.create({\n            primary: true\n        });\n        var row = defaultRow.create();\n\n        this.set('column', column);\n        this.set('row', row);\n\n        this.render(defaultTemplate);\n\n        assert.ok(this.$('>:first-child').hasClass('primary-column'), 'Component has expected class \"primary-column\"');\n    });\n\n    ember_qunit.test('Content value is handled for valuePath', function (assert) {\n        var column = defaultColumn.create();\n        var row = defaultRow.create();\n\n        this.set('column', column);\n        this.set('row', row);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid-cell', [], ['column', ['subexpr', '@mut', [['get', 'column', ['loc', [null, [2, 30], [2, 36]]]]], [], []], 'row', ['subexpr', '@mut', [['get', 'row', ['loc', [null, [2, 41], [2, 44]]]]], [], []]], ['loc', [null, [2, 8], [2, 46]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.equal(this.$('>:first-child').text().trim(), row.get('value'), 'row value matches content value');\n    });\n\n    ember_qunit.test('Clicking on grid-cell invokes onClick handler', function (assert) {\n        var column = defaultColumn.create();\n        var row = defaultRow.create();\n        var spyOnClick = sinon['default'].spy();\n\n        this.set('column', column);\n        this.set('row', row);\n\n        this.on('onClick', spyOnClick);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid-cell', [], ['column', ['subexpr', '@mut', [['get', 'column', ['loc', [null, [2, 30], [2, 36]]]]], [], []], 'row', ['subexpr', '@mut', [['get', 'row', ['loc', [null, [2, 41], [2, 44]]]]], [], []], 'onClick', 'onClick'], ['loc', [null, [2, 8], [2, 64]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').click();\n\n        assert.ok(spyOnClick.called, 'onClick action handler was called');\n    });\n\n    ember_qunit.test('Column size is applied when column size is a number or string', function (assert) {\n\n        var column = defaultColumn.create();\n        var row = defaultRow.create();\n\n        column.set('size', 42);\n\n        this.set('column', column);\n        this.set('row', row);\n\n        this.render(defaultTemplate);\n\n        assert.equal(this.$('>:first-child').width(), 42, 'Setting column size to a number is supported');\n\n        column = defaultColumn.create();\n        column.set('size', 'small');\n        this.set('column', column);\n\n        this.render(defaultTemplate);\n\n        assert.ok(this.$('>:first-child').hasClass('column-small'), 'Setting column size to a valid string value adds appropriate class');\n    });\n\n});","define('dummy/tests/integration/components/sl-grid-cell-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-grid-cell-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-grid-cell-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-grid-column-header-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-grid-column-header', 'Integration | Component | sl grid column header', {\n        integration: true\n    });\n\n    var template = Ember.HTMLBars.template((function () {\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 3,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n    ');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                return morphs;\n            },\n            statements: [['inline', 'sl-grid-column-header', [], ['column', ['subexpr', '@mut', [['get', 'column', ['loc', [null, [2, 35], [2, 41]]]]], [], []]], ['loc', [null, [2, 4], [2, 43]]]]],\n            locals: [],\n            templates: []\n        };\n    })());\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-grid-column-header', ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-grid-column-header'), 'sl-grid-column-header class is present');\n    });\n\n    ember_qunit.test('Sorted class is present when column is in sorted state', function (assert) {\n        var column = {\n            sortable: true,\n            sortAscending: true\n        };\n\n        this.set('column', column);\n\n        this.render(template);\n\n        this.set('column', column);\n\n        assert.ok(this.$('>:first-child').hasClass('column-ascending'), 'column-ascending class is present when sortAscending is true');\n\n        column = {\n            sortable: true,\n            sortAscending: false\n        };\n\n        this.set('column', column);\n\n        assert.ok(this.$('>:first-child').hasClass('column-descending'), 'column-descending class is present when sortAscending is false');\n    });\n\n    ember_qunit.test('Sortable column class is present when column is sortable', function (assert) {\n        var column = {\n            sortable: true\n        };\n\n        this.set('column', column);\n\n        this.render(template);\n\n        assert.ok(this.$('>:first-child').hasClass('sortable-column'), true, 'Component has class \"sortable-column\" with sortable column');\n    });\n\n    ember_qunit.test('Sorted icon class is applied correctly', function (assert) {\n        var column = {\n            sortable: true\n        };\n\n        this.render(template);\n\n        this.set('column', column);\n\n        assert.ok(this.$('>:first-child').find('i').hasClass('fa-sort'), 'Class fa-sort is present when column is sortable');\n\n        column = {\n            sortable: true,\n            sortAscending: true\n        };\n\n        this.set('column', column);\n\n        assert.ok(this.$('>:first-child').find('i').hasClass('fa-sort-asc'), 'Class fa-sort is present when column is sortable');\n\n        column = {\n            sortable: true,\n            sortAscending: false\n        };\n\n        this.set('column', column);\n\n        assert.ok(this.$('>:first-child').find('i').hasClass('fa-sort-desc'), 'Class fa-sort is present when column is sortable');\n    });\n\n    ember_qunit.test('Column title is rendered when provided', function (assert) {\n        var column = {\n            title: 'column title'\n        };\n\n        this.set('column', column);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid-column-header', [], ['column', ['subexpr', '@mut', [['get', 'column', ['loc', [null, [2, 39], [2, 45]]]]], [], []]], ['loc', [null, [2, 8], [2, 47]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), column.title, 'Title was rendered correctly');\n    });\n\n});","define('dummy/tests/integration/components/sl-grid-column-header-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-grid-column-header-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-grid-column-header-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-grid-row-test', ['ember-qunit', 'sinon'], function (ember_qunit, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-grid-row', 'Integration | Component | sl grid row', {\n        integration: true\n    });\n\n    var defaultTemplate = Ember.HTMLBars.template((function () {\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 3,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n    ');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                return morphs;\n            },\n            statements: [['content', 'sl-grid-row', ['loc', [null, [2, 4], [2, 19]]]]],\n            locals: [],\n            templates: []\n        };\n    })());\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(defaultTemplate);\n\n        assert.ok(this.$('>:first-child').hasClass('sl-grid-row'), 'sl-grid-row class is present');\n    });\n\n    ember_qunit.test('Active row class is supported', function (assert) {\n        var row = {};\n\n        this.set('row', row);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid-row', [], ['row', ['subexpr', '@mut', [['get', 'row', ['loc', [null, [2, 26], [2, 29]]]]], [], []]], ['loc', [null, [2, 8], [2, 31]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.equal(this.$('>:first-child').hasClass('active'), false, 'Component with non-active row does not have \"active\" class');\n\n        row = { active: true };\n        this.set('row', row);\n\n        assert.equal(this.$('>:first-child').hasClass('active'), true, 'Component with active row has \"active\" class');\n    });\n\n    ember_qunit.test('rowClick action handler is called when row is clicked', function (assert) {\n        var row = { active: true };\n        var spy = sinon['default'].spy();\n\n        this.set('row', row);\n        this.on('rowClick', spy);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid-row', [], ['row', ['subexpr', '@mut', [['get', 'row', ['loc', [null, [2, 26], [2, 29]]]]], [], []], 'rowClick', 'rowClick'], ['loc', [null, [2, 8], [2, 51]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').click();\n\n        assert.ok(spy.called);\n    });\n\n});","define('dummy/tests/integration/components/sl-grid-row-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-grid-row-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-grid-row-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-grid-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    var columns = Ember['default'].A([{ title: 'Name', valuePath: 'name' }, { title: 'ID', valuePath: 'id' }]);\n\n    var rowActions = [{\n        label: 'Log',\n        action: 'sendLog'\n    }, {\n        label: 'Another Action',\n        action: 'anotherAction'\n    }];\n\n    var content = Ember['default'].A([{ id: 4, name: 'Alice' }, { id: 8, name: 'Bob' }, { id: 9, name: 'Charlie' }, { id: 10, name: 'Henry' }, { id: 11, name: 'Mary' }]);\n\n    var defaultTemplate = Ember['default'].HTMLBars.template((function () {\n        var child0 = (function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 2,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createElement('h1');\n                    var el2 = dom.createTextNode('Header');\n                    dom.appendChild(el1, el2);\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })();\n\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 5,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n            },\n            statements: [['block', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [2, 23], [2, 30]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [2, 39], [2, 46]]]]], [], []]], 0, null, ['loc', [null, [2, 4], [4, 16]]]]],\n            locals: [],\n            templates: [child0]\n        };\n    })());\n\n    ember_qunit.moduleForComponent('sl-grid', 'Integration | Component | sl grid', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 11\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                    dom.insertBoundary(fragment, 0);\n                    dom.insertBoundary(fragment, null);\n                    return morphs;\n                },\n                statements: [['content', 'sl-grid', ['loc', [null, [1, 0], [1, 11]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-grid'));\n    });\n\n    ember_qunit.test('Content is yielded', function (assert) {\n        this.render(defaultTemplate);\n\n        assert.strictEqual(this.$('>:first-child').find('h1').text(), 'Header');\n    });\n\n    ember_qunit.test('Header columns and row counts match data passed in', function (assert) {\n        this.set('columns', columns);\n        this.set('content', content);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 43\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                    dom.insertBoundary(fragment, 0);\n                    dom.insertBoundary(fragment, null);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [1, 18], [1, 25]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [1, 34], [1, 41]]]]], [], []]], ['loc', [null, [1, 0], [1, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n\n        assert.strictEqual(first.find('.sl-grid-row').length, content.length, 'rendered row count matches content row count');\n\n        assert.strictEqual(first.find('.sl-grid-column-header').length, columns.length, 'header column count matches columns count of columns passed in');\n    });\n\n    ember_qunit.test('Setting \"sortable\" property within the columns property to true applies the sortable-column class', function (assert) {\n        var columns = Ember['default'].A([{ title: 'Name', valuePath: 'name' }, { title: 'ID', valuePath: 'id', sortable: true }]);\n\n        this.set('columns', columns);\n        this.set('content', content);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 43\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                    dom.insertBoundary(fragment, 0);\n                    dom.insertBoundary(fragment, null);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [1, 18], [1, 25]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [1, 34], [1, 41]]]]], [], []]], ['loc', [null, [1, 0], [1, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n\n        assert.ok(first.find('.sl-grid-column-header:nth-child(2)').hasClass('sortable-column'));\n    });\n\n    ember_qunit.test('Only primary column remains visible when detail-pane is open', function (assert) {\n        var columns = Ember['default'].A([{ title: 'Name', valuePath: 'name' }, { title: 'ID', valuePath: 'id', primary: true }]);\n\n        var contentTemplate = Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 16\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createElement('h1');\n                    var el2 = dom.createTextNode('content');\n                    dom.appendChild(el1, el2);\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })());\n\n        this.registry.register('template:detail-component', contentTemplate);\n        this.registry.register('component:detail-component', Ember['default'].Component.extend({\n            layoutName: 'detail-component'\n        }));\n\n        this.set('columns', columns);\n        this.set('content', content);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 21], [3, 28]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 21], [4, 28]]]]], [], []], 'detailComponent', 'detail-component'], ['loc', [null, [2, 8], [6, 11]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n        first.find('.sl-grid-row:first td:first').trigger('click');\n\n        assert.strictEqual(first.find('th:visible').length, 1, 'Only one column is visible when detail pane is open');\n\n        assert.strictEqual(first.find('th:visible').text().trim(), columns[1].title, 'Visible column is expected primary column');\n    });\n\n    ember_qunit.test('Action requestData is fired in continuous mode when user scrolls to the bottom of the grid', function (assert) {\n        var _this = this;\n\n        this.set('columns', columns);\n        this.set('content', content);\n        this.set('totalCount', content.length + 10);\n\n        var spy = sinon['default'].spy();\n\n        this.on('requestData', spy);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 9,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'requestData', 'requestData', 'totalCount', ['subexpr', '@mut', [['get', 'totalCount', ['loc', [null, [5, 23], [5, 33]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [6, 20], [6, 27]]]]], [], []], 'continuous', true], ['loc', [null, [2, 8], [8, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        Ember['default'].run(function () {\n            _this.$('>:first-child').find('.list-pane .content').trigger('scroll');\n        });\n\n        assert.ok(spy.calledOnce, 'requestData action fired');\n    });\n\n    ember_qunit.test('Pagination is displayed at the bottom of the grid and page count is correct', function (assert) {\n        var pageSize = 25;\n\n        this.set('columns', columns);\n        this.set('content', content);\n        this.set('pageSize', pageSize);\n        this.set('totalCount', 100);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'totalCount', ['subexpr', '@mut', [['get', 'totalCount', ['loc', [null, [4, 23], [4, 33]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [5, 20], [5, 27]]]]], [], []], 'pageSize', ['subexpr', '@mut', [['get', 'pageSize', ['loc', [null, [6, 21], [6, 29]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n\n        assert.strictEqual(first.find('.sl-pagination').length, 1, 'Pagination is displayed');\n\n        var text = first.find('.sl-pagination :nth-child(2) a').text().replace(/\\s+/g, '');\n\n        assert.strictEqual(text, '1/4', 'Page count is correct on pagination');\n    });\n\n    ember_qunit.test('Action requestData is fired with correct arguments in paging mode', function (assert) {\n        var pageSize = 25;\n        var offset = 25;\n\n        this.set('columns', columns);\n        this.set('content', content);\n        this.set('pageSize', pageSize);\n        this.set('totalCount', 50);\n\n        var spy = sinon['default'].spy();\n\n        this.on('requestData', spy);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 9,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'requestData', 'requestData', 'totalCount', ['subexpr', '@mut', [['get', 'totalCount', ['loc', [null, [5, 23], [5, 33]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [6, 20], [6, 27]]]]], [], []], 'pageSize', ['subexpr', '@mut', [['get', 'pageSize', ['loc', [null, [7, 21], [7, 29]]]]], [], []]], ['loc', [null, [2, 8], [8, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = $('>:first-child');\n\n        first.find('.sl-pagination :nth-child(3) a').click();\n\n        assert.ok(spy.calledOnce, 'requestData action fired');\n\n        assert.ok(spy.calledWith(pageSize, offset), 'requestData was called with correct arguments');\n    });\n\n    ember_qunit.test('Clicking on a row fires the rowClick action', function (assert) {\n        var firstRowId = content[0].id;\n        var spy = sinon['default'].spy();\n\n        this.set('columns', columns);\n        this.set('content', content);\n\n        this.on('rowClick', spy);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'rowClick', 'rowClick'], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('td:first').trigger('click');\n\n        assert.ok(spy.calledOnce, 'rowClick action was fired');\n\n        assert.strictEqual(spy.getCall(0).args[0].id, firstRowId, 'rowClick action was called with correct row');\n    });\n\n    ember_qunit.test('detailComponent, detailHeaderComponent, detailFooterComponent' + 'is rendered and correct data is displayed on row click', function (assert) {\n        var _this2 = this;\n\n        var headerTemplate = Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 28\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createElement('h1');\n                    var el2 = dom.createTextNode('header:');\n                    dom.appendChild(el1, el2);\n                    var el2 = dom.createComment('');\n                    dom.appendChild(el1, el2);\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);\n                    return morphs;\n                },\n                statements: [['content', 'model.id', ['loc', [null, [1, 11], [1, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })());\n        var contentTemplate = Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 29\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createElement('h1');\n                    var el2 = dom.createTextNode('content:');\n                    dom.appendChild(el1, el2);\n                    var el2 = dom.createComment('');\n                    dom.appendChild(el1, el2);\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);\n                    return morphs;\n                },\n                statements: [['content', 'model.id', ['loc', [null, [1, 12], [1, 24]]]]],\n                locals: [],\n                templates: []\n            };\n        })());\n        var footerTemplate = Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 28\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createElement('h1');\n                    var el2 = dom.createTextNode('footer:');\n                    dom.appendChild(el1, el2);\n                    var el2 = dom.createComment('');\n                    dom.appendChild(el1, el2);\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);\n                    return morphs;\n                },\n                statements: [['content', 'model.id', ['loc', [null, [1, 11], [1, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })());\n\n        var firstModelId = content[0].id;\n\n        var registerTemplate = function registerTemplate(name, template) {\n            _this2.registry.register('template:' + name, template);\n            _this2.registry.register('component:' + name, Ember['default'].Component.extend({\n                layoutName: '' + name\n            }));\n        };\n\n        registerTemplate('detail-header-component', headerTemplate);\n        registerTemplate('detail-component', contentTemplate);\n        registerTemplate('detail-footer-component', footerTemplate);\n\n        this.set('columns', columns);\n        this.set('content', content);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 9,\n                            'column': 8\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n            ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 25], [3, 32]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 25], [4, 32]]]]], [], []], 'detailComponent', 'detail-component', 'detailHeaderComponent', 'detail-header-component', 'detailFooterComponent', 'detail-footer-component'], ['loc', [null, [2, 12], [8, 15]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n        var detailHeaderH1 = first.find('header').find('h1');\n        var detailContentH1 = first.find('.detail-content').find('h1');\n        var detailFooterH1 = first.find('footer').find('h1');\n\n        first.find('td:first').trigger('click');\n\n        assert.strictEqual(detailHeaderH1.text(), 'header:' + firstModelId);\n\n        assert.strictEqual(detailContentH1.text(), 'content:' + firstModelId);\n\n        assert.strictEqual(detailFooterH1.text(), 'footer:' + firstModelId);\n\n        ['detail-header-component', 'detail-component', 'detail-footer-component'].forEach(function (name) {\n            _this2.registry.unregister('component:' + name);\n            _this2.registry.unregister('template:' + name);\n        });\n    });\n\n    ember_qunit.test('Filter component is displayed when filterComponent property is set', function (assert) {\n        this.registry.register('component:filter-component', Ember['default'].Component.extend({\n            layoutName: 'filter-component'\n        }));\n\n        this.registry.register('template:filter-component', Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 24\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createElement('h1');\n                    var el2 = dom.createTextNode('FilterComponent');\n                    dom.appendChild(el1, el2);\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.render('hbs\\n        {{sl-grid filterComponent=\"filter-component\"}}\\n    ');\n\n        var first = this.$('>:first-child');\n\n        first.find('button:contains(Filter)').click();\n\n        assert.ok(first.find('.filter-pane').is(':visible'), 'Filter pane is visible');\n\n        assert.strictEqual(first.find('.filter-pane').find('h1:contains(FilterComponent)').length, 1, 'Filter pane component passed in was rendered');\n\n        this.registry.unregister('component:filter-component');\n        this.registry.unregister('template:filter-component');\n    });\n\n    ember_qunit.test('Setting filterButtonLabel changes filter button text', function (assert) {\n        var label = '__new_label__';\n\n        this.set('filterButtonLabel', label);\n\n        // Pass a component string value so filterButton gets rendered\n        this.render('hbs\\n        {{sl-grid\\n             filterComponent=\\'not-a-real-component\\'\\n             filterButtonLabel=filterButtonLabel\\n         }}\\n    ');\n\n        var first = this.$('>:first-child');\n\n        assert.strictEqual(first.find('.grid-header button').text().trim(), label);\n    });\n\n    ember_qunit.test('Setting height property gives the grid a fixed height', function (assert) {\n        this.set('columns', columns);\n        this.set('content', content);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [2, 26], [2, 33]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [2, 42], [2, 49]]]]], [], []], 'height', 1000], ['loc', [null, [2, 8], [2, 63]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n        var totalHeight = parseInt(first.find('.grid-header').css('height')) + parseInt(first.find('.list-pane .column-headers').css('height')) + parseInt(first.find('.list-pane .content').css('height')) + parseInt(first.find('.list-pane footer').css('height'));\n\n        assert.equal(totalHeight, 1000, 'Total calculated height is expected value');\n    });\n\n    ember_qunit.test('Row actions are rendered and actions are triggered as expected', function (assert) {\n        var sendLogSpy = sinon['default'].spy();\n\n        this.set('columns', columns);\n        this.set('content', content);\n        this.set('rowActions', rowActions);\n\n        this.on('sendLog', sendLogSpy);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'rowActions', ['subexpr', '@mut', [['get', 'rowActions', ['loc', [null, [5, 23], [5, 33]]]]], [], []], 'sendLog', ['subexpr', 'action', ['sendLog'], [], ['loc', [null, [6, 20], [6, 40]]]]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n        var firstRow = first.find('.content tr:first');\n\n        assert.strictEqual(firstRow.find('.sl-drop-option:first a').text().trim(), rowActions[0].label, 'Row action link was present');\n\n        firstRow.find('.sl-drop-option:first a').click();\n\n        assert.ok(sendLogSpy.called, 'Action was triggered on click of row action');\n\n        assert.strictEqual(sendLogSpy.getCall(0).args[0].id, content[0].id, 'Row passed to row action callback, matches clicked row');\n    });\n\n    ember_qunit.test('actionButtonLabel property is accepted', function (assert) {\n        var actionsButtonLabel = 'More Options';\n\n        this.set('columns', columns);\n        this.set('content', content);\n        this.set('rowActions', rowActions);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'rowActions', ['subexpr', '@mut', [['get', 'rowActions', ['loc', [null, [5, 23], [5, 33]]]]], [], []]], ['loc', [null, [2, 8], [6, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var cell = this.$('>:first-child').find('td.actions-cell:first');\n\n        assert.strictEqual(cell.find('button').text().trim(), 'Actions', 'Actions button label is \"Actions\" by default');\n\n        this.set('actionsButtonLabel', actionsButtonLabel);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 20], [3, 27]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 20], [4, 27]]]]], [], []], 'rowActions', ['subexpr', '@mut', [['get', 'rowActions', ['loc', [null, [5, 23], [5, 33]]]]], [], []], 'actionsButtonLabel', ['subexpr', '@mut', [['get', 'actionsButtonLabel', ['loc', [null, [6, 31], [6, 49]]]]], [], []]], ['loc', [null, [2, 8], [7, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        cell = this.$('>:first-child').find('td.actions-cell:first');\n\n        assert.strictEqual(cell.find('button').text().trim(), actionsButtonLabel, 'Actions button can be changed');\n    });\n\n    ember_qunit.test('sortColumn action was fired with correct arguments when a sortable column is selected for sorting', function (assert) {\n        var columns = Ember['default'].A([{ title: 'Name', valuePath: 'name' }, { title: 'ID', valuePath: 'id', sortable: true }]);\n\n        var sortColumnSpy = sinon['default'].spy();\n\n        this.set('columns', columns);\n        this.set('content', content);\n        this.on('sortColumn', sortColumnSpy);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 8\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n            ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-grid', [], ['columns', ['subexpr', '@mut', [['get', 'columns', ['loc', [null, [3, 24], [3, 31]]]]], [], []], 'content', ['subexpr', '@mut', [['get', 'content', ['loc', [null, [4, 24], [4, 31]]]]], [], []], 'sortColumn', 'sortColumn'], ['loc', [null, [2, 12], [6, 14]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var first = this.$('>:first-child');\n\n        first.find('.sl-grid-column-header:nth-child(2)').click();\n\n        var row = sortColumnSpy.getCall(0).args[0];\n        var sortOrder = sortColumnSpy.getCall(0).args[1] ? 'ascending' : 'descending';\n\n        assert.ok(sortColumnSpy.calledOnce, 'sortColumn action was fired');\n\n        assert.strictEqual(row.id, columns[1].id, 'sortColumn action handler received correct row');\n\n        assert.strictEqual(sortOrder, 'ascending', 'Sort order is ascending');\n\n        first.find('.sl-grid-column-header:nth-child(2)').click();\n        sortOrder = sortColumnSpy.getCall(1).args[1] ? 'ascending' : 'descending';\n\n        assert.strictEqual(sortOrder, 'descending', 'Sort order is descending on consecutive click');\n    });\n\n});","define('dummy/tests/integration/components/sl-grid-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-grid-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-grid-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-input-test', ['ember-qunit', 'qunit'], function (ember_qunit, qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-input', 'Integration | Component | sl input', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-input', ['loc', [null, [2, 8], [2, 20]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').attr('data-trigger'), 'focus', 'dataTrigger defaults to focus');\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('type'), 'text', 'type defaults to text');\n\n        assert.ok(this.$('>:first-child').hasClass('form-group'), 'Has class \"form-group\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-input'), 'Has class \"sl-input\"');\n\n        assert.ok(this.$('>:first-child').find('input').hasClass('form-control'), 'Has class \"form-control\"');\n    });\n\n    ember_qunit.test('Label is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['label', 'Test label'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('label').hasClass('control-label'), 'Has class \"control-label\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.control-label').text().trim(), 'Test label', 'control-label is rendered when label is set');\n    });\n\n    ember_qunit.test('for attribute value on label matches id of input', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['label', 'test label'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label').attr('for'), this.$('>:first-child').find('input').attr('id'), 'for value matches id of input');\n    });\n\n    ember_qunit.test('Optional property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['label', 'Optional', 'optional', 'true'], ['loc', [null, [2, 8], [2, 53]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.text-info').length, 1, '\"optional\" property sets class \"text-info\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.text-info').text().trim(), 'Optional', 'text-info renders optional when optional is set');\n    });\n\n    ember_qunit.test('Required property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['label', 'Required', 'required', 'true'], ['loc', [null, [2, 8], [2, 53]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.text-danger').length, 1, '\"required\" property sets class \"text-danger\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.text-danger').text().trim(), 'Required', 'text-danger renders required when required is set');\n    });\n\n    ember_qunit.test('type property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['type', 'email'], ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('type'), 'email', 'type property is supported');\n    });\n\n    ember_qunit.test('Click to edit input has the correct class', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['clickToEdit', 'true'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('input').hasClass('click-to-edit'), 'click-to-edit class is present upon clickToEdit set to true');\n    });\n\n    ember_qunit.test('disabled property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['disabled', 'true'], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('input').prop('disabled'), 'disabled property is supported');\n    });\n\n    ember_qunit.test('Help text is displayed', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['helpText', 'help text'], ['loc', [null, [2, 8], [2, 41]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.help-block').length, 1, '\"helpText\" property sets class \"help-block\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.help-block').text().trim(), 'help text', 'help-block renders helpText when helpText is set');\n    });\n\n    ember_qunit.test('Placeholder property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['placeholder', 'placeholder'], ['loc', [null, [2, 8], [2, 46]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('placeholder'), 'placeholder', 'Placeholder text is rendered');\n    });\n\n    ember_qunit.test('Readonly property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['readonly', 'true'], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('input').prop('readonly'), 'readonly is set when readonly is true');\n    });\n\n    ember_qunit.test('Typeahead classes are present', function (assert) {\n        var colors = ['Black', 'Yellow'];\n\n        this.set('suggestions', colors);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['suggestions', ['subexpr', '@mut', [['get', 'suggestions', ['loc', [null, [2, 31], [2, 42]]]]], [], []]], ['loc', [null, [2, 8], [2, 44]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.twitter-typeahead').length, 1, 'twitter-typeahead class exists');\n\n        assert.strictEqual(this.$('>:first-child').find('.typeahead').length, 2, 'typeahead class exists');\n\n        assert.strictEqual(this.$('>:first-child').find('.tt-input').length, 1, 'tt-input class exists');\n\n        assert.strictEqual(this.$('>:first-child').find('.tt-menu').length, 1, 'tt-menu class exists');\n\n        assert.strictEqual(this.$('>:first-child').find('.tt-dataset').length, 1, 'tt-dataset class exists');\n    });\n\n    ember_qunit.test('name property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['name', 'testname'], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('name'), 'testname', 'Rendered input has name set');\n    });\n\n    ember_qunit.test('name applies property to input', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['name', 'testname'], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('name'), 'testname', 'Rendered input has name set');\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 25], [2, 30]]]]], [], []]], ['loc', [null, [2, 8], [2, 32]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 27], [2, 34]]]]], [], []]], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-input', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 25], [2, 30]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 39], [2, 46]]]]], [], []]], ['loc', [null, [2, 8], [2, 48]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'focus', 'Default trigger is \"focus\"');\n    });\n\n    qunit.skip('Typeahead \"suggestionNamePath\" sets key for suggestions object', function () {});\n\n    qunit.skip('Typeahead \"value\" prop is set upon selection of typeahead results', function () {});\n\n});","define('dummy/tests/integration/components/sl-input-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-input-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-input-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-loading-icon-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-loading-icon', 'Integration | Component | sl loading icon', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-loading-icon', ['loc', [null, [2, 8], [2, 27]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-loading-icon'), 'Has class \"sl-loading-icon\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-loading-icon-dark'), 'Has class \"sl-loading-icon-dark\"');\n    });\n\n    ember_qunit.test('Inverse property renders light icon scheme', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-loading-icon', ['loc', [null, [2, 8], [2, 27]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-loading-icon-dark'), 'Inverse renders default scheme \"sl-loading-icon-dark\" icon');\n\n        assert.notOk(this.$('>:first-child').hasClass('sl-loading-icon-light'), 'Inverse true renders scheme \"sl-loading-icon-light\" icon');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-loading-icon', [], ['inverse', true], ['loc', [null, [2, 8], [2, 40]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-loading-icon-light'), 'Inverse true renders scheme \"sl-loading-icon-light\" icon');\n\n        assert.notOk(this.$('>:first-child').hasClass('sl-loading-icon-dark'), 'Inverse renders default scheme \"sl-loading-icon-dark\" icon');\n    });\n\n});","define('dummy/tests/integration/components/sl-loading-icon-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-loading-icon-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-loading-icon-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-menu-item-show-all-test', ['ember-qunit', 'sinon'], function (ember_qunit, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-menu-item-show-all', 'Integration | Component | sl menu item show all', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-menu-item-show-all', ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('a').hasClass('fa'), 'Has class \"fa\"');\n\n        assert.ok(this.$('>:first-child').find('a').hasClass('fa-chevron-circle-down'), 'Has class \"fa-chevron-circle-down\"');\n\n        assert.ok(this.$('>:first-child').hasClass('show-all'), 'Has class \"show-all\"');\n    });\n\n    ember_qunit.test('mouseEnter triggers calling of sendAction', function (assert) {\n\n        this.set('onMouseEnterSpy', sinon['default'].spy());\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu-item-show-all', [], ['onMouseEnter', ['subexpr', '@mut', [['get', 'onMouseEnterSpy', ['loc', [null, [3, 25], [3, 40]]]]], [], []]], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('a').trigger('mouseenter');\n\n        assert.ok(this.get('onMouseEnterSpy').calledOnce, 'sendAction() was triggered successfully');\n    });\n\n});","define('dummy/tests/integration/components/sl-menu-item-show-all-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-menu-item-show-all-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-menu-item-show-all-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-menu-item-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    var menuItems = {\n        label: 'Main One',\n        items: [{\n            label: 'Sub 1',\n            action: 'testActionName1',\n            data: '\"testData1\"'\n        }, {\n            label: 'Sub 2',\n            items: [{\n                label: 'Sub 2 - 1',\n                action: 'testActionName2',\n                data: '\"testData2\"'\n            }, { label: 'Sub 2 - 2' }]\n        }]\n    };\n\n    var menuItem = {\n        label: 'Main One',\n        action: 'testActionName',\n        data: '\"testData\"'\n    };\n\n    ember_qunit.moduleForComponent('sl-menu-item', 'Integration | Component | sl menu item', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-menu-item', ['loc', [null, [2, 8], [2, 24]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-menu-item'), 'Has class \"sl-menu-item\"');\n    });\n\n    ember_qunit.test('Mouse enter/leave events toggles setting of \"active\" class', function (assert) {\n\n        this.set('menuItems', menuItems);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu-item', [], ['item', ['subexpr', '@mut', [['get', 'menuItems', ['loc', [null, [3, 17], [3, 26]]]]], [], []]], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notOk(this.$('>:first-child').hasClass('active'), 'Rendered element does not have class \"active\" by default');\n\n        this.$('>:first-child').find('.has-sub-menu').find('a').first().trigger('mouseenter');\n\n        assert.ok(this.$('>:first-child').hasClass('active'), 'Rendered element has class \"active\" after mouseenter');\n\n        this.$('>:first-child').find('.has-sub-menu').find('a').first().trigger('mouseleave');\n\n        assert.notOk(this.$('>:first-child').hasClass('active'), 'Rendered element does not have class \"active\" after mouseleave');\n    });\n\n    ember_qunit.test('\"has-sub-menu\" and \"sub-menu\" classes are set when menu has sub menus', function (assert) {\n\n        this.set('menuItem', menuItem);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu-item', [], ['item', ['subexpr', '@mut', [['get', 'menuItem', ['loc', [null, [3, 17], [3, 25]]]]], [], []]], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notOk(this.$('>:first-child').hasClass('has-sub-menu'), 'Rendered element does not have class \"has-sub-menu\"');\n\n        this.set('menuItem', menuItems);\n\n        assert.ok(this.$('>:first-child').hasClass('has-sub-menu'), 'Rendered element has class \"has-sub-menu\"');\n\n        assert.ok(this.$('>:first-child').find('li').find('ul').hasClass('sub-menu'), 'Rendered element has class \"sub-menu\"');\n    });\n\n    ember_qunit.test('clickLink() action is fired from top level menu item', function (assert) {\n        assert.expect(1);\n\n        this.set('menuItem', menuItem);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu-item', [], ['item', ['subexpr', '@mut', [['get', 'menuItem', ['loc', [null, [3, 17], [3, 25]]]]], [], []], 'action', 'testAction'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function () {\n            assert.ok(true, 'The test action was called');\n        });\n\n        this.$('>:first-child').find('a').first().click();\n    });\n\n    ember_qunit.test('handleAction() action is fired from sub menu (Sub 1) item', function (assert) {\n        assert.expect(3);\n\n        this.set('menuItems', menuItems);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu-item', [], ['item', ['subexpr', '@mut', [['get', 'menuItems', ['loc', [null, [3, 17], [3, 26]]]]], [], []], 'action', 'testAction'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function (actionName, data) {\n            assert.ok(true, 'The test action was called');\n\n            assert.strictEqual(actionName, 'testActionName1', 'ActionName is passed');\n\n            assert.strictEqual(data, '\"testData1\"', 'Data is passed');\n        });\n\n        // Sub 1\n        this.$('>:first-child').find('.sub-menu:first li:first a:first').click();\n    });\n\n    ember_qunit.test('handleAction() action is fired from sub sub menu (Sub 2-1) item', function (assert) {\n        assert.expect(3);\n\n        this.set('menuItems', menuItems);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu-item', [], ['item', ['subexpr', '@mut', [['get', 'menuItems', ['loc', [null, [3, 17], [3, 26]]]]], [], []], 'action', 'testAction'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function (actionName, data) {\n            assert.ok(true, 'The test action was called');\n\n            assert.strictEqual(actionName, 'testActionName2', 'ActionName is passed');\n\n            assert.strictEqual(data, '\"testData2\"', 'Data is passed');\n        });\n\n        // Sub 2-1\n        this.$('>:first-child').find('.sub-menu:last li:first a:first').click();\n    });\n\n});","define('dummy/tests/integration/components/sl-menu-item-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-menu-item-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-menu-item-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-menu-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    var menuItems = Ember['default'].A([{\n        label: 'Main One',\n        items: [{\n            label: 'Sub 1',\n            action: 'testActionName',\n            data: '\"testData\"'\n        }, {\n            label: 'Sub 2',\n            items: [{ label: 'Sub 2 - 1' }, { label: 'Sub 2 - 2' }]\n        }]\n    }, { label: 'Main Two' }]);\n\n    var mockStream = {\n        actions: {},\n\n        on: function on(actionName, handler) {\n            console.log('here');\n            this.actions[actionName] = handler;\n        },\n\n        subject: {\n            dispose: function dispose() {\n                mockStream.actions = {};\n            },\n\n            onCompleted: function onCompleted() {}\n        }\n    };\n\n    ember_qunit.moduleForComponent('sl-menu', 'Integration | Component | sl menu', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-menu', ['loc', [null, [2, 8], [2, 19]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-menu'), 'Has class \"sl-menu\"');\n\n        assert.ok(this.$('>:first-child').find('ul').hasClass('list-inline'), 'Has class \"list-inline\"');\n    });\n\n    ember_qunit.test('\"items\" property is supported', function (assert) {\n\n        this.set('menuItems', menuItems);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['items', ['subexpr', '@mut', [['get', 'menuItems', ['loc', [null, [3, 18], [3, 27]]]]], [], []]], ['loc', [null, [2, 8], [4, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var menuItem = this.$('>:first-child').find('.sl-menu-item');\n\n        assert.strictEqual(menuItem.find('a').text().trim(), 'Main OneSub 1Sub 2Sub 2 - 1Sub 2 - 2Main Two', 'First menu item is rendered');\n    });\n\n    ember_qunit.test('\"allowShowAll\" property is supported', function (assert) {\n\n        this.set('menuItems', menuItems);\n        this.set('testAllowShowAll', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['items', ['subexpr', '@mut', [['get', 'menuItems', ['loc', [null, [3, 18], [3, 27]]]]], [], []], 'allowShowAll', ['subexpr', '@mut', [['get', 'testAllowShowAll', ['loc', [null, [4, 25], [4, 41]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.show-all').length, 0, 'menu item with class \".show-all\" is not included by default');\n\n        this.set('testAllowShowAll', true);\n\n        assert.strictEqual(this.$('>:first-child').find('.show-all').length, 1, 'menu item with class \".show-all\" is included when \"allowShowAll\" is true');\n    });\n\n    ember_qunit.test('Actions are handled properly from menu items', function (assert) {\n        assert.expect(3);\n\n        this.set('menuItems', menuItems);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['items', ['subexpr', '@mut', [['get', 'menuItems', ['loc', [null, [3, 18], [3, 27]]]]], [], []], 'action', 'testAction'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.on('testAction', function (actionName, data) {\n            assert.ok(true, 'The test action was called');\n\n            assert.strictEqual(actionName, 'testActionName', 'ActionName is passed');\n\n            assert.strictEqual(data, '\"testData\"', 'Data is passed');\n        });\n\n        this.$('>:first-child').find('.sub-menu').find('a').first().click();\n    });\n\n    ember_qunit.test('Component responds to \"doAction\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['doAction', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 21], [3, 31]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'doAction');\n\n        assert.ok(this.get('testAction').calledOnce, 'doAction() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"hideAll\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['hideAll', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 20], [3, 30]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'hideAll');\n\n        assert.ok(this.get('testAction').calledOnce, 'hideAll() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"select\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['select', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 19], [3, 29]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'select', 0);\n\n        assert.ok(this.get('testAction').calledOnce, 'select() was triggered successfully');\n\n        assert.ok(this.get('testAction').calledWithExactly(0), 'select() was called with \"0\"');\n    });\n\n    ember_qunit.test('Component responds to \"selectDown\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectDown', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 23], [3, 33]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectDown');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectDown() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectLeft\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectLeft', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 23], [3, 33]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectLeft');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectLeft() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectNext\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectNext', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 23], [3, 33]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectNext');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectNext() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectParent\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectParent', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 25], [3, 35]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectParent');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectParent() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectPrevious\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectPrevious', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 27], [3, 37]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectPrevious');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectPrevious() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectRight\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectRight', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 24], [3, 34]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectRight');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectRight() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectSubMenu\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectSubMenu', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 26], [3, 36]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectSubMenu');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectSubMenu() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"selectUp\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['selectUp', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 21], [3, 31]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'selectUp');\n\n        assert.ok(this.get('testAction').calledOnce, 'selectUp() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"showAll\" stream action', function (assert) {\n\n        this.set('testAction', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-menu', [], ['showAll', ['subexpr', '@mut', [['get', 'testAction', ['loc', [null, [3, 20], [3, 30]]]]], [], []], 'streamName', 'testStreamName'], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var streamService = this.container.lookup('service:stream');\n        streamService.send('testStreamName', 'showAll');\n\n        assert.ok(this.get('testAction').calledOnce, 'showAll() was triggered successfully');\n    });\n\n});","define('dummy/tests/integration/components/sl-menu-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-menu-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-menu-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-modal-body-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n\n    ember_qunit.moduleForComponent('sl-modal-body', 'Integration | Component | sl modal body', {\n        integration: true\n    });\n\n    ember_qunit.test('Content is yielded', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('           ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createElement('div');\n                        dom.setAttribute(el1, 'class', 'test');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 26\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    dom.insertBoundary(fragment, null);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [2, 8], [4, 26]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.test').length, 1);\n    });\n\n});","define('dummy/tests/integration/components/sl-modal-body-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-modal-body-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-modal-body-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-modal-footer-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n\n    ember_qunit.moduleForComponent('sl-modal-footer', 'Integration | Component | sl modal footer', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-modal-footer', ['loc', [null, [2, 8], [2, 27]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('modal-footer'), 'Component has class \"modal-footer\"');\n    });\n\n    ember_qunit.test('Content is yielded', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createElement('div');\n                        dom.setAttribute(el1, 'class', 'test');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal-footer', [], [], 0, null, ['loc', [null, [2, 8], [4, 28]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.test').length, 1, 'Content is yielded correctly');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-modal-footer', ['loc', [null, [2, 8], [2, 27]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('[data-dismiss=\"modal\"]').length > 0, 'Default footer content and button rendered when not yielded');\n    });\n\n    ember_qunit.test('Close button text is customizable', function (assert) {\n        var buttonText = 'Custom Close Text';\n\n        this.set('buttonText', buttonText);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal-footer', [], ['buttonText', ['subexpr', '@mut', [['get', 'buttonText', ['loc', [null, [2, 37], [2, 47]]]]], [], []]], ['loc', [null, [2, 8], [2, 49]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('button[data-dismiss=\"modal\"]').text().trim(), buttonText);\n    });\n\n});","define('dummy/tests/integration/components/sl-modal-footer-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-modal-footer-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-modal-footer-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-modal-header-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n\n    ember_qunit.moduleForComponent('sl-modal-header', 'Integration | Component | sl modal header', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-modal-header', ['loc', [null, [2, 8], [2, 27]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('modal-header'), 'Component has class \"modal-header\"');\n\n        assert.ok(this.$('>:first-child').find('[data-dismiss=\"modal\"]').length > 0, 'Default header content and close button rendered');\n    });\n\n    ember_qunit.test('Setting title on header works', function (assert) {\n        var title = 'hello world';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal-header', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 32], [2, 37]]]]], [], []]], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.modal-title').text(), title);\n    });\n\n    ember_qunit.test('Component may be used as block', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createElement('div');\n                        dom.setAttribute(el1, 'class', 'test');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal-header', [], [], 0, null, ['loc', [null, [2, 8], [4, 28]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.test').length, 1, 'Content is yielded correctly');\n    });\n\n    ember_qunit.test('Modal title\\'s id is set to ariaLabelledBy property value', function (assert) {\n        this.set('title', 'label test');\n        this.set('ariaLabelledBy', 'initial value');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal-header', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 32], [2, 37]]]]], [], []], 'ariaLabelledBy', ['subexpr', '@mut', [['get', 'ariaLabelledBy', ['loc', [null, [2, 53], [2, 67]]]]], [], []]], ['loc', [null, [2, 8], [2, 69]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.modal-title').prop('id'), this.get('ariaLabelledBy'));\n    });\n\n});","define('dummy/tests/integration/components/sl-modal-header-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-modal-header-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-modal-header-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-modal-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    var mockStream = {\n        actions: {},\n\n        on: function on(actionName, handler) {\n            this.actions[actionName] = handler;\n        },\n\n        subject: {\n            dispose: function dispose() {\n                mockStream.actions = {};\n            },\n\n            onCompleted: function onCompleted() {}\n        }\n    };\n\n    var template = Ember['default'].HTMLBars.template((function () {\n        var child0 = (function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 9,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 11,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createElement('p');\n                        var el2 = dom.createTextNode('A simple modal example');\n                        dom.appendChild(el1, el2);\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 2,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 14,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 1,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(3);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example', 'ariaLabelledBy', ['subexpr', '@mut', [['get', 'modal.ariaLabelledBy', ['loc', [null, [6, 27], [6, 47]]]]], [], []]], ['loc', [null, [4, 8], [7, 10]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [9, 8], [11, 26]]]], ['content', 'sl-modal-footer', ['loc', [null, [13, 8], [13, 27]]]]],\n                locals: ['modal'],\n                templates: [child0]\n            };\n        })();\n\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 15,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n            },\n            statements: [['block', 'sl-modal', [], ['ariaHidden', 'false'], 0, null, ['loc', [null, [2, 4], [14, 17]]]]],\n            locals: [],\n            templates: [child0]\n        };\n    })());\n\n    ember_qunit.moduleForComponent('sl-modal', 'Integration | Component | sl modal', {\n        afterEach: function afterEach() {\n            this.$('.modal').remove();\n            Ember['default'].$('.modal-backdrop').remove();\n        },\n\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        var _this = this;\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 1,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['content', 'sl-modal-header', ['loc', [null, [3, 12], [3, 31]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: ['modal'],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], [], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('modal'), 'Has class \"modal\"');\n\n        Ember['default'].run(function () {\n            _this.$('>:first-child').modal('show');\n        });\n\n        assert.strictEqual(Ember['default'].$('>:first-child').length, 1, 'Backdrop is shown by default');\n\n        assert.strictEqual(this.$('>:first-child').attr('aria-hidden'), 'true', 'aria-hidden is \"true\" by default');\n\n        Ember['default'].run(function () {\n            _this.$('>:first-child').modal('show');\n        });\n\n        assert.strictEqual(Ember['default'].$('.modal-backdrop').length, 1, 'backdrop is shown by default');\n    });\n\n    ember_qunit.test('Backdrop property is passed through to jQuery correctly', function (assert) {\n        // we currently only pass through the backdrop parameter\n        var spy = sinon['default'].spy(Ember['default'].$.fn, 'modal');\n\n        // props passed to bootstrap modal that are not bound to template\n        var nonTemplateProps = {\n            keyboard: true,\n            show: false\n        };\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 1,\n                            'column': 36\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                    dom.insertBoundary(fragment, 0);\n                    dom.insertBoundary(fragment, null);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal', [], ['backdrop', '__backdrop__'], ['loc', [null, [1, 0], [1, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(spy.calledWith(Ember['default'].$.extend({ backdrop: '__backdrop__' }, nonTemplateProps)), 'backdrop property is passed to jQuery.modal correctly');\n\n        Ember['default'].$.fn.modal.restore();\n    });\n\n    ember_qunit.test('Animated property adds fade class', function (assert) {\n        this.set('animate', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal', [], ['animated', ['subexpr', '@mut', [['get', 'animate', ['loc', [null, [2, 28], [2, 35]]]]], [], []]], ['loc', [null, [2, 8], [2, 37]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notOk(this.$('>:first-child').hasClass('fade'), 'fade class not present when animated set to false');\n\n        this.set('animate', true);\n\n        assert.ok(this.$('>:first-child').hasClass('fade'), 'fade class present when animated set to true');\n    });\n\n    ember_qunit.test('Listeners are setup and firing appropriately', function (assert) {\n        var _this2 = this;\n\n        assert.expect(4);\n\n        var beforeShowDone = assert.async();\n        var afterShowDone = assert.async();\n        var beforeHideDone = assert.async();\n        var afterHideDone = assert.async();\n\n        var beforeShow = function beforeShow() {\n            assert.ok(true, 'beforeShow was triggered');\n\n            beforeShowDone();\n        };\n\n        var afterShow = function afterShow() {\n            assert.ok(true, 'afterShow was triggered');\n\n            afterShowDone();\n        };\n\n        var beforeHide = function beforeHide() {\n            assert.ok(true, 'beforeHide was triggered');\n\n            beforeHideDone();\n        };\n\n        var afterHide = function afterHide() {\n            assert.ok(true, 'afterHide was triggered');\n\n            afterHideDone();\n        };\n\n        this.on('beforeShow', beforeShow);\n        this.on('afterShow', afterShow);\n        this.on('beforeHide', beforeHide);\n        this.on('afterHide', afterHide);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 10,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 12,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 15,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['content', 'sl-modal-header', ['loc', [null, [8, 12], [8, 31]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [10, 12], [12, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [14, 12], [14, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 16,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['name', 'testing', 'beforeShow', 'beforeShow', 'afterShow', 'afterShow', 'beforeHide', 'beforeHide', 'afterHide', 'afterHide'], 0, null, ['loc', [null, [2, 8], [15, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        Ember['default'].run(function () {\n            _this2.$('>:first-child').modal('show');\n            _this2.$('>:first-child').modal('hide');\n        });\n\n        this.hideModal = false;\n    });\n\n    ember_qunit.test('Property isOpen is set appropriately', function (assert) {\n        var _this3 = this;\n\n        this.set('isOpen');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example'], ['loc', [null, [3, 12], [3, 54]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['isOpen', ['subexpr', '@mut', [['get', 'isOpen', ['loc', [null, [2, 27], [2, 33]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        Ember['default'].run(function () {\n            _this3.$('>:first-child').trigger('shown.bs.modal');\n        });\n\n        assert.strictEqual(this.get('isOpen'), true, 'isOpen was set to true when modal show event was triggered');\n\n        Ember['default'].run(function () {\n            _this3.$('>:first-child').trigger('hidden.bs.modal');\n        });\n\n        assert.strictEqual(this.get('isOpen'), false, 'isOpen was set to false when modal close event was triggered');\n    });\n\n    ember_qunit.test('Closing of modal using close button works', function (assert) {\n        var _this4 = this;\n\n        assert.expect(1);\n        var closeDone = assert.async();\n\n        var modalClosed = function modalClosed() {\n            assert.ok(true, 'Modal was closed');\n            closeDone();\n        };\n\n        this.on('modalClosed', modalClosed);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example'], ['loc', [null, [3, 12], [3, 54]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['afterHide', 'modalClosed'], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        Ember['default'].run(function () {\n            _this4.$('>:first-child').modal('show');\n            _this4.$('>:first-child').find('.close').click();\n        });\n    });\n\n    ember_qunit.test('Backdrop is hidden when backdrop property is set to false', function (assert) {\n        var _this5 = this;\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example'], ['loc', [null, [3, 12], [3, 54]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['backdrop', false], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        Ember['default'].run(function () {\n            _this5.$('>:first-child').modal('show');\n        });\n\n        assert.strictEqual(Ember['default'].$('>:first-child').find('.modal-backdrop').length, 0);\n    });\n\n    ember_qunit.test('Animated property adds fade class', function (assert) {\n        this.set('animate', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-modal', [], ['animated', ['subexpr', '@mut', [['get', 'animate', ['loc', [null, [2, 28], [2, 35]]]]], [], []]], ['loc', [null, [2, 8], [2, 37]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.notOk(this.$('>:first-child').hasClass('fade'), 'fade class not present when animated set to false');\n\n        this.set('animate', true);\n\n        assert.ok(this.$('>:first-child').hasClass('fade'), 'fade class present when animated set to true');\n    });\n\n    ember_qunit.test('ariaDescribedBy attribute binding', function (assert) {\n        var describedBy = 'targetId';\n\n        this.set('ariaDescribedBy', describedBy);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example'], ['loc', [null, [3, 12], [3, 54]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['ariaDescribedBy', ['subexpr', '@mut', [['get', 'ariaDescribedBy', ['loc', [null, [2, 36], [2, 51]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').attr('aria-describedby'), describedBy);\n    });\n\n    ember_qunit.test('aria-hidden can be bound in a custom header', function (assert) {\n        this.render(template);\n\n        assert.strictEqual(this.$('>:first-child').attr('aria-hidden'), 'false');\n    });\n\n    ember_qunit.test('aria-labelledBy is set', function (assert) {\n        this.render(template);\n\n        assert.strictEqual(this.$('>:first-child').attr('aria-labelledby'), this.$('>:first-child').find('.modal-title').prop('id'), '\"aria-labelledby\" points to correct element');\n    });\n\n    ember_qunit.test('aria-labelledby can be bound in a custom header', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 3,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 5,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('span');\n                            dom.setAttribute(el1, 'class', 'modal-title');\n                            var el2 = dom.createTextNode('Custom Title');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                            var element0 = dom.childAt(fragment, [1]);\n                            var morphs = new Array(1);\n                            morphs[0] = dom.createAttrMorph(element0, 'id');\n                            return morphs;\n                        },\n                        statements: [['attribute', 'id', ['get', 'modal.ariaLabelledBy', ['loc', [null, [4, 47], [4, 67]]]]]],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 1,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(1);\n                        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                        dom.insertBoundary(fragment, 0);\n                        dom.insertBoundary(fragment, null);\n                        return morphs;\n                    },\n                    statements: [['block', 'sl-modal-header', [], [], 0, null, ['loc', [null, [3, 12], [5, 32]]]]],\n                    locals: ['modal'],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], [], 0, null, ['loc', [null, [2, 8], [6, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').attr('aria-labelledby'), this.$('>:first-child').find('.modal-title').prop('id'), '\"aria-labelledby\" in custom header points to correct element');\n    });\n\n    ember_qunit.test('Component responds to \"hide\" stream action', function (assert) {\n        this.set('stream', mockStream);\n        this.set('hide', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example'], ['loc', [null, [3, 12], [3, 54]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['stream', ['subexpr', '@mut', [['get', 'stream', ['loc', [null, [2, 27], [2, 33]]]]], [], []], 'hide', ['subexpr', '@mut', [['get', 'hide', ['loc', [null, [2, 39], [2, 43]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        mockStream.actions['hide']();\n\n        assert.ok(this.get('hide').calledOnce, 'hide() was triggered successfully');\n    });\n\n    ember_qunit.test('Component responds to \"show\" stream action', function (assert) {\n        this.set('stream', mockStream);\n        this.set('show', sinon['default'].spy());\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                ');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('p');\n                            var el2 = dom.createTextNode('A simple modal example');\n                            dom.appendChild(el1, el2);\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 10,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-modal-header', [], ['title', 'Simple Example'], ['loc', [null, [3, 12], [3, 54]]]], ['block', 'sl-modal-body', [], [], 0, null, ['loc', [null, [5, 12], [7, 30]]]], ['content', 'sl-modal-footer', ['loc', [null, [9, 12], [9, 31]]]]],\n                    locals: [],\n                    templates: [child0]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 11,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-modal', [], ['stream', ['subexpr', '@mut', [['get', 'stream', ['loc', [null, [2, 27], [2, 33]]]]], [], []], 'show', ['subexpr', '@mut', [['get', 'show', ['loc', [null, [2, 39], [2, 43]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [10, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        mockStream.actions['show']();\n\n        assert.ok(this.get('show').calledOnce, 'hide() was triggered successfully');\n    });\n\n});","define('dummy/tests/integration/components/sl-modal-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-modal-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-modal-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-pagination-test', ['ember-qunit', 'sinon'], function (ember_qunit, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-pagination', 'Integration | Component | sl pagination', {\n        integration: true\n    });\n\n    ember_qunit.test('Default classes are applied', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 1], ['loc', [null, [2, 8], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('pagination'), 'Default rendered component has class \"pagination\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-pagination'), 'Default rendered component has class \"sl-pagination\"');\n    });\n\n    ember_qunit.test('The totalPages property is bound to the total pages display', function (assert) {\n        this.set('totalPages', 1);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', ['subexpr', '@mut', [['get', 'totalPages', ['loc', [null, [2, 35], [2, 45]]]]], [], []]], ['loc', [null, [2, 8], [2, 47]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '1 / 1', 'totalPages is initialized to 1');\n\n        this.set('totalPages', 2);\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '1 / 2', 'totalPages is now set to 2');\n    });\n\n    ember_qunit.test('The currentPage property is bound to the current page display', function (assert) {\n        this.set('currentPage', 1);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 2, 'currentPage', ['subexpr', '@mut', [['get', 'currentPage', ['loc', [null, [2, 49], [2, 60]]]]], [], []]], ['loc', [null, [2, 8], [2, 62]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '1 / 2', 'currentPage is initialized to 1');\n\n        this.set('currentPage', 2);\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '2 / 2', 'currentPage is now set to 2');\n    });\n\n    ember_qunit.test('When totalPages is 1 the previous and next buttons are disabled', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 1], ['loc', [null, [2, 8], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('li:first-child').hasClass('disabled'), 'The previous button has the \"disabled\" class');\n\n        assert.ok(this.$('>:first-child').find('li:nth-child(3)').hasClass('disabled'), 'The next button has the \"disabled\" class');\n    });\n\n    ember_qunit.test('The previous button is disabled when on the first page', function (assert) {\n        var testActionHandler = sinon['default'].spy();\n\n        this.on('testAction', testActionHandler);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 2, 'changePage', 'testAction'], ['loc', [null, [2, 8], [2, 62]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('li:first-child').hasClass('disabled'), 'The previous button has the \"disabled\" class');\n\n        this.$('>:first-child').find('.previous-page-button').click();\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '1 / 2', 'The current page displayed has not changed');\n\n        assert.strictEqual(testActionHandler.callCount, 0, 'changePage action was not called');\n    });\n\n    ember_qunit.test('The next button is disabled when on the last page', function (assert) {\n        var testActionHandler = sinon['default'].spy();\n\n        this.on('testAction', testActionHandler);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 2, 'currentPage', 2, 'changePage', 'testAction'], ['loc', [null, [2, 8], [2, 76]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('li:nth-child(3)').hasClass('disabled'), 'The next button has the \"disabled\" class');\n\n        this.$('>:first-child').find('.next-page-button').click();\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '2 / 2', 'The current page displayed was has not changed');\n\n        assert.strictEqual(testActionHandler.callCount, 0, 'changePage action was not called');\n    });\n\n    ember_qunit.test('Neither the previous nor the next button are disabled when not on an internal page', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 3, 'currentPage', 2], ['loc', [null, [2, 8], [2, 52]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(!this.$('>:first-child').find('li:first-child').hasClass('disabled'), 'The previous button does not have the \"disabled\" class');\n\n        assert.ok(!this.$('>:first-child').find('li:nth-child(3)').hasClass('disabled'), 'The next button does not have the \"disabled\" class');\n    });\n\n    ember_qunit.test('Next button click increments the current page and calls the changePage action', function (assert) {\n        var testActionHandler = sinon['default'].spy();\n\n        this.on('testAction', testActionHandler);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 2, 'changePage', 'testAction'], ['loc', [null, [2, 8], [2, 62]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('.next-page-button').click();\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '2 / 2', 'The current page displayed was incremented');\n\n        assert.strictEqual(testActionHandler.getCall(0).args[0], 2, 'The changePage action is called with the correct argument');\n    });\n\n    ember_qunit.test('Previous button click decrements the current page and calls the changePage action', function (assert) {\n        var testActionHandler = sinon['default'].spy();\n\n        this.on('testAction', testActionHandler);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-pagination', [], ['totalPages', 2, 'currentPage', 2, 'changePage', 'testAction'], ['loc', [null, [2, 8], [2, 76]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        this.$('>:first-child').find('.previous-page-button').click();\n\n        assert.strictEqual(this.$('>:first-child').find('li:nth-child(2) a').text().trim(), '1 / 2', 'The current page displayed was decremented');\n\n        assert.strictEqual(testActionHandler.getCall(0).args[0], 1, 'The changePage action is called with the correct argument');\n    });\n\n});","define('dummy/tests/integration/components/sl-pagination-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-pagination-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-pagination-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-panel-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-panel', 'Integration | Component | sl panel', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-panel', ['loc', [null, [2, 8], [2, 20]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('panel'), 'Default rendered component has class \"panel\"');\n\n        assert.ok(this.$('>:first-child').hasClass('panel-default'), 'Default rendered component has class \"panel-default\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-panel'), 'Default rendered component has class \"sl-panel\"');\n\n        var panelBody = this.$('>:first-child').find('> .panel-body');\n\n        assert.strictEqual(panelBody.length, 1, 'Default rendered component has child with class \"panel-body\"');\n\n        assert.strictEqual(panelBody.find('> .sl-maskable-content').length, 1, 'Default rendered component has child with class \"sl-maskable-content\"');\n\n        assert.strictEqual(panelBody.find('> .sl-mask').length, 1, 'Default rendered component has child with class \"sl-mask\"');\n    });\n\n    ember_qunit.test('Valid heading value renders panel-heading', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-panel', [], ['heading', 'Test'], ['loc', [null, [2, 8], [2, 35]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.panel-heading').length, 1, 'Rendered component has panel-heading text');\n\n        assert.strictEqual(this.$('>:first-child').find('.panel-heading').text(), 'Test', 'Text of rendered heading is equal to value passed to it');\n    });\n\n    ember_qunit.test('Loading state applies class name', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-panel', [], ['loading', true], ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-loading'), 'Rendered component has class \"sl-loading\"');\n    });\n\n    ember_qunit.test('Content is yielded', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createElement('div');\n                        dom.setAttribute(el1, 'class', 'yield-test');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-panel', [], [], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.yield-test').length, 1, 'Content yields successfully');\n    });\n\n});","define('dummy/tests/integration/components/sl-panel-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-panel-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-panel-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-progress-bar-test', ['ember', 'ember-qunit', 'sl-ember-components/components/sl-progress-bar'], function (Ember, ember_qunit, sl_progress_bar) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-progress-bar', 'Integration | Component | sl progress bar', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-progress-bar', ['loc', [null, [2, 8], [2, 27]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var child = this.$('>:first-child');\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.ok(child.hasClass('progress'), 'Has class \"progress\"');\n\n        assert.ok(child.hasClass('sl-progress-bar'), 'Has class \"sl-progress-bar\"');\n\n        assert.ok(child.hasClass('sl-progress-bar-low-percentage'), 'Has class \"sl-progress-bar-low-percentage\"');\n\n        assert.ok(grandchild.hasClass('progress-bar'), 'Has class \"progress-bar\"');\n\n        assert.notOk(grandchild.hasClass('progress-bar-striped'), 'Does not have class \"progress-bar-striped\"');\n\n        assert.notOk(grandchild.hasClass('active'), 'Does not have class \"active\"');\n\n        assert.ok(grandchild.hasClass('progress-bar-' + sl_progress_bar.Theme.DEFAULT), 'Has class \"progress-bar-' + sl_progress_bar.Theme.DEFAULT + '\"');\n\n        assert.strictEqual(grandchild.attr('aria-valuemin'), '0', '\"aria-valuemin\" is 0');\n\n        assert.strictEqual(grandchild.attr('aria-valuemax'), '100', '\"aria-valuemax\" is 100');\n\n        assert.strictEqual(grandchild.attr('aria-valuenow'), '0', '\"aria-valuenow\" is 0');\n\n        assert.strictEqual(Ember['default'].$.trim(grandchild.attr('style')), 'width: 0%;', '\"style\" is \"width: 0%;\"');\n\n        assert.strictEqual(grandchild.attr('role'), 'progressbar', '\"role\" is \"progressbar\"');\n\n        assert.strictEqual(grandchild.find('.sr-only').text().trim(), '0% Complete', 'Expected visual representation when \"label\" property is not provided');\n    });\n\n    ember_qunit.test('\"value\" property is supported', function (assert) {\n        this.set('testValue', 12);\n        this.set('testLabel', null);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['value', ['subexpr', '@mut', [['get', 'testValue', ['loc', [null, [3, 18], [3, 27]]]]], [], []], 'label', ['subexpr', '@mut', [['get', 'testLabel', ['loc', [null, [4, 18], [4, 27]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.strictEqual(grandchild.attr('aria-valuenow'), '12', '\"aria-valuenow\" is 12');\n\n        assert.strictEqual(grandchild.find('.sr-only').text().trim(), '12% Complete', '\"value\" property displayed when \"label\" property is not provided');\n\n        this.set('testValue', 47);\n        this.set('testLabel', 'test label');\n\n        assert.strictEqual(grandchild.attr('aria-valuenow'), '47', '\"aria-valuenow\" is 47');\n\n        assert.strictEqual(grandchild.find('.sl-progress-bar-value').text().trim(), '47%', '\"value\" property displayed when \"label\" property is provided');\n    });\n\n    ember_qunit.test('\"striped\" property is supported', function (assert) {\n        this.set('testStriped', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['striped', ['subexpr', '@mut', [['get', 'testStriped', ['loc', [null, [2, 34], [2, 45]]]]], [], []]], ['loc', [null, [2, 8], [2, 47]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.notOk(grandchild.hasClass('progress-bar-striped'), '\"progress-bar-striped\" class is not applied');\n\n        this.set('testStriped', true);\n\n        assert.ok(grandchild.hasClass('progress-bar-striped'), '\"progress-bar-striped\" class is applied');\n    });\n\n    ember_qunit.test('\"animated\" property is supported', function (assert) {\n        this.set('testAnimated', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['animated', ['subexpr', '@mut', [['get', 'testAnimated', ['loc', [null, [2, 35], [2, 47]]]]], [], []]], ['loc', [null, [2, 8], [2, 49]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.notOk(grandchild.hasClass('active'), '\"active\" class is not applied');\n\n        this.set('testAnimated', true);\n\n        assert.ok(grandchild.hasClass('active'), '\"active\" class is applied');\n    });\n\n    ember_qunit.test('\"theme\" property is supported', function (assert) {\n        this.set('testTheme', sl_progress_bar.Theme.DEFAULT);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['theme', ['subexpr', '@mut', [['get', 'testTheme', ['loc', [null, [2, 32], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.ok(grandchild.hasClass('progress-bar-' + sl_progress_bar.Theme.DEFAULT), '\"progress-bar-' + sl_progress_bar.Theme.DEFAULT + '\" class is applied');\n\n        this.set('testTheme', sl_progress_bar.Theme.INFO);\n\n        assert.ok(grandchild.hasClass('progress-bar-' + sl_progress_bar.Theme.INFO), '\"progress-bar-' + sl_progress_bar.Theme.INFO + '\" class is applied');\n    });\n\n    ember_qunit.test('\"style\" string is updated', function (assert) {\n        this.set('testValue', 12);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['value', ['subexpr', '@mut', [['get', 'testValue', ['loc', [null, [2, 32], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.strictEqual(Ember['default'].$.trim(grandchild.attr('style')), 'width: 12%;', '\"style\" is \"width: 12%;\"');\n\n        this.set('testValue', 38);\n\n        assert.strictEqual(Ember['default'].$.trim(grandchild.attr('style')), 'width: 38%;', '\"style\" is \"width: 38%;\"');\n    });\n\n    ember_qunit.test('\"label\" property is supported', function (assert) {\n        this.set('testLabel', null);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['label', ['subexpr', '@mut', [['get', 'testLabel', ['loc', [null, [2, 32], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var grandchild = this.$('>:first-child').find('>:first-child');\n\n        assert.strictEqual(grandchild.find('.sr-only').text().trim(), '0% Complete', 'Part 1 - Expected visual representation when \"label\" property is not provided');\n\n        assert.strictEqual(grandchild.find('.sl-progress-bar-value').length, 0, 'Part 2 - Expected visual representation when \"label\" property is not provided');\n\n        this.set('testLabel', 'test label');\n\n        assert.strictEqual(grandchild.find('.sl-progress-bar-value').text().trim(), '0%', 'Part 1 - Expected visual representation when \"label\" property is provided');\n\n        assert.strictEqual(grandchild.find('.sr-only').length, 0, 'Part 2 - Expected visual representation when \"label\" property is provided');\n    });\n\n    ember_qunit.test('Threshold level affects rendered output', function (assert) {\n        this.set('testValue', 12);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['value', ['subexpr', '@mut', [['get', 'testValue', ['loc', [null, [2, 32], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var child = this.$('>:first-child');\n\n        assert.ok(child.hasClass('sl-progress-bar-low-percentage'), '\"sl-progress-bar-low-percentage\" class is applied when \"value\" is less than 50');\n\n        this.set('testValue', 50);\n\n        assert.notOk(child.hasClass('sl-progress-bar-low-percentage'), '\"sl-progress-bar-low-percentage\" class is not applied when \"value\" is greater than 49');\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 32], [2, 37]]]]], [], []]], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 34], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-progress-bar', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 32], [2, 37]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 46], [2, 53]]]]], [], []]], ['loc', [null, [2, 8], [2, 55]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-progress-bar-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-progress-bar-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-progress-bar-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-radio-group-test', ['ember', 'ember-qunit', 'ember-test-helpers/wait'], function (Ember, ember_qunit, waitForPendingRunLoops) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-radio-group', 'Integration | Component | sl radio group', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 3,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['name', 'testName'], 0, null, ['loc', [null, [2, 8], [3, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('form-group'), 'Has class \"form-group\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-radio-group'), 'Has class \"sl-radio-group\"');\n    });\n\n    ember_qunit.test('The disabled state applies the disabled attribute and class', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 3,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['disabled', true, 'name', 'testName'], 0, null, ['loc', [null, [2, 8], [3, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').attr('disabled'), 'disabled', 'has \"disabled\" attribute');\n\n        assert.ok(this.$('>:first-child').hasClass('disabled'), 'has \"disabled\" class');\n    });\n\n    ember_qunit.test('The disabled state applies to sl-radio children', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-radio', [], ['label', 'One', 'value', 'one'], ['loc', [null, [3, 12], [3, 48]]]], ['inline', 'sl-radio', [], ['label', 'Two', 'value', 'two'], ['loc', [null, [4, 12], [4, 48]]]], ['inline', 'sl-radio', [], ['label', 'Three', 'value', 'three'], ['loc', [null, [5, 12], [5, 52]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['disabled', true, 'name', 'testName'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input[disabled]').length, 3, 'Rendered component has three disabled inputs');\n    });\n\n    ember_qunit.test('The \"name\" property applies the name attribute to sl-radio children', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-radio', [], ['label', 'One', 'value', 'one'], ['loc', [null, [3, 12], [3, 48]]]], ['inline', 'sl-radio', [], ['label', 'Two', 'value', 'two'], ['loc', [null, [4, 12], [4, 48]]]], ['inline', 'sl-radio', [], ['label', 'Three', 'value', 'three'], ['loc', [null, [5, 12], [5, 52]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['name', 'testName'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input[name=\"testName\"]').length, 3, 'input has \"name\" attribute set to correcly passed \"name\" property');\n    });\n\n    ember_qunit.test('\"label\" property is supported', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['name', 'testName', 'label', 'testLabel'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label').text().trim(), 'testLabel', '\"label\" property sets text inside HTML label tag');\n    });\n\n    ember_qunit.test('\"optional\" property is supported', function (assert) {\n        this.set('optionalTest', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 7,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['name', 'testName', 'label', 'testLabel', 'optional', ['subexpr', '@mut', [['get', 'optionalTest', ['loc', [null, [5, 21], [5, 33]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [7, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.text-info').length, 0, '\"optional\" property does not set class \"text-info\"');\n\n        this.set('optionalTest', true);\n\n        assert.strictEqual(this.$('>:first-child').find('.text-info').length, 1, '\"optional\" property sets class \"text-info\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.text-info').text().trim(), 'Optional', '\"optional\" property sets correct text inside HTML tag');\n    });\n\n    ember_qunit.test('\"required\" property is supported', function (assert) {\n        this.set('requiredTest', false);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 7,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['name', 'testName', 'label', 'testLabel', 'required', ['subexpr', '@mut', [['get', 'requiredTest', ['loc', [null, [5, 21], [5, 33]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [7, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.text-danger').length, 0, '\"required\" property does not set class \"text-danger\"');\n\n        this.set('requiredTest', true);\n\n        assert.strictEqual(this.$('>:first-child').find('.text-danger').length, 1, '\"required\" property sets class \"text-danger\"');\n\n        assert.strictEqual(this.$('>:first-child').find('.text-danger').text().trim(), 'Required', '\"required\" property sets correct text inside HTML tag');\n    });\n\n    ember_qunit.test(\"Inline true sets sl-radio children's inline property to true\", function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-radio', [], ['label', 'One', 'value', 'one'], ['loc', [null, [3, 12], [3, 48]]]], ['inline', 'sl-radio', [], ['label', 'Two', 'value', 'two'], ['loc', [null, [4, 12], [4, 48]]]], ['inline', 'sl-radio', [], ['label', 'Three', 'value', 'three'], ['loc', [null, [5, 12], [5, 52]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['inline', true, 'name', 'testName'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-radio.radio').length, 0, 'Rendered component children buttons are not inline');\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-radio.radio-inline').length, 3, 'Rendered component children buttons are inline');\n    });\n\n    ember_qunit.test(\"Inline false sets sl-radio children's inline property to false\", function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-radio', [], ['label', 'One', 'value', 'one'], ['loc', [null, [3, 12], [3, 48]]]], ['inline', 'sl-radio', [], ['label', 'Two', 'value', 'two'], ['loc', [null, [4, 12], [4, 48]]]], ['inline', 'sl-radio', [], ['label', 'Three', 'value', 'three'], ['loc', [null, [5, 12], [5, 52]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['inline', false, 'name', 'testName'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-radio.radio-inline').length, 0, 'Rendered component has zero inline radio buttons');\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-radio.radio').length, 3, 'Rendered component has three default (non-inline) radio buttons');\n    });\n\n    ember_qunit.test('Value changes when sl-radio child selected', function (assert) {\n        var _this = this;\n\n        this.set('value', 'jeremy');\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-radio', [], ['label', 'One', 'value', 'eric'], ['loc', [null, [3, 12], [3, 49]]]], ['inline', 'sl-radio', [], ['label', 'Two', 'value', 'josh'], ['loc', [null, [4, 12], [4, 49]]]], ['inline', 'sl-radio', [], ['label', 'Three', 'value', 'michael'], ['loc', [null, [5, 12], [5, 54]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [2, 32], [2, 37]]]]], [], []], 'name', 'testName'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        Ember['default'].run(function () {\n            var radioButton = _this.$('>:first-child').find('input[value=\"eric\"]');\n            radioButton.click();\n        });\n\n        return waitForPendingRunLoops['default']().then(function () {\n            assert.strictEqual(_this.get('value'), 'eric', '\"eric\" value is selected');\n        });\n    });\n\n    ember_qunit.test('Default value gets selected by default', function (assert) {\n        this.set('value', 'josh');\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['inline', 'sl-radio', [], ['label', 'One', 'value', 'eric'], ['loc', [null, [3, 12], [3, 49]]]], ['inline', 'sl-radio', [], ['label', 'Two', 'value', 'josh'], ['loc', [null, [4, 12], [4, 49]]]], ['inline', 'sl-radio', [], ['label', 'Three', 'value', 'michael'], ['loc', [null, [5, 12], [5, 54]]]]],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [2, 32], [2, 37]]]]], [], []], 'name', 'testName'], 0, null, ['loc', [null, [2, 8], [6, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input[name=\"testName\"]:checked').val(), 'josh', 'The value \"josh\" that is set is selected by default');\n    });\n\n    ember_qunit.test('Yielded content passes through', function (assert) {\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            A content\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-radio-group', [], ['name', 'testName'], 0, null, ['loc', [null, [2, 8], [4, 27]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'A content', 'Expected content is present');\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 28], [2, 35]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            Default info alert\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-alert', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 26], [2, 31]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 40], [2, 47]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [4, 21]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n});","define('dummy/tests/integration/components/sl-radio-group-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-radio-group-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-radio-group-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-radio-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    var defaultTemplate = Ember.HTMLBars.template((function () {\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 3,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n    ');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                return morphs;\n            },\n            statements: [['content', 'sl-radio', ['loc', [null, [2, 4], [2, 16]]]]],\n            locals: [],\n            templates: []\n        };\n    })());\n\n    ember_qunit.moduleForComponent('sl-radio', 'Integration | Component | sl radio', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(defaultTemplate);\n\n        assert.ok(this.$('>:first-child').hasClass('sl-radio'), 'Has class \"sl-radio\"');\n\n        assert.ok(this.$('>:first-child').hasClass('radio'), 'Has class \"radio\"');\n\n        assert.strictEqual(this.$('>:first-child').find('input[type=\"radio\"]').length, 1, 'input type is set to \"radio\"');\n    });\n\n    ember_qunit.test('Disabled state applies disabled class, and attribute to input', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-radio', [], ['disabled', true], ['loc', [null, [2, 8], [2, 34]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').find('input').prop('disabled'), 'has attribute \"disabled\"');\n\n        assert.ok(this.$('>:first-child').hasClass('disabled'), 'has class \"disabled\"');\n    });\n\n    ember_qunit.test('Inline property sets relevant class', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-radio', [], ['inline', true], ['loc', [null, [2, 8], [2, 32]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('radio-inline'), 'has class \"radio-inline\"');\n    });\n\n    ember_qunit.test('name applies property to input', function (assert) {\n        this.render(defaultTemplate);\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('name'), '', 'Rendered input has empty name');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-radio', [], ['name', 'testname'], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').prop('name'), 'testname', 'Rendered input has name set');\n    });\n\n    ember_qunit.test('\"value\" property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-radio', [], ['value', 'testValue'], ['loc', [null, [2, 8], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('input').val(), 'testValue', '\"value\" is set');\n    });\n\n    ember_qunit.test('\"label\" property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-radio', [], ['label', 'testLabel'], ['loc', [null, [2, 8], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label').text().trim(), 'testLabel', '\"label\" text gets set');\n    });\n\n});","define('dummy/tests/integration/components/sl-radio-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-radio-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-radio-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-span-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-span', 'Integration | Component | sl span', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-span', ['loc', [null, [2, 8], [2, 19]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), '', '\"value\" defaults to null');\n    });\n\n    ember_qunit.test('\"value\" property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-span', [], ['value', 'value text'], ['loc', [null, [2, 8], [2, 38]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'value text', '\"value\" text is displayed');\n    });\n\n    ember_qunit.test('\"loading\" property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-span', [], ['loading', true], ['loc', [null, [2, 8], [2, 32]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-loading-icon').length, 1, 'Loading icon is present while span is loading');\n    });\n\n    ember_qunit.test('\"Inverse\" property is supported', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-span', [], ['loading', true], ['loc', [null, [2, 8], [2, 32]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-loading-icon-dark').length, 1, 'Loading icon is dark initially');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-span', [], ['inverse', true, 'loading', true], ['loc', [null, [2, 8], [2, 45]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.sl-loading-icon-light').length, 1, 'Loading icon is light when inverse');\n    });\n\n});","define('dummy/tests/integration/components/sl-span-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-span-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-span-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-tab-pane-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-tab-pane', 'Integration | Component | sl tab pane', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n\n        var label = 'Test Label';\n        this.set('labelTest', label);\n\n        var name = 'Test Name';\n        this.set('nameTest', name);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-tab-pane', [], ['label', ['subexpr', '@mut', [['get', 'labelTest', ['loc', [null, [3, 18], [3, 27]]]]], [], []], 'name', ['subexpr', '@mut', [['get', 'nameTest', ['loc', [null, [4, 17], [4, 25]]]]], [], []]], ['loc', [null, [2, 8], [5, 10]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('sl-tab-pane'), 'Has class \"sl-tab-pane\"');\n\n        assert.ok(this.$('>:first-child').hasClass('tab-pane'), 'Has class \"tab-pane\"');\n\n        assert.strictEqual(this.$('>:first-child').attr('data-tab-label'), label, 'Data tab label is set properly');\n\n        assert.strictEqual(this.$('>:first-child').attr('data-tab-name'), name, 'Data tab name is set properly');\n    });\n\n    ember_qunit.test('Yielded content passes through', function (assert) {\n\n        this.render(Ember.HTMLBars.template((function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            A content\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-tab-pane', [], [], 0, null, ['loc', [null, [2, 8], [4, 24]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'A content', 'Expected content is present');\n    });\n\n});","define('dummy/tests/integration/components/sl-tab-pane-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-tab-pane-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-tab-pane-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-tab-panel-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n    'use strict';\n\n    var template = Ember['default'].HTMLBars.template((function () {\n        var child0 = (function () {\n            var child0 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 3,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 3,\n                                'column': 52\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('A content');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            var child1 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 4,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 4,\n                                'column': 52\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('B content');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            var child2 = (function () {\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 5,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 5,\n                                'column': 52\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('C content');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes() {\n                        return [];\n                    },\n                    statements: [],\n                    locals: [],\n                    templates: []\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 2,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 6,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(3);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-tab-pane', [], ['label', 'A', 'name', 'a'], 0, null, ['loc', [null, [3, 8], [3, 68]]]], ['block', 'sl-tab-pane', [], ['label', 'B', 'name', 'b'], 1, null, ['loc', [null, [4, 8], [4, 68]]]], ['block', 'sl-tab-pane', [], ['label', 'C', 'name', 'c'], 2, null, ['loc', [null, [5, 8], [5, 68]]]]],\n                locals: [],\n                templates: [child0, child1, child2]\n            };\n        })();\n\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 7,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n            },\n            statements: [['block', 'sl-tab-panel', [], [], 0, null, ['loc', [null, [2, 4], [6, 21]]]]],\n            locals: [],\n            templates: [child0]\n        };\n    })());\n\n    ember_qunit.moduleForComponent('sl-tab-panel', 'Integration | Component | sl tab panel', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(template);\n\n        var wrapper = this.$('>:first-child');\n\n        assert.ok(wrapper.hasClass('sl-tab-panel'), 'Has class \"sl-tab-panel\"');\n\n        assert.ok(wrapper.hasClass('sl-align-tabs-left'), 'Has class \"sl-align-tabs-left\"');\n\n        assert.strictEqual(wrapper.find('.nav-tabs[role=\"tablist\"]').length, 1, 'Rendered component has \"tablist\" ARIA role');\n\n        assert.strictEqual(wrapper.find('.tab a[role=\"tab\"]').length, 3, 'Rendered component has three <a> with \"tab\" ARIA role');\n\n        var labels = [];\n\n        wrapper.find('.tab[data-tab-name]').each(function () {\n            labels.push(Ember['default'].$(this).attr('data-tab-name'));\n        });\n\n        assert.deepEqual(labels, ['a', 'b', 'c'], 'Tabs display in expected order');\n    });\n\n    ember_qunit.test('setupTabs() sets up tabs correctly', function (assert) {\n        assert.expect(5);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 3,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 3,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('A content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child1 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 4,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 4,\n                                    'column': 57\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('B content ');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child2 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 5,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('C content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['block', 'sl-tab-pane', [], ['label', 'A', 'name', 'a'], 0, null, ['loc', [null, [3, 12], [3, 72]]]], ['block', 'sl-tab-pane', [], ['label', 'B', 'name', 'b'], 1, null, ['loc', [null, [4, 12], [4, 73]]]], ['block', 'sl-tab-pane', [], ['label', 'C', 'name', 'c'], 2, null, ['loc', [null, [5, 12], [5, 72]]]]],\n                    locals: [],\n                    templates: [child0, child1, child2]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-tab-panel', [], ['tabs', ['subexpr', '@mut', [['get', 'tabs', ['loc', [null, [2, 29], [2, 33]]]]], [], []]], 0, null, ['loc', [null, [2, 8], [6, 25]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var wrapper = this.$('>:first-child');\n        var tabPaneA = wrapper.find('.sl-tab-pane[data-tab-name=\"a\"]');\n        var done = assert.async();\n\n        assert.strictEqual(wrapper.find('.tab[data-tab-name]').length, 3, 'Three tabs are rendered');\n\n        assert.strictEqual(wrapper.find('.sl-tab-pane[data-tab-name]').length, 3, 'Three tab panes are rendered');\n\n        assert.strictEqual(wrapper.find('.sl-tab-pane[data-tab-name=\"b\"]').text().trim(), 'B content', 'Expected content is present in second tab pane');\n\n        // queue asserts after animation\n        tabPaneA.queue(function () {\n            assert.strictEqual(wrapper.find('.tab.active[data-tab-name=\"a\"]').length, 1, 'Rendered component has tab \"a\" as its active tab');\n\n            assert.strictEqual(wrapper.find('.sl-tab-pane.active[data-tab-name=\"a\"]').length, 1, 'Rendered component has panel for tab \"a\" as its active panel');\n\n            done();\n        });\n    });\n\n    ember_qunit.test('initialTabName property is respected', function (assert) {\n        assert.expect(2);\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 3,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 3,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('A content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child1 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 4,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 4,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('B content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child2 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 5,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('C content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['block', 'sl-tab-pane', [], ['label', 'A', 'name', 'a'], 0, null, ['loc', [null, [3, 12], [3, 72]]]], ['block', 'sl-tab-pane', [], ['label', 'B', 'name', 'b'], 1, null, ['loc', [null, [4, 12], [4, 72]]]], ['block', 'sl-tab-pane', [], ['label', 'C', 'name', 'c'], 2, null, ['loc', [null, [5, 12], [5, 72]]]]],\n                    locals: [],\n                    templates: [child0, child1, child2]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-tab-panel', [], ['initialTabName', 'b'], 0, null, ['loc', [null, [2, 8], [6, 25]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var wrapper = this.$('>:first-child');\n        var tabPaneB = wrapper.find('.sl-tab-pane[data-tab-name=\"b\"]');\n        var done = assert.async();\n\n        // queue asserts after animation\n        tabPaneB.queue(function () {\n            assert.strictEqual(wrapper.find('.tab.active[data-tab-name=\"b\"]').length, 1, 'Initial tab is expected \"b\"');\n\n            assert.ok(tabPaneB.hasClass('active'), 'Initial tab pane is expected \"b\"');\n\n            done();\n        });\n    });\n\n    ember_qunit.test('alignTabs property is respected', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 3,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 3,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('A content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child1 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 4,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 4,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('B content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child2 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 5,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 5,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('C content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 6,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['block', 'sl-tab-pane', [], ['label', 'A', 'name', 'a'], 0, null, ['loc', [null, [3, 12], [3, 72]]]], ['block', 'sl-tab-pane', [], ['label', 'B', 'name', 'b'], 1, null, ['loc', [null, [4, 12], [4, 72]]]], ['block', 'sl-tab-pane', [], ['label', 'C', 'name', 'c'], 2, null, ['loc', [null, [5, 12], [5, 72]]]]],\n                    locals: [],\n                    templates: [child0, child1, child2]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 7,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-tab-panel', [], ['alignTabs', 'right'], 0, null, ['loc', [null, [2, 8], [6, 25]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var wrapper = this.$('>:first-child');\n        var tabAOffset = wrapper.find('.tab[data-tab-name=\"a\"]').offset().left;\n        var tabBOffset = wrapper.find('.tab[data-tab-name=\"b\"]').offset().left;\n        var tabCOffset = wrapper.find('.tab[data-tab-name=\"c\"]').offset().left;\n\n        assert.ok(wrapper.hasClass('sl-align-tabs-right'), 'Tab alignment class is applied');\n\n        assert.ok(tabAOffset > tabBOffset, 'Tab A is positioned to the right of tab B');\n\n        assert.ok(tabBOffset > tabCOffset, 'Tab B is positioned to the right of tab C');\n    });\n\n    ember_qunit.test('Clicking tab changes active tab', function (assert) {\n        assert.expect(4);\n\n        this.render(template);\n\n        var wrapper = this.$('>:first-child');\n        var tabPaneB = wrapper.find('.sl-tab-pane[data-tab-name=\"b\"]');\n        var tabPaneA = wrapper.find('.sl-tab-pane[data-tab-name=\"a\"]');\n\n        var done = assert.async();\n\n        wrapper.find('.tab[data-tab-name=\"b\"] a').trigger('click');\n\n        // queue asserts after animation\n        tabPaneA.queue(function () {\n            tabPaneB.queue(function () {\n                var activeTab = wrapper.find('.tab.active');\n                var activePane = wrapper.find('.sl-tab-pane.active');\n\n                assert.strictEqual(activeTab.data('tab-name'), 'b', 'Active tab is \"b\"');\n\n                assert.strictEqual(activePane.data('tab-name'), 'b', 'Active pane is \"b\"');\n\n                assert.strictEqual(activeTab.length, 1, \"There's only one active tab'\");\n\n                assert.strictEqual(activePane.length, 1, \"There's only one active pane\");\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('Tab content height is adjusted after new tab selection', function (assert) {\n        assert.expect(1);\n\n        var done = assert.async();\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            var child0 = (function () {\n                var child0 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 3,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 3,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('A content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child1 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 4,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 6,\n                                    'column': 12\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('                B content');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('br');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createElement('br');\n                            dom.appendChild(el0, el1);\n                            var el1 = dom.createTextNode('Taller content\\n');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                var child2 = (function () {\n                    return {\n                        meta: {\n                            'revision': 'Ember@1.13.7',\n                            'loc': {\n                                'source': null,\n                                'start': {\n                                    'line': 7,\n                                    'column': 12\n                                },\n                                'end': {\n                                    'line': 7,\n                                    'column': 56\n                                }\n                            }\n                        },\n                        arity: 0,\n                        cachedFragment: null,\n                        hasRendered: false,\n                        buildFragment: function buildFragment(dom) {\n                            var el0 = dom.createDocumentFragment();\n                            var el1 = dom.createTextNode('C content');\n                            dom.appendChild(el0, el1);\n                            return el0;\n                        },\n                        buildRenderNodes: function buildRenderNodes() {\n                            return [];\n                        },\n                        statements: [],\n                        locals: [],\n                        templates: []\n                    };\n                })();\n\n                return {\n                    meta: {\n                        'revision': 'Ember@1.13.7',\n                        'loc': {\n                            'source': null,\n                            'start': {\n                                'line': 2,\n                                'column': 8\n                            },\n                            'end': {\n                                'line': 8,\n                                'column': 8\n                            }\n                        }\n                    },\n                    arity: 0,\n                    cachedFragment: null,\n                    hasRendered: false,\n                    buildFragment: function buildFragment(dom) {\n                        var el0 = dom.createDocumentFragment();\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('            ');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createComment('');\n                        dom.appendChild(el0, el1);\n                        var el1 = dom.createTextNode('\\n');\n                        dom.appendChild(el0, el1);\n                        return el0;\n                    },\n                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                        var morphs = new Array(3);\n                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                        morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                        return morphs;\n                    },\n                    statements: [['block', 'sl-tab-pane', [], ['label', 'A', 'name', 'a'], 0, null, ['loc', [null, [3, 12], [3, 72]]]], ['block', 'sl-tab-pane', [], ['label', 'B', 'name', 'b'], 1, null, ['loc', [null, [4, 12], [6, 28]]]], ['block', 'sl-tab-pane', [], ['label', 'C', 'name', 'c'], 2, null, ['loc', [null, [7, 12], [7, 72]]]]],\n                    locals: [],\n                    templates: [child0, child1, child2]\n                };\n            })();\n\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 9,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['block', 'sl-tab-panel', [], [], 0, null, ['loc', [null, [2, 8], [8, 25]]]]],\n                locals: [],\n                templates: [child0]\n            };\n        })()));\n\n        var wrapper = this.$('>:first-child');\n        var tabPaneA = wrapper.find('.sl-tab-pane[data-tab-name=\"a\"]');\n        var tabPaneB = wrapper.find('.sl-tab-pane[data-tab-name=\"b\"]');\n\n        var initialHeight = wrapper.find('.tab-content').height();\n\n        wrapper.find('.tab[data-tab-name=\"b\"] a').trigger('click');\n\n        // queue assert after animation\n        tabPaneA.queue(function () {\n            tabPaneB.queue(function () {\n                assert.notEqual(wrapper.find('.tab-content').height(), initialHeight);\n\n                done();\n            });\n        });\n    });\n\n});","define('dummy/tests/integration/components/sl-tab-panel-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-tab-panel-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-tab-panel-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-textarea-test', ['ember-qunit', 'qunit'], function (ember_qunit, qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-textarea', 'Integration | Component | sl textarea', {\n        integration: true\n    });\n\n    ember_qunit.test('Default rendered state', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-textarea', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.ok(this.$('>:first-child').hasClass('form-group'), 'Has class \"form-group\"');\n\n        assert.ok(this.$('>:first-child').hasClass('sl-textarea'), 'Has class \"sl-textarea\"');\n\n        assert.ok(this.$('>:first-child').find('textarea').hasClass('form-control'), 'Has class \"form-control\"');\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('spellcheck'), 'false', '\"spellcheck\" property default value is false');\n    });\n\n    ember_qunit.test('\"value\" property is supported', function (assert) {\n        this.set('value', 'testBoundValue');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [2, 28], [2, 33]]]]], [], []]], ['loc', [null, [2, 8], [2, 35]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').val(), this.get('value'), '\"value\" property has expected value');\n    });\n\n    ember_qunit.test('\"wrap\" property is supported', function (assert) {\n        this.set('wrap', 'hard');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['wrap', ['subexpr', '@mut', [['get', 'wrap', ['loc', [null, [2, 27], [2, 31]]]]], [], []]], ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('wrap'), this.get('wrap'), '\"wrap\" property has expected value');\n\n        this.set('wrap', 'soft');\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('wrap'), this.get('wrap'), '\"wrap\" property is settable');\n    });\n\n    ember_qunit.test('\"tabindex\" property is supported', function (assert) {\n        this.set('tabindex', 2);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['tabindex', ['subexpr', '@mut', [['get', 'tabindex', ['loc', [null, [2, 31], [2, 39]]]]], [], []]], ['loc', [null, [2, 8], [2, 41]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('tabindex'), this.get('tabindex'), '\"tabindex\" property has expected value');\n\n        this.set('tabindex', 1);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('tabindex'), this.get('tabindex'), '\"tabindex\" property is settable');\n    });\n\n    ember_qunit.test('\"autofocus\" property is supported', function (assert) {\n        this.set('autofocus', true);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['autofocus', ['subexpr', '@mut', [['get', 'autofocus', ['loc', [null, [2, 32], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('autofocus'), this.get('autofocus'), '\"autofocus\" property has expected value');\n\n        this.set('autofocus', false);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('autofocus'), this.get('autofocus'), '\"autofocus\" property is settable');\n    });\n\n    ember_qunit.test('\"cols\" property is supported', function (assert) {\n        this.set('cols', 8);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['cols', ['subexpr', '@mut', [['get', 'cols', ['loc', [null, [2, 27], [2, 31]]]]], [], []]], ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('cols'), this.get('cols'), '\"cols\" property has expected value');\n\n        this.set('cols', 7);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('cols'), this.get('cols'), '\"cols\" property is settable');\n    });\n\n    ember_qunit.test('\"disabled\" property is supported', function (assert) {\n        this.set('disabled', true);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['disabled', ['subexpr', '@mut', [['get', 'disabled', ['loc', [null, [2, 31], [2, 39]]]]], [], []]], ['loc', [null, [2, 8], [2, 41]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('disabled'), this.get('disabled'), '\"disabled\" property has expected value');\n\n        this.set('disabled', false);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('disabled'), this.get('disabled'), '\"disabled\" property is settable');\n    });\n\n    ember_qunit.test('\"maxlength\" property is supported', function (assert) {\n        this.set('maxlength', 12);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['maxlength', ['subexpr', '@mut', [['get', 'maxlength', ['loc', [null, [2, 32], [2, 41]]]]], [], []]], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('maxlength'), this.get('maxlength'), '\"maxlength\" property has expected value');\n\n        this.set('maxlength', 11);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('maxlength'), this.get('maxlength'), '\"maxlength\" property is settable');\n    });\n\n    ember_qunit.test('\"placeholder\" property is supported', function (assert) {\n        this.set('placeholder', 'placeholder text');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['placeholder', ['subexpr', '@mut', [['get', 'placeholder', ['loc', [null, [2, 34], [2, 45]]]]], [], []]], ['loc', [null, [2, 8], [2, 47]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('placeholder'), this.get('placeholder'), '\"placeholder\" property has expected value');\n\n        this.set('placeholder', 'placeholder text two');\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('placeholder'), this.get('placeholder'), '\"placeholder\" property is settable');\n    });\n\n    ember_qunit.test('\"readonly\" property is supported', function (assert) {\n        this.set('readonly', true);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['readonly', ['subexpr', '@mut', [['get', 'readonly', ['loc', [null, [2, 31], [2, 39]]]]], [], []]], ['loc', [null, [2, 8], [2, 41]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('readonly'), this.get('readonly'), '\"readonly\" property has expected value');\n\n        this.set('readonly', false);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('readonly'), this.get('readonly'), '\"readonly\" property is settable');\n    });\n\n    ember_qunit.test('\"rows\" property is supported', function (assert) {\n        this.set('rows', 4);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['rows', ['subexpr', '@mut', [['get', 'rows', ['loc', [null, [2, 27], [2, 31]]]]], [], []]], ['loc', [null, [2, 8], [2, 33]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('rows'), this.get('rows'), '\"rows\" property has expected value');\n\n        this.set('rows', 5);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('rows'), this.get('rows'), '\"rows\" property is settable');\n    });\n\n    ember_qunit.test('\"helpText\" is rendered if populated', function (assert) {\n        this.set('helpText', 'Help Text');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['helpText', ['subexpr', '@mut', [['get', 'helpText', ['loc', [null, [2, 31], [2, 39]]]]], [], []]], ['loc', [null, [2, 8], [2, 41]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('.help-block').prop('tagName'), 'P', '\"helptext\" block is rendered as a <p>');\n\n        assert.strictEqual(this.$('>:first-child').find('.help-block').text().trim(), this.get('helpText'), '\"helptext\" block text is expected value');\n    });\n\n    ember_qunit.test('\"optional\" and \"required\" elements are rendered if populated along with \"label\" property', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['label', 'Test Label', 'optional', true, 'required', true], ['loc', [null, [2, 8], [2, 70]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label > .text-info').prop('tagName'), 'SMALL', \"Label's text-info <small> is rendered\");\n\n        assert.strictEqual(this.$('>:first-child').find('label > .text-danger').prop('tagName'), 'SMALL', \"Label's text-danger <small> is rendered\");\n    });\n\n    ember_qunit.test('If \"label\" property is not populated, \"optional\" and \"required\" elements are not rendered even if populated', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 8\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n            ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['optional', true, 'required', true], ['loc', [null, [2, 12], [2, 55]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label > .text-info').length, 0, 'Label text-info is not rendered');\n\n        assert.strictEqual(this.$('>:first-child').find('label > .text-danger').length, 0, 'Label text-danger is not rendered');\n    });\n\n    ember_qunit.test('If \"label\" property is not populated, label element is not rendered', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-textarea', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label').length, 0, '\"label\" element is not rendered');\n    });\n\n    ember_qunit.test('If \"label\" property is populated, label element is rendered', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['label', 'test'], ['loc', [null, [2, 8], [2, 36]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var label = this.$(this.$('>:first-child').find('label'));\n\n        assert.strictEqual(label.length, 1, 'Label is present');\n\n        assert.strictEqual(label.text().trim(), 'test', 'Label text is expected value');\n\n        assert.ok(this.$('>:first-child').find('label').hasClass('control-label'), 'Has class \"control-label\"');\n    });\n\n    ember_qunit.test('If \"label\" property is populated, \"for\" attribute is expected value', function (assert) {\n        this.set('label', 'Test Label');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['label', ['subexpr', '@mut', [['get', 'label', ['loc', [null, [2, 28], [2, 33]]]]], [], []]], ['loc', [null, [2, 8], [2, 35]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('label').prop('for'), this.$('>:first-child').find('textarea').prop('id'), 'Label \"for\" property matches textarea\\'s \"id\" property');\n    });\n\n    ember_qunit.test('for attribute value on label matches id of textarea', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['label', 'test label'], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.equal(this.$('>:first-child').find('label').attr('for'), this.$('>:first-child').find('textarea').attr('id'));\n    });\n\n    ember_qunit.test('\"spellcheck\" property is supported with bound values', function (assert) {\n        this.set('spellcheck', true);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['spellcheck', ['subexpr', '@mut', [['get', 'spellcheck', ['loc', [null, [2, 33], [2, 43]]]]], [], []]], ['loc', [null, [2, 8], [2, 45]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('spellcheck'), 'true', '\"spellcheck\" property is expected value');\n\n        this.set('spellcheck', false);\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').attr('spellcheck'), 'false', '\"spellcheck\" property is expected value');\n    });\n\n    ember_qunit.test('Tooltip properties are set correctly when title parameter is set', function (assert) {\n        var title = 'test title';\n\n        this.set('title', title);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 28], [2, 33]]]]], [], []]], ['loc', [null, [2, 8], [2, 35]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var tooltipData = data['bs.tooltip'];\n        var options = tooltipData.getOptions();\n\n        assert.strictEqual(tooltipData.enabled, true, 'tooltip is enabled');\n\n        assert.strictEqual(tooltipData.getTitle(), title, 'Title text is set correctly');\n\n        assert.strictEqual(options.trigger, 'hover focus', 'Default trigger is \"hover focus\"');\n    });\n\n    ember_qunit.test('Popover properties are set correctly when popover parameter is set', function (assert) {\n        var title = 'test title';\n        var popover = 'popover text';\n\n        this.set('title', title);\n        this.set('popover', popover);\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 30], [2, 37]]]]], [], []]], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var data = this.$('>:first-child').data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 28], [2, 33]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 42], [2, 49]]]]], [], []]], ['loc', [null, [2, 8], [2, 51]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        data = this.$('>:first-child').data();\n        popoverData = data['bs.popover'];\n        var options = popoverData.getOptions();\n\n        assert.strictEqual(popoverData.getTitle(), title, 'Popover title was set correctly');\n\n        assert.strictEqual(popoverData.getContent(), popover, 'Popover text is set correctly');\n\n        assert.strictEqual(options.trigger, 'click', 'Default trigger is \"click\"');\n    });\n\n    ember_qunit.test('name applies property to textarea', function (assert) {\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-textarea', ['loc', [null, [2, 8], [2, 23]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('name'), '', 'Rendered textarea has empty name');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-textarea', [], ['name', 'testname'], ['loc', [null, [2, 8], [2, 39]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').find('textarea').prop('name'), 'testname', 'Rendered textarea has name set');\n    });\n\n    // This test requires full browser support, Issue #719 opened.\n    qunit.skip('selectionDirection is supported');\n\n    // This tests will be implemented separately, Issue #803 opened.\n    qunit.skip('\"selectionStart\" is supported');\n    qunit.skip('\"selectionEnd\" is supported');\n\n});","define('dummy/tests/integration/components/sl-textarea-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-textarea-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-textarea-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-tooltip-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-tooltip', 'Integration | Component | sl tooltip', {\n        integration: true\n    });\n\n    ember_qunit.test('\"Title\" capabilities are supported', function (assert) {\n        this.set('title', 'test title');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-tooltip', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 27], [2, 32]]]]], [], []]], ['loc', [null, [2, 8], [2, 34]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').attr('data-original-title'), this.get('title'), 'Title prop supported');\n    });\n\n    ember_qunit.test('\"Popover\" capabilities are supported', function (assert) {\n        this.set('popover', 'Popover content');\n        this.set('title', 'test title');\n\n        this.render(Ember.HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-tooltip', [], ['title', ['subexpr', '@mut', [['get', 'title', ['loc', [null, [2, 27], [2, 32]]]]], [], []], 'popover', ['subexpr', '@mut', [['get', 'popover', ['loc', [null, [2, 41], [2, 48]]]]], [], []]], ['loc', [null, [2, 8], [2, 50]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').data('bs.popover').options.content, this.get('popover'), 'Popover capabilites are supported');\n    });\n\n});","define('dummy/tests/integration/components/sl-tooltip-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-tooltip-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'integration/components/sl-tooltip-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/application.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/demos/sl-calendar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/demos');\n  QUnit.test('routes/demos/sl-calendar.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'routes/demos/sl-calendar.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/demos/sl-chart.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/demos');\n  QUnit.test('routes/demos/sl-chart.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'routes/demos/sl-chart.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/demos/sl-grid.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/demos');\n  QUnit.test('routes/demos/sl-grid.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'routes/demos/sl-grid.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/demos/sl-menu.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/demos');\n  QUnit.test('routes/demos/sl-menu.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'routes/demos/sl-menu.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/demos/sl-select.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/demos');\n  QUnit.test('routes/demos/sl-select.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'routes/demos/sl-select.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-alert-test', ['ember-qunit', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sl-ember-components/components/sl-alert', 'sinon'], function (ember_qunit, TooltipEnabledMixin, sl_alert, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-alert', 'Unit | Component | sl alert', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('ariaRole'), 'alert', 'ariaRole: \"alert\"');\n\n        assert.strictEqual(component.get('dismissable'), false, 'dismissable: false');\n\n        assert.strictEqual(component.get('theme'), sl_alert.Theme.INFO, 'theme: \"' + sl_alert.Theme.INFO + '\"');\n    });\n\n    ember_qunit.test('Bound \"dismiss\" action is triggered when dismiss action is triggered', function (assert) {\n        var component = this.subject();\n        var spy = sinon['default'].spy(component, 'sendAction');\n\n        component.send('dismiss');\n\n        assert.strictEqual(spy.args[0].join(), 'dismiss', 'Bound \"dismiss\" action is triggered when dismiss action is triggered');\n    });\n\n    ember_qunit.test('themeClassName() returns expected value', function (assert) {\n        var testThemeValue = 'testTheme';\n        var component = this.subject({\n            theme: testThemeValue\n        });\n\n        assert.strictEqual(component.get('themeClassName'), 'alert-' + testThemeValue, 'themeClassName() returns expected value');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var themeClassNameDependentKeys = ['theme'];\n\n        assert.deepEqual(component.themeClassName._dependentKeys, themeClassNameDependentKeys, 'Dependent keys are correct for themeClassName()');\n    });\n\n});","define('dummy/tests/unit/components/sl-alert-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-alert-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-alert-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-button-test', ['ember', 'ember-qunit', 'sinon', 'ember-stream/mixins/stream-enabled', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sl-ember-components/components/sl-button', 'sl-ember-components/utils/all'], function (Ember, ember_qunit, sinon, StreamEnabledMixin, TooltipEnabledMixin, sl_button, utils) {\n\n    'use strict';\n\n    var Size = {\n        EXTRA_SMALL: 'extra-small',\n        LARGE: 'large',\n        MEDIUM: 'medium',\n        SMALL: 'small'\n    };\n\n    var Theme = {\n        DANGER: 'danger',\n        DEFAULT: 'default',\n        HOVER: 'hover',\n        INFO: 'info',\n        LINK: 'link',\n        PRIMARY: 'primary',\n        SUCCESS: 'success',\n        WARNING: 'warning'\n    };\n\n    ember_qunit.moduleForComponent('sl-button', 'Unit | Component | sl button', {\n        unit: true\n    });\n\n    var mockStreamService = {\n        send: function send() {}\n    };\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(StreamEnabledMixin['default'].detect(this.subject()), 'StreamEnabled Mixin is present');\n\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'button', 'Default tagName is button');\n\n        assert.strictEqual(component.get('bubbles'), true, 'bubbles is true by default');\n\n        assert.strictEqual(component.get('disabled'), false, 'disabled is false by default');\n\n        assert.strictEqual(component.get('label'), null, 'label is null by default');\n\n        assert.strictEqual(component.get('pending'), false, 'pending is false by default');\n\n        assert.strictEqual(component.get('pendingLabel'), null, 'pendingLabel is null by default');\n\n        assert.strictEqual(component.get('size'), 'medium', 'size is medium by default');\n\n        assert.strictEqual(component.get('showModalWithStreamName'), null, 'showModalWithStreamName is null by default');\n\n        assert.strictEqual(component.get('theme'), 'default', 'theme is \"default\" by default');\n\n        assert.deepEqual(sl_button.Size, Size, 'Size enum values are correct');\n\n        assert.deepEqual(sl_button.Theme, Theme, 'Theme enum values are correct');\n    });\n\n    ember_qunit.test('Button supports click event bubbling', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.click(), true, 'Button bubbles click events by default');\n\n        component.set('bubbles', false);\n\n        assert.strictEqual(component.click(), false, 'Button click event will not propagate when bubbles is false');\n    });\n\n    ember_qunit.test('Label changes for pending state', function (assert) {\n        var pendingText = 'Pending';\n        var staticText = 'Static';\n        var component = this.subject({\n            pendingLabel: pendingText,\n            label: staticText\n        });\n\n        assert.strictEqual(component.get('currentLabel'), staticText, 'Static text is set initially');\n\n        Ember['default'].run(function () {\n            return component.set('pending', true);\n        });\n\n        assert.strictEqual(component.get('currentLabel'), pendingText, 'Pending text is set while pending');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var currentLabelDependentKeys = ['label', 'pending', 'pendingLabel'];\n\n        var sizeClassDependentKeys = ['size'];\n\n        var themeClassDependentKeys = ['theme'];\n\n        assert.deepEqual(component.currentLabel._dependentKeys, currentLabelDependentKeys, 'Dependent keys are correct for currentLabel()');\n\n        assert.deepEqual(component.sizeClass._dependentKeys, sizeClassDependentKeys, 'Dependent keys are correct for sizeClass()');\n\n        assert.deepEqual(component.themeClass._dependentKeys, themeClassDependentKeys, 'Dependent keys are correct for themeClass()');\n    });\n\n    ember_qunit.test('themeClass() returns the correct class', function (assert) {\n        var component = this.subject();\n\n        Object.keys(Theme).forEach(function (key) {\n            var theme = Theme[key];\n\n            Ember['default'].run(function () {\n                return component.set('theme', theme);\n            });\n\n            assert.strictEqual(component.get('themeClass'), 'btn-' + theme);\n        });\n\n        var spy = sinon['default'].spy(utils, 'warn');\n\n        component.set('theme', 'invalid value');\n        component.get('themeClass');\n\n        assert.ok(spy.calledOnce, 'warn() was called when invalid theme was set');\n\n        utils.warn.restore();\n    });\n\n    ember_qunit.test('sizeClass() returns the correct class', function (assert) {\n        // clone imported enum\n        var sizes = Ember['default'].copy(sl_button.Size);\n        var component = this.subject();\n\n        // Set class values on cloned enum, any new values added to imported\n        // enum will cause this test to fail if corresponding class is not set.\n        // This will ensure that this test does not give false positives\n        // for new enum values added.\n        sizes.EXTRA_SMALL = { size: sizes.EXTRA_SMALL, 'class': 'btn-xs' };\n        sizes.LARGE = { size: sizes.LARGE, 'class': 'btn-lg' };\n        sizes.MEDIUM = { size: sizes.MEDIUM, 'class': null };\n        sizes.SMALL = { size: sizes.SMALL, 'class': 'btn-sm' };\n\n        Object.keys(sizes).forEach(function (key) {\n            var size = sizes[key].size;\n            var cls = sizes[key]['class'];\n\n            Ember['default'].run(function () {\n                return component.set('size', size);\n            });\n\n            assert.strictEqual(component.get('sizeClass'), cls, size + ' returned correct value of ' + cls);\n        });\n\n        var spy = sinon['default'].spy(utils, 'warn');\n\n        component.set('size', 'invalid value');\n        component.get('sizeClass');\n\n        assert.ok(spy.calledOnce, 'warn() was called when invalid size was set');\n\n        utils.warn.restore();\n    });\n\n    ember_qunit.test('send() and sendAction() are called when component click() is invoked', function (assert) {\n        var sendSpy = sinon['default'].spy(mockStreamService, 'send');\n\n        var component = this.subject({\n            streamService: mockStreamService,\n            showModalWithStreamName: 'testStreamName',\n            sendAction: sinon['default'].spy()\n        });\n\n        component.click();\n\n        assert.ok(sendSpy.calledWith('testStreamName', 'show'), 'send() called with correct arguments');\n\n        assert.ok(component.sendAction.calledOnce, 'sendAction was called');\n\n        mockStreamService.send.restore();\n    });\n\n});","define('dummy/tests/unit/components/sl-button-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-button-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-button-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-calendar-day-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-calendar-day', 'Unit | Component | sl calendar day', {\n        unit: true\n    });\n\n    ember_qunit.test('Default state of calendar-day is not active, new or old', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('active'), false, 'Default component is not active');\n\n        assert.strictEqual(this.$().hasClass('active'), false, 'Default component does not have \"active\" class');\n\n        assert.strictEqual(component.get('new'), false, 'Default component is not \"new\"');\n\n        assert.strictEqual(this.$().hasClass('new'), false, 'Default component does not have \"new\" class');\n\n        assert.strictEqual(component.get('old'), false, 'Default component is not \"old\"');\n\n        assert.strictEqual(this.$().hasClass('old'), false, 'Default component does not have \"old\" class');\n    });\n\n    ember_qunit.test('Active state is applied correctly', function (assert) {\n        var component = this.subject({ active: true });\n\n        assert.ok(component.get('active'), 'Component is set to active state');\n\n        assert.ok(this.$().hasClass('active'), 'Component element has class \"active\"');\n    });\n\n    ember_qunit.test('New state is applied correctly', function (assert) {\n        var component = this.subject({ 'new': true });\n\n        assert.ok(component.get('new'), 'Component is set to new state');\n\n        assert.ok(this.$().hasClass('new'), 'Component element has class \"new\"');\n    });\n\n    ember_qunit.test('Old state is applied correctly', function (assert) {\n        var component = this.subject({ old: true });\n\n        assert.ok(component.get('old'), 'Component is set to old state');\n\n        assert.ok(this.$().hasClass('old'), 'Component element has class \"old\"');\n    });\n\n    ember_qunit.test('Property \"day\" populates component content', function (assert) {\n        this.subject({ day: 42 });\n\n        assert.strictEqual(Ember['default'].$.trim(this.$().text()), '42', '\"day\" value is set to element content');\n    });\n\n    ember_qunit.test('Action bindings sends action with expected day content', function (assert) {\n        var dayContent = { day: 42 };\n\n        this.subject({\n            action: 'test',\n            content: dayContent,\n            targetObject: {\n                test: function test(content) {\n                    assert.strictEqual(content, dayContent, 'Test action fired with expected value');\n                }\n            }\n        });\n\n        assert.expect(1);\n\n        this.$().trigger('click');\n    });\n\n});","define('dummy/tests/unit/components/sl-calendar-day-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-calendar-day-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-calendar-day-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-calendar-month-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-calendar-month', 'Unit | Component | sl calendar month', {\n        unit: true\n    });\n\n    ember_qunit.test('Default state is inactive', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('active'), false, 'Component is not active');\n\n        assert.strictEqual(this.$().hasClass('active'), false, 'Component does not have \"active\" class');\n    });\n\n    ember_qunit.test('Component has \"month\" class by default', function (assert) {\n        assert.ok(this.$().hasClass('month'), '\"month\" class is present');\n    });\n\n    ember_qunit.test('Active state is set correctly', function (assert) {\n        var component = this.subject({ active: true });\n\n        assert.ok(component.get('active'), 'Component is active');\n\n        assert.ok(this.$().hasClass('active'), '\"active\" class is present');\n    });\n\n    ember_qunit.test('Action binding sends action with month', function (assert) {\n        this.subject({\n            action: 'test',\n            month: 6,\n            targetObject: {\n                test: function test(month) {\n                    assert.strictEqual(month, 6, 'Test action fired with expected month');\n                }\n            }\n        });\n\n        assert.expect(1);\n\n        this.$().trigger('click');\n    });\n\n    ember_qunit.test('Short name property is invalid without month', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('shortName'), 'Invalid date', 'Invalid month results in invalid shortName');\n    });\n\n    ember_qunit.test('Short name property is defined with valid month', function (assert) {\n        var component = this.subject({ month: 1 });\n\n        assert.strictEqual(component.get('shortName'), 'Jan', 'Valid shortName with valid month');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var shortNameDependentKeys = ['month'];\n\n        assert.deepEqual(component.shortName._dependentKeys, shortNameDependentKeys, 'Dependent keys are correct for shortName()');\n    });\n\n});","define('dummy/tests/unit/components/sl-calendar-month-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-calendar-month-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-calendar-month-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-calendar-test', ['ember', 'ember-qunit', 'sinon', 'qunit'], function (Ember, ember_qunit, sinon, qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-calendar', 'Unit | Component | sl calendar', {\n        needs: ['component:sl-calendar-day', 'component:sl-calendar-month', 'component:sl-calendar-year'],\n\n        unit: true\n    });\n\n    ember_qunit.test('Default property values are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.deepEqual(component.get('content'), [], 'content: []');\n\n        var today = new Date();\n        var month = today.getMonth() + 1;\n\n        assert.strictEqual(component.get('currentMonth'), month, 'currentMonth: ' + month);\n\n        var year = today.getFullYear();\n\n        assert.strictEqual(component.get('currentYear'), year, 'currentYear: ' + year);\n\n        assert.strictEqual(component.get('dateValuePath'), 'date', 'dateValuePath: \"date\"');\n\n        assert.strictEqual(component.get('locale'), 'en', 'locale: \"en\"');\n\n        assert.strictEqual(component.get('locked'), false, 'locked: false');\n\n        assert.strictEqual(component.get('viewMode'), 'days', 'viewMode: \"days\"');\n    });\n\n    ember_qunit.test('Lock mode prevents changing state', function (assert) {\n        var component = this.subject({ locked: true });\n\n        var initialDecadeStart = component.get('decadeStart');\n        component.send('changeDecade', 1);\n        assert.strictEqual(initialDecadeStart, component.get('decadeStart'), 'Value decadeStart is unchanged from actions.changeDecade');\n\n        var initialMonth = component.get('currentMonth');\n        component.send('changeMonth', 1);\n        assert.strictEqual(initialMonth, component.get('currentMonth'), 'Value currentMonth is unchanged from actions.changeMonth');\n\n        var initialYear = component.get('currentYear');\n        component.send('changeYear', 1);\n        assert.strictEqual(initialYear, component.get('currentYear'), 'Value currentYear is unchanged from actions.changeYear');\n\n        component.send('setMonth', initialMonth + 1);\n        assert.strictEqual(initialMonth, component.get('currentMonth'), 'Value currentMonth is unchanged from actions.setMonth');\n\n        var initialViewMode = component.get('viewMode');\n        component.send('setView', 'something');\n        assert.strictEqual(initialViewMode, component.get('viewMode'), 'Value viewMode is unchanged from actions.setView');\n\n        component.send('setYear', initialYear + 1);\n        assert.strictEqual(initialYear, component.get('currentYear'), 'Value currentYear is unchanged from actions.setYear');\n    });\n\n    qunit.skip('locale - Setting causes default of en (English) to be updated', function () {});\n\n    qunit.skip('currentMonthString - current month string formatted as full word (January, November, ...)', function () {});\n\n    qunit.skip('contentDates - Verify dates array', function () {});\n\n    qunit.skip('setYear - viewMode and currentYear set correctly', function () {});\n\n    qunit.skip('setView - viewMode set correctly', function () {});\n\n    qunit.skip('setMonth - currentMonth and viewMode set correctly', function () {});\n\n    ember_qunit.test('changeDecade action works', function (assert) {\n        var component = this.subject({ currentYear: 2015 });\n\n        assert.strictEqual(component.get('decadeStart'), 2010, 'Initial decadeStart is expected value');\n\n        assert.strictEqual(component.get('decadeEnd'), 2019, 'Initial decadeEnd is expected value');\n\n        Ember['default'].run(function () {\n            component.send('changeDecade', 1);\n        });\n\n        assert.strictEqual(component.get('decadeStart'), 2020, 'Altered decadeStart is expected value');\n\n        assert.strictEqual(component.get('decadeEnd'), 2029, 'Altered decadeEnd is expected value');\n    });\n\n    ember_qunit.test('changeMonth action works', function (assert) {\n        var component = this.subject({ currentMonth: 1 });\n\n        assert.strictEqual(component.get('currentMonth'), 1, 'Initial currentMonth is expected value');\n\n        Ember['default'].run(function () {\n            component.send('changeMonth', 1);\n        });\n\n        assert.strictEqual(component.get('currentMonth'), 2, 'Altered currentMonth is expected value');\n    });\n\n    ember_qunit.test('changeYear action works', function (assert) {\n        var component = this.subject({ currentYear: 2015 });\n\n        assert.strictEqual(component.get('currentYear'), 2015, 'Initial currentYear is expected value');\n\n        Ember['default'].run(function () {\n            component.send('changeYear', 1);\n        });\n\n        assert.strictEqual(component.get('currentYear'), 2016, 'Altered currentYear is expected value');\n    });\n\n    ember_qunit.test('Decrementing month from January causes year to decrement', function (assert) {\n        var component = this.subject({\n            currentMonth: 1,\n            currentYear: 2015\n        });\n\n        Ember['default'].run(function () {\n            component.send('changeMonth', -1);\n        });\n\n        assert.strictEqual(component.get('currentYear'), 2014, 'currentYear is decremented');\n    });\n\n    ember_qunit.test('Incrementing month from December causes year to increment', function (assert) {\n        var component = this.subject({\n            currentMonth: 12,\n            currentYear: 2015\n        });\n\n        Ember['default'].run(function () {\n            component.send('changeMonth', 1);\n        });\n\n        assert.strictEqual(component.get('currentYear'), 2016, 'currentYear is incremented');\n    });\n\n    ember_qunit.test('daysInMonth - Number of days in month is set correctly', function (assert) {\n        var daysInMonthStub = sinon['default'].stub().returns(31);\n\n        var momentStub = sinon['default'].stub(window, 'moment').returns({ daysInMonth: daysInMonthStub });\n\n        var component = this.subject({\n            currentMonth: 12,\n            currentYear: 2015\n        });\n\n        assert.strictEqual(component.get('daysInMonth'), 31, '\"daysInMonth\" is set correctly');\n\n        assert.deepEqual(momentStub.args[0][0], [component.get('currentYear'), component.get('currentMonth') - 1], 'Moment called with currentYear and currentMonth');\n\n        window.moment.restore();\n    });\n\n    ember_qunit.test('Decade range is correctly based on currentYear', function (assert) {\n        var component = this.subject({ currentYear: 2023 });\n\n        assert.strictEqual(component.get('decadeStart'), 2020, 'decadeStart is expected value');\n\n        assert.strictEqual(component.get('decadeEnd'), 2029, 'decadeEnd is expected value');\n    });\n\n    ember_qunit.test('Months for year view are generated validly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('monthsInYearView').length, 12, 'Twelve months are created');\n    });\n\n    qunit.skip('monthsInYearView - active month set correctly', function () {\n        /* Expand 'Months for year view are generated validly' test to also\n            check that the active month is set correctly.\n        */\n    });\n\n    ember_qunit.test('View mode is settable to \"days\"', function (assert) {\n        var component = this.subject({ viewMode: 'days' });\n\n        assert.ok(component.get('viewingDays'), 'viewingDays is true when viewMode = \"days\"');\n\n        assert.notOk(component.get('viewingMonths'), 'viewingMonths is false when viewMode = \"days\"');\n\n        assert.notOk(component.get('viewingYears'), 'viewingYears is false when viewMode = \"days\"');\n    });\n\n    ember_qunit.test('View mode is settable to \"months\"', function (assert) {\n        var component = this.subject({ viewMode: 'months' });\n\n        assert.ok(component.get('viewingMonths'), 'viewingMonths is true when viewMode = \"months\"');\n\n        assert.notOk(component.get('viewingDays'), 'viewingDays is false when viewMode = \"months\"');\n\n        assert.notOk(component.get('viewingYears'), 'viewingYears is false when viewMode = \"months\"');\n    });\n\n    ember_qunit.test('View mode is settable to \"years\"', function (assert) {\n        var component = this.subject({ viewMode: 'years' });\n\n        assert.ok(component.get('viewingYears'), 'viewingYears is true when viewMode = \"years\"');\n\n        assert.notOk(component.get('viewingDays'), 'viewingDays is false when viewMode = \"years\"');\n\n        assert.notOk(component.get('viewingMonths'), 'viewingMonths is false when viewMode = \"years\"');\n    });\n\n    ember_qunit.test('weeksInMonthView - set previousMonth when: currentMonth is anything other than 1', function (assert) {\n        var daysInMonthStub = sinon['default'].stub().returns(31);\n\n        var momentStub = sinon['default'].stub(window, 'moment').returns({ daysInMonth: daysInMonthStub });\n\n        var weeksInMonthView = [[{\n            'active': false,\n            'content': null,\n            'day': 30,\n            'new': false,\n            'old': true\n        }, {\n            'active': false,\n            'content': null,\n            'day': 31,\n            'new': false,\n            'old': true\n        }, {\n            'active': false,\n            'content': null,\n            'day': 1,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 2,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 3,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 4,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 5,\n            'new': false,\n            'old': false\n        }], [{\n            'active': false,\n            'content': null,\n            'day': 6,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 7,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 8,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 9,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 10,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 11,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 12,\n            'new': false,\n            'old': false\n        }], [{\n            'active': false,\n            'content': null,\n            'day': 13,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 14,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 15,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 16,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 17,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 18,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 19,\n            'new': false,\n            'old': false\n        }], [{\n            'active': false,\n            'content': null,\n            'day': 20,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 21,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 22,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 23,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 24,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 25,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 26,\n            'new': false,\n            'old': false\n        }], [{\n            'active': false,\n            'content': null,\n            'day': 27,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 28,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 29,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 30,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 31,\n            'new': false,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 1,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 2,\n            'new': true,\n            'old': false\n        }], [{\n            'active': false,\n            'content': null,\n            'day': 3,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 4,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 5,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 6,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 7,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 8,\n            'new': true,\n            'old': false\n        }, {\n            'active': false,\n            'content': null,\n            'day': 9,\n            'new': true,\n            'old': false\n        }]];\n\n        var component = this.subject({\n            currentMonth: 12,\n            currentYear: 2015\n        });\n\n        assert.deepEqual(component.get('weeksInMonthView'), weeksInMonthView, '\"weeksInMonthView\" is set correctly');\n\n        assert.deepEqual(momentStub.args[0][0], [component.get('currentYear'), component.get('currentMonth') - 1], 'Moment called with currentYear and currentMonth');\n\n        window.moment.restore();\n    });\n\n    qunit.skip('weeksInMonthView - set previousMonth when: currentMonth equals 1', function () {});\n\n    qunit.skip('weeksInMonthView - set nextMonth when: currentMonth is anything other than 12', function () {});\n\n    qunit.skip('weeksInMonthView - when firstWeekdayOfCurrentMonth is 0 (Sunday)', function () {});\n\n    qunit.skip('shortWeekDayNames - returns array of day names in short name format (Su, Mo, Tu...)', function () {});\n\n    ember_qunit.test('Years for decade view are assembled correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('yearsInDecadeView').length, 12, 'Twelve years were generated for the decade view');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var contentDatesDependentKeys = ['content', 'dateValuePath'];\n\n        var currentMonthStringDependentKeys = ['currentMonth', 'currentYear', 'locale'];\n\n        var daysInMonthDependentKeys = ['currentMonth', 'currentYear'];\n\n        var decadeEndDependentKeys = ['decadeStart'];\n\n        var decadeStartDependentKeys = ['currentYear'];\n\n        var monthsInYearViewDependentKeys = ['contentDates', 'currentYear'];\n\n        var shortWeekDayNamesDependentKeys = ['locale'];\n\n        var viewingDaysDependentKeys = ['viewMode'];\n\n        var viewingMonthsDependentKeys = ['viewMode'];\n\n        var viewingYearsDependentKeys = ['viewMode'];\n\n        var weeksInMonthViewDependentKeys = ['contentDates', 'currentMonth', 'currentYear', 'daysInMonth'];\n\n        var yearsInDecadeViewDependentKeys = ['contentDates', 'decadeEnd', 'decadeStart'];\n\n        assert.deepEqual(component.contentDates._dependentKeys, contentDatesDependentKeys, 'Dependent keys are correct for contentDates()');\n\n        assert.deepEqual(component.currentMonthString._dependentKeys, currentMonthStringDependentKeys, 'Dependent keys are correct for currentMonthString()');\n\n        assert.deepEqual(component.daysInMonth._dependentKeys, daysInMonthDependentKeys, 'Dependent keys are correct for daysInMonth()');\n\n        assert.deepEqual(component.decadeEnd._dependentKeys, decadeEndDependentKeys, 'Dependent keys are correct for decadeEnd()');\n\n        assert.deepEqual(component.decadeStart._dependentKeys, decadeStartDependentKeys, 'Dependent keys are correct for decadeStart()');\n\n        assert.deepEqual(component.monthsInYearView._dependentKeys, monthsInYearViewDependentKeys, 'Dependent keys are correct for monthsInYearView()');\n\n        assert.deepEqual(component.shortWeekDayNames._dependentKeys, shortWeekDayNamesDependentKeys, 'Dependent keys are correct for shortWeekDayNames()');\n\n        assert.deepEqual(component.viewingDays._dependentKeys, viewingDaysDependentKeys, 'Dependent keys are correct for viewingDays()');\n\n        assert.deepEqual(component.viewingMonths._dependentKeys, viewingMonthsDependentKeys, 'Dependent keys are correct for viewingMonths()');\n\n        assert.deepEqual(component.viewingYears._dependentKeys, viewingYearsDependentKeys, 'Dependent keys are correct for viewingYears()');\n\n        assert.deepEqual(component.weeksInMonthView._dependentKeys, weeksInMonthViewDependentKeys, 'Dependent keys are correct for weeksInMonthView()');\n\n        assert.deepEqual(component.yearsInDecadeView._dependentKeys, yearsInDecadeViewDependentKeys, 'Dependent keys are correct for yearsInDecadeView()');\n    });\n\n});","define('dummy/tests/unit/components/sl-calendar-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-calendar-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-calendar-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-calendar-year-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-calendar-year', 'Unit | Component | sl calendar year', {\n        unit: true\n    });\n\n    ember_qunit.test('Default state is not active, new, or old', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('active'), false, 'Default component is not active');\n\n        assert.strictEqual(component.get('new'), false, 'Default component is not in new state');\n\n        assert.strictEqual(component.get('old'), false, 'Default component is not in old state');\n\n        assert.strictEqual(this.$().hasClass('active'), false, 'Default rendered component does not have class \"active\"');\n\n        assert.strictEqual(this.$().hasClass('new'), false, 'Default rendered component does not have class \"new\"');\n\n        assert.strictEqual(this.$().hasClass('old'), false, 'Default rendered component does not have class \"old\"');\n    });\n\n    ember_qunit.test('Click event sends action with year value', function (assert) {\n        var exampleYear = 2000;\n\n        assert.expect(1);\n\n        this.subject({\n            action: 'test',\n\n            targetObject: {\n                test: function test(year) {\n                    assert.strictEqual(year, exampleYear, 'Received year');\n                }\n            },\n\n            year: exampleYear\n        });\n\n        this.$().trigger('click');\n    });\n\n});","define('dummy/tests/unit/components/sl-calendar-year-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-calendar-year-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-calendar-year-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-chart-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    var testOptions = {\n        chartOptions: {\n            chart: {\n                type: 'bar'\n            },\n\n            xAxis: {\n                categories: ['Apples', 'Bananas', 'Oranges']\n            },\n\n            yAxis: {\n                title: {\n                    text: 'Fruit Eaten'\n                }\n            }\n        }\n    };\n\n    var testSeries = [{\n        name: 'Alice',\n        data: [1, 0, 4]\n    }];\n\n    ember_qunit.moduleForComponent('sl-chart', 'Unit | Component | sl chart', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values are set correctly', function (assert) {\n        var component = this.subject({\n            options: testOptions,\n            series: testSeries\n        });\n\n        assert.strictEqual(component.get('chart'), null, 'chart: null');\n\n        assert.strictEqual(component.get('height'), 'auto', 'height: \"auto\"');\n\n        assert.strictEqual(component.get('isLoading'), false, 'isLoading: false');\n\n        assert.deepEqual(component.get('series'), testSeries, 'series: null');\n\n        assert.strictEqual(component.get('width'), 'auto', 'width: \"auto\"');\n\n        assert.strictEqual(component.get('highchartsOptions').title, null, 'title property in highchartsOptions is set to null in order to\\n            suppress default behavior for our usage');\n    });\n\n    ember_qunit.test('updateData() is called after series property is modified', function (assert) {\n        var component = this.subject({\n            options: testOptions,\n            series: testSeries\n        });\n\n        this.render();\n\n        var spy = sinon['default'].spy(component, 'updateData');\n        var changedTestSeries = [];\n\n        component.set('series', changedTestSeries);\n\n        assert.ok(spy.calledOnce, 'updateData() is called once after series modified');\n    });\n\n    ember_qunit.test('\"Options\" property needs to be an object', function (assert) {\n        var _this = this;\n\n        var properties = Ember['default'].Object.create({\n            series: testSeries\n        });\n\n        var callSubject = function callSubject() {\n            return _this.subject(properties);\n        };\n\n        // null\n        properties.set('options', null);\n\n        assert.throws(callSubject, 'property was null');\n\n        // Array\n        properties.set('options', []);\n\n        assert.throws(callSubject, 'property was an Array');\n\n        // String\n        properties.set('options', 'test string');\n\n        assert.throws(callSubject, 'property was a String');\n\n        // undefined\n        properties.set('options', undefined);\n\n        assert.throws(callSubject, 'property was undefined');\n\n        // Boolean\n        properties.set('options', false);\n\n        assert.throws(callSubject, 'property was a Boolean');\n\n        // Number\n        properties.set('options', 132);\n\n        assert.throws(callSubject, 'property was a Number');\n\n        // Function\n        properties.set('options', function () {});\n\n        assert.throws(callSubject, 'property was a Function');\n\n        // Object\n        properties.set('options', {});\n\n        assert.ok(callSubject(), 'property was an Object');\n    });\n\n    ember_qunit.test('\"Series\" property needs to be an array', function (assert) {\n        var _this2 = this;\n\n        var properties = Ember['default'].Object.create({\n            options: testOptions\n        });\n\n        var callSubject = function callSubject() {\n            return _this2.subject(properties);\n        };\n\n        // null\n        properties.set('series', null);\n\n        assert.throws(callSubject, 'property was null');\n\n        // String\n        properties.set('series', 'test string');\n\n        assert.throws(callSubject, 'property was a String');\n\n        // undefined\n        properties.set('series', undefined);\n\n        assert.throws(callSubject, 'property was undefined');\n\n        // Boolean\n        properties.set('series', false);\n\n        assert.throws(callSubject, 'property was a Boolean');\n\n        // Number\n        properties.set('series', 132);\n\n        assert.throws(callSubject, 'property was a Number');\n\n        // Function\n        properties.set('series', function () {});\n\n        assert.throws(callSubject, 'property was a Function');\n\n        // Object\n        properties.set('series', {});\n\n        assert.throws(callSubject, 'property was an Object');\n\n        // Array\n        properties.set('series', []);\n\n        assert.ok(callSubject(), 'property was an Array');\n    });\n\n    ember_qunit.test('setupChart initializes chart and updates data upon render', function (assert) {\n        var spyHighcharts = sinon['default'].spy(Ember['default'].$.fn, 'highcharts');\n\n        var component = this.subject({\n            options: testOptions,\n            series: testSeries,\n            updateData: function updateData() {\n                return;\n            }\n        });\n\n        var setupSpy = sinon['default'].spy(component, 'setupChart');\n        var updateSpy = sinon['default'].spy(component, 'updateData');\n\n        assert.strictEqual(component.get('chart'), null, 'Chart is null upon initilization');\n\n        this.render();\n\n        assert.ok(setupSpy.calledOnce, 'setupChart was called once upon render');\n\n        assert.ok(updateSpy.calledOnce, 'updateData was called once upon render');\n\n        assert.ok(spyHighcharts.calledTwice, 'highcharts was called twice upon render');\n\n        assert.ok(spyHighcharts.calledWithExactly(component.get('highchartsOptions')), 'highcharts was called once with options');\n\n        assert.ok(spyHighcharts.calledWithExactly(), 'highcharts was called once with no parameters');\n    });\n\n    ember_qunit.test('highchartsOptions returns expected options', function (assert) {\n        var component = this.subject({\n            options: testOptions,\n            series: testSeries\n        });\n        var chartStyle = {\n            fontFamily: '\"Benton Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n            fontSize: '13px'\n        };\n        var options = Ember['default'].$.extend(true, {\n            chart: {\n                animation: false,\n                backgroundColor: 'rgba(255, 255, 255, 0)',\n                style: chartStyle\n            },\n            title: null,\n            colors: ['#298fce', '#94302e', '#00a14b', '#f29c1e', '#fadb00', '#34495d'],\n            credits: {\n                enabled: false\n            },\n            legend: {\n                itemStyle: chartStyle\n            },\n            plotOptions: {\n                bar: {\n                    borderColor: 'transparent'\n                },\n                series: {\n                    animation: false\n                }\n            },\n            tooltip: {\n                animation: false,\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                borderWidth: 0,\n                shadow: false,\n                style: {\n                    color: '#fff'\n                }\n            },\n            xAxis: {\n                labels: {\n                    style: chartStyle\n                }\n            },\n            yAxis: {\n                labels: {\n                    style: chartStyle\n                }\n            }\n        }, component.get('options') || {});\n\n        assert.deepEqual(options, component.get('highchartsOptions'), 'highchartsOptions returns expected options');\n    });\n\n    ember_qunit.test('Observer keys are correct', function (assert) {\n        var component = this.subject({\n            options: testOptions,\n            series: testSeries\n        });\n\n        var updateDataKeys = ['series'];\n\n        assert.deepEqual(component.updateData.__ember_observes__, updateDataKeys, 'Observer keys are correct for updateData()');\n\n        var setHeightKeys = ['height'];\n\n        assert.deepEqual(component.setHeight.__ember_observes__, setHeightKeys, 'Observer keys are correct for setHeight()');\n\n        var setWidthKeys = ['width'];\n\n        assert.deepEqual(component.setWidth.__ember_observes__, setWidthKeys, 'Observer keys are correct for setWidth()');\n    });\n\n});","define('dummy/tests/unit/components/sl-chart-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-chart-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-chart-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-checkbox-test', ['ember-qunit', 'sl-ember-components/mixins/sl-input-based', 'sl-ember-components/mixins/sl-tooltip-enabled'], function (ember_qunit, InputBasedMixin, TooltipEnabledMixin) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-checkbox', 'Unit | Component | sl checkbox', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(InputBasedMixin['default'].detect(this.subject()), 'InputBased Mixin is present');\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('checked'), false, '\"checked\" property is false by default');\n\n        assert.strictEqual(component.get('label'), null, '\"label\" property is null by default');\n    });\n\n});","define('dummy/tests/unit/components/sl-checkbox-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-checkbox-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-checkbox-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-date-picker-test', ['ember', 'ember-qunit', 'sl-ember-components/mixins/sl-component-input-id', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sinon'], function (Ember, ember_qunit, ComponentInputId, TooltipEnabled, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-date-picker', 'Unit | Component | sl date picker', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(ComponentInputId['default'].detect(this.subject()), 'sl-component-input-id mixin is present');\n\n        assert.ok(TooltipEnabled['default'].detect(this.subject()), 'sl-tooltip-enabled mixin is present');\n    });\n\n    ember_qunit.test('Default properties are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.equal(component.get('autoclose'), true, '\"autoclose\" default vaue is correct');\n\n        assert.equal(component.get('calendarWeeks'), false, '\"calendarWeeks\" default value is correct');\n\n        assert.equal(component.get('clearBtn'), false, '\"clearBtn\" default value is correct');\n\n        assert.deepEqual(component.get('daysOfWeekDisabled'), [], '\"daysOfWeekDisabled\" default value is correct');\n\n        assert.equal(component.get('disabled'), false, '\"disabled\" default value is correct');\n\n        assert.equal(component.get('endDate'), null, '\"endDate\" default value is correct');\n\n        assert.equal(component.get('forceParse'), true, '\"forceParse\" default value is correct');\n\n        assert.equal(component.get('format'), 'mm/dd/yyyy', '\"forceParse\" default value is correct');\n\n        assert.equal(component.get('helpText'), null, '\"helpText\" default value is correct');\n\n        assert.equal(component.get('inputs'), null, '\"inputs\" default value is correct');\n\n        assert.equal(component.get('keyboardNavigation'), true, '\"keyboardNavigation\" default value is correct');\n\n        assert.equal(component.get('label'), null, '\"label\" default value is correct');\n\n        assert.equal(component.get('language'), 'en', '\"language\" default value is correct');\n\n        assert.equal(component.get('minViewMode'), 'days', '\"minViewMode\" default value is correct');\n\n        assert.equal(component.get('multidate'), false, '\"multidate\" default value is correct');\n\n        assert.equal(component.get('orientation'), 'auto', '\"orientation\" default value is correct');\n\n        assert.equal(component.get('placeholder'), null, '\"placeholder\" default value is correct');\n\n        assert.equal(component.get('startDate'), null, '\"startDate\" default value is correct');\n\n        assert.equal(component.get('startView'), 'month', '\"startView\" default value is correct');\n\n        assert.equal(component.get('todayBtn'), false, '\"todayBtn\" default value is correct');\n\n        assert.equal(component.get('todayHighlight'), false, '\"todayHighlight\" default value is correct');\n\n        assert.equal(component.get('value'), null, '\"value\" default value is correct');\n\n        assert.equal(component.get('weekStart'), 0, '\"weekStart\" default value is correct');\n    });\n\n    ember_qunit.test('Event handlers are registered and unregistered', function (assert) {\n        var spyOn = sinon['default'].spy(Ember['default'].$.fn, 'on');\n        var spyOff = sinon['default'].spy(Ember['default'].$.fn, 'off');\n        var component = this.subject();\n        var input = this.$('input.date-picker');\n\n        var matchElement = sinon['default'].match(function (value) {\n            return value.get(0) === input.get(0);\n        });\n\n        this.render();\n\n        spyOn.reset();\n\n        component.trigger('didInsertElement');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('changeDate')), 'on() was called with namespaced changeDate event');\n\n        assert.ok(spyOn.calledOn(matchElement), 'on() was called on expected input');\n\n        spyOff.reset();\n\n        component.trigger('willClearRender');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('changeDate')), 'off() was called with namespaced changeDate event');\n\n        assert.ok(spyOff.calledOn(matchElement), 'off() was called on expected input');\n\n        Ember['default'].$.fn.on.restore();\n        Ember['default'].$.fn.off.restore();\n    });\n\n    ember_qunit.test('Changing \"autoclose\" to non default value works as expected', function (assert) {\n        var autoclose = false;\n\n        var component = this.subject({\n            autoclose: autoclose\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.autoclose, autoclose);\n    });\n\n    ember_qunit.test('Changing \"calenderWeeks\" to a non default value works as expected', function (assert) {\n        var calendarWeeks = true;\n\n        var component = this.subject({\n            calendarWeeks: calendarWeeks\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.calendarWeeks, calendarWeeks);\n    });\n\n    ember_qunit.test('Changing \"clearBtn\" to a non default value works as expected', function (assert) {\n        var clearBtn = true;\n\n        var component = this.subject({\n            clearBtn: clearBtn\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.clearBtn, clearBtn);\n    });\n\n    ember_qunit.test('Changing \"daysOfWeekDisabled\" to a non default value works as expected', function (assert) {\n        var daysOfWeek = [1, 2, 3];\n\n        var component = this.subject({\n            daysOfWeekDisabled: daysOfWeek\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.daysOfWeekDisabled, daysOfWeek);\n    });\n\n    ember_qunit.test('Changing \"endDate\" to a non default value works as expected', function (assert) {\n        var endDate = window.moment('2015-06-08');\n\n        var component = this.subject({\n            endDate: endDate\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.endDate, endDate);\n    });\n\n    ember_qunit.test('Changing \"forceParse\" to a non default value works as expected', function (assert) {\n        var forceParse = false;\n\n        var component = this.subject({\n            forceParse: forceParse\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.forceParse, forceParse);\n    });\n\n    ember_qunit.test('Changing \"format\" to a non default value works as expected', function (assert) {\n        var format = 'dd/mm/yyyy';\n\n        var component = this.subject({\n            format: format\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.format, format);\n    });\n\n    ember_qunit.test('Changing \"inputs\" to a non default value works as expected', function (assert) {\n        var inputs = [Ember['default'].$('<input />'), Ember['default'].$('<input />')];\n\n        var component = this.subject({\n            inputs: inputs\n        });\n\n        var options = component.get('options');\n\n        assert.deepEqual(options.inputs, inputs);\n    });\n\n    ember_qunit.test('Changing \"keyboardNavigation\" to a non default value works as expected', function (assert) {\n        var keyboardNavigation = false;\n\n        var component = this.subject({\n            keyboardNavigation: keyboardNavigation\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.keyboardNavigation, keyboardNavigation);\n    });\n\n    ember_qunit.test('Changing \"language\" to a non default value works as expected', function (assert) {\n        var language = 'eu';\n\n        var component = this.subject({\n            language: language\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.language, language);\n    });\n\n    ember_qunit.test('Changing \"minViewMode\" to a non default value works as expected', function (assert) {\n        var minViewMode = 'months';\n\n        var component = this.subject({\n            minViewMode: minViewMode\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.minViewMode, minViewMode);\n    });\n\n    ember_qunit.test('Changing \"multidate\" to a non default value works as expected', function (assert) {\n        var multidate = false;\n\n        var component = this.subject({\n            multidate: multidate\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.multidate, multidate);\n    });\n\n    ember_qunit.test('Changing \"orientation\" to a non default value works as expected', function (assert) {\n        var orientation = 'top';\n\n        var component = this.subject({\n            orientation: orientation\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.orientation, orientation);\n    });\n\n    ember_qunit.test('Changing \"startDate\" to a non default value works as expected', function (assert) {\n        var startDate = window.moment('2015-01-01');\n\n        var component = this.subject({\n            startDate: startDate\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.startDate, startDate);\n    });\n\n    ember_qunit.test('Changing \"startView\" to a non default value works as expected', function (assert) {\n        var startView = 'year';\n\n        var component = this.subject({\n            startView: startView\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.startView, startView);\n    });\n\n    ember_qunit.test('Changing \"todayBtn\" to a non default value works as expected', function (assert) {\n        var todayBtn = true;\n\n        var component = this.subject({\n            todayBtn: todayBtn\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.todayBtn, todayBtn);\n    });\n\n    ember_qunit.test('Changing \"todayHighlight\" to a non default value works as expected', function (assert) {\n        var todayHighlight = true;\n\n        var component = this.subject({\n            todayHighlight: todayHighlight\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.todayHighlight, todayHighlight);\n    });\n\n    ember_qunit.test('Changing \"weekStart\" to a non default value works as expected', function (assert) {\n        var weekStart = 1;\n\n        var component = this.subject({\n            weekStart: weekStart\n        });\n\n        var options = component.get('options');\n\n        assert.strictEqual(options.weekStart, weekStart);\n    });\n\n    ember_qunit.test('There are no references to Ember.$, $ or jQuery', function (assert) {\n        var jqueryAliasSpy = sinon['default'].spy(window, '$');\n        var jquerySpy = sinon['default'].spy(window, 'jQuery');\n        var emberJquery = sinon['default'].spy(Ember['default'], '$');\n        var startDate = window.moment('2016-01-01').toDate();\n\n        var component = this.subject();\n\n        this.render();\n\n        Ember['default'].run(function () {\n            component.set('startDate', startDate);\n            component.trigger('willClearRender');\n        });\n\n        var called = jqueryAliasSpy.called || jquerySpy.called || emberJquery.called;\n\n        assert.notOk(called);\n\n        window.$.restore();\n        window.jQuery.restore();\n        Ember['default'].$.restore();\n    });\n\n    ember_qunit.test('Observer keys are correct', function (assert) {\n        var component = this.subject();\n\n        var updateDateRangeKeys = ['endDate', 'startDate'];\n\n        assert.deepEqual(component.updateDateRange.__ember_observes__, updateDateRangeKeys, 'Observer keys are correct for updateDateRange()');\n    });\n\n});","define('dummy/tests/unit/components/sl-date-picker-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-date-picker-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-date-picker-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-date-range-picker-test', ['ember', 'ember-qunit', 'qunit', 'sinon', 'sl-ember-components/mixins/sl-component-input-id'], function (Ember, ember_qunit, qunit, sinon, ComponentInputId) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-date-range-picker', 'Unit | Component | sl date range picker', {\n        needs: ['component:sl-date-picker'],\n\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(ComponentInputId['default'].detect(this.subject()), 'sl-component-input-id mixin is present');\n    });\n\n    ember_qunit.test('Default property values are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('endDateValue'), null, 'endDateValue: null');\n\n        assert.strictEqual(component.get('format'), 'mm/dd/yyyy', 'format: \"mm/dd/yyyy\"');\n\n        assert.strictEqual(component.get('maxDate'), null, 'maxDate: null');\n\n        assert.strictEqual(component.get('minDate'), null, 'minDate: null');\n\n        assert.strictEqual(component.get('startDateValue'), null, 'startDateValue: null');\n    });\n\n    ember_qunit.test('Change focus to end date input upon start date change', function (assert) {\n        var component = this.subject();\n        this.render();\n\n        var daterangeEndDate = component.get('endDateInput');\n        var spy = sinon['default'].spy(daterangeEndDate, 'trigger');\n\n        component.get('startDateInput').trigger('changeDate');\n\n        assert.ok(spy.calledWithExactly('focus'), 'End date input was given focus on start date change');\n\n        $('.datepicker').remove();\n        daterangeEndDate.trigger.restore();\n    });\n\n    ember_qunit.test('Earliest end date is the based on min date and start date', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('earliestEndDate'), null);\n\n        Ember['default'].run(function () {\n            component.set('minDate', '01/01/2001');\n        });\n\n        assert.equal(component.get('earliestEndDate'), '01/01/2001');\n\n        Ember['default'].run(function () {\n            component.set('startDateValue', '01/01/2015');\n        });\n\n        assert.equal(component.get('earliestEndDate'), '01/01/2015');\n    });\n\n    ember_qunit.test('Latest start date is the based on max date and end date', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('latestStartDate'), null);\n\n        Ember['default'].run(function () {\n            component.set('maxDate', '01/01/2029');\n        });\n\n        assert.equal(component.get('latestStartDate'), '01/01/2029');\n\n        Ember['default'].run(function () {\n            component.set('endDateValue', '01/01/2015');\n        });\n\n        assert.equal(component.get('latestStartDate'), '01/01/2015');\n    });\n\n    ember_qunit.test('Events from start date input are removed upon willClearRender', function (assert) {\n        var spyOn = sinon['default'].spy(Ember['default'].$.fn, 'on');\n        var spyOff = sinon['default'].spy(Ember['default'].$.fn, 'off');\n\n        var component = this.subject();\n\n        this.render();\n\n        spyOn.reset();\n\n        component.trigger('didInsertElement');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('changeDate')), 'changeDate bootstrap date picker event bound');\n\n        assert.ok(spyOn.alwaysCalledOn(component.get('startDateInput')), 'changeDate bind was called on startDateInput');\n\n        spyOff.reset();\n\n        component.trigger('willClearRender');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('changeDate')), 'changeDate bootstrap date picker event unbound');\n\n        assert.ok(spyOff.alwaysCalledOn(component.get('startDateInput')), 'changeDate unbind was called on startDateInput');\n\n        Ember['default'].$.fn.on.restore();\n        Ember['default'].$.fn.off.restore();\n    });\n\n    ember_qunit.test('label, startDatePlaceholder, and endDatePlaceholder are undefined by default', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('label'), undefined, 'label is undefined by default');\n\n        assert.strictEqual(component.get('startDatePlaceholder'), undefined, 'startDatePlaceholder is undefined by default');\n\n        assert.strictEqual(component.get('endDatePlaceholder'), undefined, 'endDatePlaceholder is undefined by default');\n    });\n\n    ember_qunit.test('label is accepted as a parameter', function (assert) {\n        var labelText = 'lorem ipsum';\n        var component = this.subject({ label: labelText });\n\n        assert.equal(this.$('label').html(), labelText, 'label element was created with label parameter text');\n\n        assert.equal(this.$('label').prop('for'), component.get('inputId'), 'label element has the correct for property');\n\n        assert.equal(this.$('label').prop('for'), this.$('.sl-daterange-start-date input').prop('id'), 'label is used for start date input');\n    });\n\n    ember_qunit.test('Default format gets passed to child date pickers', function (assert) {\n        var component = this.subject();\n\n        assert.equal(this.$('.sl-daterange-start-date input.date-picker').data().datepicker.o.format, component.get('format'), 'Default format gets passed to start date picker');\n\n        assert.equal(this.$('.sl-daterange-end-date input.date-picker').data().datepicker.o.format, component.get('format'), 'Default format gets passed to end date picker');\n    });\n\n    ember_qunit.test('Format parameter gets passed to child date pickers', function (assert) {\n        var format = 'yyyy/mm/dd';\n\n        this.subject({ format: format });\n\n        assert.equal(this.$('.sl-daterange-start-date input.date-picker').data().datepicker.o.format, format, 'Format parameter gets passed to start date picker');\n\n        assert.equal(this.$('.sl-daterange-end-date input.date-picker').data().datepicker.o.format, format, 'Format parameter gets passed to end date picker');\n    });\n\n    // @todo This needs to be updated when upgrading to 1.13 to spy on the child\n    // sl-date-pickers rather than directly accessing bootstrap-datepicker values\n    ember_qunit.test('Date pickers have unbound start and end dates by default', function (assert) {\n        this.subject();\n\n        assert.equal(this.$('.sl-daterange-start-date input.date-picker').data().datepicker.o.startDate, -Infinity, 'Start date picker start date is unboundt');\n\n        assert.equal(this.$('.sl-daterange-start-date input.date-picker').data().datepicker.o.endDate, Infinity, 'Start date picker end date is unbound');\n\n        assert.equal(this.$('.sl-daterange-end-date input.date-picker').data().datepicker.o.startDate, -Infinity, 'End date picker start date is unbound');\n\n        assert.equal(this.$('.sl-daterange-end-date input.date-picker').data().datepicker.o.endDate, Infinity, 'End date picker end date is unbound');\n    });\n\n    qunit.skip('Date pickers respects minDate', function () {\n        // waiting for 1.13 for a way to mock and spy on child components\n    });\n\n    qunit.skip('Date pickers respects maxDate', function () {\n        // waiting for 1.13 for a way to mock and spy on child components\n    });\n\n    qunit.skip('End date picker respects startDateValue over minDate due to earliestEndDate', function () {\n        // waiting for 1.13 for a way to mock and spy on child components\n    });\n\n    qunit.skip('Start date picker respects endDateValue over maxDate due to latestStartDate', function () {\n        // waiting for 1.13 for a way to mock and spy on child components\n    });\n\n});","define('dummy/tests/unit/components/sl-date-range-picker-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-date-range-picker-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-date-range-picker-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-date-time-test', ['ember', 'ember-qunit', 'sl-ember-components/mixins/sl-tooltip-enabled'], function (Ember, ember_qunit, TooltipEnabledMixin) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-date-time', 'Unit | Component | sl date time', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject({ timezone: 'America/Chicago' })), 'TooltipEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        this.subject({ timezone: 'America/Chicago' });\n\n        assert.ok(this.$().hasClass('sl-datetime'), 'Default rendered component has class \"sl-datetime\"');\n    });\n\n    ember_qunit.test('Attribute \"datetime\" is properly set', function (assert) {\n        this.subject({\n            timezone: 'America/Chicago',\n            value: new Date(2015, 0, 1)\n        });\n\n        assert.equal(this.$().attr('datetime'), '2015-01-01 00:00 CST', '\"datetime\" attribute is expected value');\n    });\n\n    ember_qunit.test('Format \"date\" results in correctly formatted value', function (assert) {\n        var component = this.subject({\n            format: 'date',\n            timezone: 'America/Chicago',\n            value: new Date(2015, 0, 1)\n        });\n\n        var formattedValue = '2015-01-01';\n\n        assert.equal(component.get('formattedValue'), formattedValue, '\"date\" formatted date is expected value');\n\n        assert.equal(Ember['default'].$.trim(this.$().text()), formattedValue, 'Rendered component text is expected formatted value');\n    });\n\n    ember_qunit.test('Format \"relative\" results in correctly formatted value', function (assert) {\n        var component = this.subject({\n            format: 'relative',\n            timezone: 'America/Chicago',\n            value: window.moment().subtract(1, 'year')\n        });\n\n        var formattedValue = 'a year ago';\n\n        assert.equal(component.get('formattedValue'), formattedValue, '\"relative\" formatted date is expected value');\n\n        assert.equal(Ember['default'].$.trim(this.$().text()), formattedValue, 'Rendered component text is expected formatted value');\n    });\n\n    ember_qunit.test('Format \"datetime\" results in correctly formatted value', function (assert) {\n        var component = this.subject({\n            format: 'datetime',\n            timezone: 'America/Chicago',\n            value: new Date(2015, 0, 1)\n        });\n\n        var formattedValue = 'Thursday, January 1st 2015, 12:00 AM CST';\n\n        assert.equal(component.get('formattedValue'), formattedValue, '\"datetime\" formatted date is expected value');\n\n        assert.equal(Ember['default'].$.trim(this.$().text()), formattedValue, 'Rendered component text is expected formatted value');\n    });\n\n    ember_qunit.test('Computed momentValue is set and updated correctly', function (assert) {\n        var component = this.subject({\n            timezone: 'America/Chicago',\n            value: new Date(2015, 0, 1)\n        });\n\n        assert.equal(component.get('momentValue').calendar(), '01/01/2015', 'Initial momentValue is expected value');\n\n        Ember['default'].run(function () {\n            component.set('value', new Date(2015, 1, 15));\n        });\n        assert.equal(component.get('momentValue').calendar(), '02/15/2015', 'Updated momentValue is expected value');\n    });\n\n    ember_qunit.test('Computed timezoneString is set and updated correctly', function (assert) {\n        var component = this.subject({\n            timezone: 'America/Chicago',\n            value: new Date(2015, 0, 1)\n        });\n\n        assert.equal(component.get('timezoneString'), 'CST', 'Initial timezoneString is expected value');\n\n        Ember['default'].run(function () {\n            component.set('timezone', 'America/Los_Angeles');\n        });\n\n        assert.equal(component.get('timezoneString'), 'PST', 'Updated timezoneString is expected value');\n    });\n\n    ember_qunit.test('\"title\" property is an alias to \"datetime\" value', function (assert) {\n        var component = this.subject({ timezone: 'America/Chicago' });\n\n        assert.equal(component.get('title'), component.get('datetime'), '\"title\" property is aliased to \"datetime\" property');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject({ timezone: 'America/Chicago' });\n\n        var datetimeDependentKeys = ['timezoneString', 'value'];\n\n        var formattedValueDependentKeys = ['format', 'momentValue'];\n\n        var momentValueDependentKeys = ['value'];\n\n        var timezoneStringDependentKeys = ['timezone', 'momentValue'];\n\n        assert.deepEqual(component.datetime._dependentKeys, datetimeDependentKeys, 'Dependent keys are correct for datetime()');\n\n        assert.deepEqual(component.formattedValue._dependentKeys, formattedValueDependentKeys, 'Dependent keys are correct for formattedValue()');\n\n        assert.deepEqual(component.momentValue._dependentKeys, momentValueDependentKeys, 'Dependent keys are correct for momentValue()');\n\n        assert.deepEqual(component.timezoneString._dependentKeys, timezoneStringDependentKeys, 'Dependent keys are correct for timezoneString()');\n    });\n\n    ember_qunit.test('init() - \"timezone\" property needs to be a string', function (assert) {\n        var _this = this;\n\n        var properties = Ember['default'].Object.create();\n\n        var callSubject = function callSubject() {\n            return _this.subject(properties);\n        };\n\n        // Empty Property\n\n        assert.throws(callSubject, 'Property was empty');\n\n        // Null Property\n\n        properties.set('timezone', null);\n\n        assert.throws(callSubject, 'Property was null');\n\n        // Number Property\n\n        properties.set('timezone', 3);\n\n        assert.throws(callSubject, 'Property was a number');\n\n        // Boolean Property\n\n        properties.set('timezone', true);\n\n        assert.throws(callSubject, 'Property was a boolean');\n\n        // Array Property\n\n        properties.set('timezone', []);\n\n        assert.throws(callSubject, 'Property was an array');\n\n        // Function Property\n\n        properties.set('timezone', function () {});\n\n        assert.throws(callSubject, 'Property was a function');\n\n        // Object Property\n\n        properties.set('timezone', {});\n\n        assert.throws(callSubject, 'Property was an object');\n\n        // Undefined Property\n\n        properties.set('timezone', undefined);\n\n        assert.throws(callSubject, 'Property was undefined');\n\n        // String Property\n\n        properties.set('timezone', 'America/Chicago');\n\n        assert.ok(callSubject(), 'Property was a string');\n    });\n\n    ember_qunit.test('init() - \"timezone\" property needs to be valid', function (assert) {\n        var _this2 = this;\n\n        var properties = Ember['default'].Object.create();\n\n        var callSubject = function callSubject() {\n            return _this2.subject(properties);\n        };\n\n        // non-valid timezone property\n        properties.set('timezone', 'HammerTime/MiddleEarth');\n\n        assert.throws(callSubject, 'timezone property is not valid');\n\n        // valid timezone property\n        properties.set('timezone', 'America/Chicago');\n\n        assert.ok(callSubject(), 'timezone property is valid');\n    });\n\n});","define('dummy/tests/unit/components/sl-date-time-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-date-time-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-date-time-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-drop-button-test', ['ember', 'ember-qunit', 'sl-ember-components/components/sl-drop-button', 'sl-ember-components/components/sl-button'], function (Ember, ember_qunit, sl_drop_button, sl_button) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-drop-button', 'Unit | Component | sl drop button', {\n        needs: ['component:sl-button'],\n\n        unit: true\n    });\n\n    ember_qunit.test('Default properties are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('title'), null, '\"title\" default value is correct');\n\n        assert.strictEqual(component.get('dataTrigger'), null, '\"dataTrigger\" default value is correct');\n\n        assert.strictEqual(component.get('align'), sl_drop_button.Align.LEFT, '\"align\" default value is correct');\n\n        assert.strictEqual(component.get('content'), null, '\"content\" default value is correct');\n\n        assert.strictEqual(component.get('iconClass'), 'caret', '\"iconClass\" default value is correct');\n\n        assert.strictEqual(component.get('label'), null, '\"label\" default value is correct');\n\n        assert.strictEqual(component.get('size'), sl_button.Size.MEDIUM, '\"size\" default value is correct');\n\n        assert.strictEqual(component.get('theme'), sl_button.Theme.DEFAULT, '\"theme\" default value is correct');\n\n        var Align = {\n            LEFT: 'left',\n            RIGHT: 'right'\n        };\n\n        assert.deepEqual(sl_drop_button.Align, Align, '\"align\" enum values are correct');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var rightAlignedDependentKeys = ['align'];\n\n        var themeClassDependentKeys = ['theme'];\n\n        assert.deepEqual(component.rightAligned._dependentKeys, rightAlignedDependentKeys, 'Dependent keys are correct for rightAligned()');\n\n        assert.deepEqual(component.themeClass._dependentKeys, themeClassDependentKeys, 'Dependent keys are correct for themeClass()');\n    });\n\n    ember_qunit.test('themeClass() returns expected interpolated string', function (assert) {\n        var component = this.subject({ theme: 'hover' });\n\n        assert.strictEqual(component.get('themeClass'), 'dropdown-hover', 'themeClass() returns expected string');\n\n        Ember['default'].run(function () {\n            component.set('theme', 'invalidTheme');\n        });\n\n        assert.strictEqual(component.get('themeClass'), null, 'themeClass() returns null upon invalid \"theme\" property');\n    });\n\n    ember_qunit.test('rightAligned() returns expected boolean based on right and left alignment', function (assert) {\n        var component = this.subject({ align: 'right' });\n\n        assert.strictEqual(component.get('rightAligned'), true, 'rightAligned() returns expected boolean');\n\n        Ember['default'].run(function () {\n            component.set('align', 'left');\n        });\n\n        assert.strictEqual(component.get('rightAligned'), false, 'rightAligned() returns expected boolean');\n    });\n\n});","define('dummy/tests/unit/components/sl-drop-button-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-drop-button-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-drop-button-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-drop-option-test', ['ember', 'sinon', 'ember-qunit'], function (Ember, sinon, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-drop-option', 'Unit | Component | sl drop option', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('data'), null, '\"Data\" property defaults to null');\n\n        assert.strictEqual(component.get('actionContext'), null, '\"Actioncontext\" property defaults to null');\n\n        assert.strictEqual(component.get('tagName'), 'li', '\"tagName\" property defaults to li');\n    });\n\n    ember_qunit.test('optionType function returns expected values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('optionType'), 'divider', '\"optionType\" defaults to \"divider\" if label isnt set');\n\n        Ember['default'].run(function () {\n            component.set('label', '');\n        });\n\n        assert.strictEqual(component.get('optionType'), 'divider', '\"optionType\" returns \"divider\" if label is false');\n\n        Ember['default'].run(function () {\n            component.set('label', 'testLabel');\n        });\n\n        assert.strictEqual(component.get('optionType'), 'presentation', '\"optionType\" returns \"presentation\" if label is true');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var optionTypeDependentKeys = ['label'];\n\n        assert.deepEqual(component.optionType._dependentKeys, optionTypeDependentKeys, 'Dependent keys are correct for optionType()');\n    });\n\n    ember_qunit.test('Click triggers bound action with correct arguments', function (assert) {\n        var testDataObject = {\n            testProp: 'testValue'\n        };\n\n        var testActionSpy = sinon['default'].spy();\n\n        this.subject({\n            action: 'testAction',\n            actionContext: 'testActionContext',\n            data: testDataObject,\n            label: 'Test',\n            targetObject: {\n                testAction: testActionSpy\n            }\n        });\n\n        this.$('a').trigger('click');\n\n        // spy.calledWith() does a deepEquals on objects\n        assert.ok(testActionSpy.calledWith(testDataObject, 'testActionContext'), 'Test action fired correctly with the correct arguments');\n    });\n\n});","define('dummy/tests/unit/components/sl-drop-option-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-drop-option-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-drop-option-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-grid-cell-test', ['ember', 'ember-qunit', 'sl-ember-components/components/sl-grid-cell', 'sl-ember-components/utils/all', 'sinon'], function (Ember, ember_qunit, sl_grid_cell, utils, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-grid-cell', 'Unit | Component | sl grid cell', {\n        unit: true\n    });\n\n    var ColumnAlign = Object.freeze({\n        LEFT: 'left',\n        RIGHT: 'right'\n    });\n\n    var ColumnSize = Object.freeze({\n        LARGE: 'large',\n        MEDIUM: 'medium',\n        SMALL: 'small'\n    });\n\n    var defaultColumn = Ember['default'].Object.extend();\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'td', 'tagName is td');\n\n        assert.strictEqual(component.get('column'), null, 'column is null');\n\n        assert.strictEqual(component.get('row'), null, 'row is null');\n\n        assert.deepEqual(sl_grid_cell.ColumnSize, ColumnSize, 'Column size enum has correct values');\n\n        assert.deepEqual(sl_grid_cell.ColumnAlign, ColumnAlign, 'Column align enum has correct values');\n    });\n\n    ember_qunit.test('alignmentClass() returns correct alignment value', function (assert) {\n        var column = defaultColumn.create();\n        var component = this.subject({\n            column: column\n        });\n\n        assert.strictEqual(component.get('alignmentClass'), null, 'alignment value is null when \"align\" property is not set on row');\n\n        column.set('align', sl_grid_cell.ColumnAlign.RIGHT);\n\n        assert.strictEqual(component.get('alignmentClass'), 'text-right', 'text-right is returned when alignment is set to right');\n\n        column.set('align', sl_grid_cell.ColumnAlign.LEFT);\n\n        assert.strictEqual(component.get('alignmentClass'), null, 'null is returned when alignment is set to left');\n\n        var spy = sinon['default'].spy(utils, 'warn');\n        column.set('align', 'invalidValue');\n\n        assert.strictEqual(component.get('alignmentClass'), null, 'null was returned when invalid alignment value provided');\n\n        assert.ok(spy.called, 'warn was called when invalid value provided');\n\n        utils.warn.restore();\n    });\n\n    ember_qunit.test('sizeClass() returns correct size value', function (assert) {\n        var column = defaultColumn.create();\n        var component = this.subject({\n            column: column\n        });\n\n        assert.strictEqual(component.get('sizeClass'), null, 'size value is null when \"size\" property is not set on column');\n\n        for (var size in sl_grid_cell.ColumnSize) {\n            var sizeValue = sl_grid_cell.ColumnSize[size];\n            column.set('size', sizeValue);\n\n            assert.strictEqual(component.get('sizeClass'), 'column-' + sizeValue, 'Setting a size of ' + sizeValue + ' returns column-' + sizeValue);\n        }\n\n        var spy = sinon['default'].spy(utils, 'warn');\n        column.set('size', 'invalidValue');\n\n        assert.strictEqual(component.get('sizeClass'), 'column-invalidValue', 'size value is \"column-invalidValue\" when \"size\" property is set to an invalid value');\n\n        assert.ok(spy.called, 'warn was called when invalid value provided');\n\n        utils.warn.restore();\n    });\n\n    ember_qunit.test('style() returns the correct value', function (assert) {\n        var column = defaultColumn.create();\n        var component = this.subject({\n            column: column\n        });\n\n        assert.strictEqual(component.get('style').string, '', 'style() is an empty string when column size is not set');\n\n        column.set('size', 100);\n\n        assert.strictEqual(component.get('style').string, 'width: 100px;', 'style() returns a correct style value when a number is set');\n\n        column.set('size', 'notNumber');\n\n        assert.strictEqual(component.get('style').string, '', 'style() returns an empty string when size is not a number');\n    });\n\n    ember_qunit.test('contentValue() returns the correct value', function (assert) {\n        var column = defaultColumn.create({\n            valuePath: 'name'\n        });\n\n        var row = Ember['default'].Object.extend().create({\n            name: 'test'\n        });\n\n        var component = this.subject({\n            column: column,\n            row: row\n        });\n\n        assert.strictEqual(component.get('contentValue'), row.name, 'contentValue() returned correct result for row');\n\n        row = Ember['default'].Object.extend().create({\n            model: {\n                name: 'anotherTest'\n            }\n        });\n\n        Ember['default'].run(function () {\n            component.set('row', row);\n        });\n\n        assert.strictEqual(component.get('contentValue'), row.get('model.name'), 'contentValue() returns model data when row model is set');\n    });\n\n    ember_qunit.test('Click event action is supported', function (assert) {\n        var defaultColumn = { valuePath: 'value' };\n        var defaultRow = { value: 'Test' };\n\n        this.subject({\n            column: defaultColumn,\n            onClick: 'test',\n            row: defaultRow,\n\n            targetObject: {\n                test: function test(row) {\n                    assert.equal(row, defaultRow, 'Click event sent expected value');\n                }\n            }\n        });\n\n        this.$().trigger('click');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var alignmentClassDependentKeys = ['column.align'];\n\n        var contentValueDependentKeys = ['column', 'row'];\n\n        var sizeClassDependentKeys = ['column.size'];\n\n        assert.deepEqual(component.alignmentClass._dependentKeys, alignmentClassDependentKeys, 'Dependent keys are correct for alignmentClass()');\n\n        assert.deepEqual(component.contentValue._dependentKeys, contentValueDependentKeys, 'Dependent keys are correct for contentValue()');\n\n        assert.deepEqual(component.sizeClass._dependentKeys, sizeClassDependentKeys, 'Dependent keys are correct for sizeClass()');\n    });\n\n});","define('dummy/tests/unit/components/sl-grid-cell-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-grid-cell-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-grid-cell-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-grid-column-header-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-grid-column-header', 'Unit | Component | sl grid column header', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'th', 'Tag name is th');\n\n        assert.strictEqual(component.get('column'), null, 'column is null');\n    });\n\n    ember_qunit.test('sortedClass() returns the correct value', function (assert) {\n        var column = Ember['default'].Object.extend().create({\n            sortable: true\n        });\n\n        var component = this.subject({\n            column: column\n        });\n\n        assert.strictEqual(component.get('sortedClass'), null, 'sortedClass returns null when sortAscending is not set ');\n\n        column.set('sortAscending', true);\n\n        assert.strictEqual(component.get('sortedClass'), 'column-ascending', 'sortedClass returns column-ascending');\n\n        column.set('sortAscending', false);\n\n        assert.strictEqual(component.get('sortedClass'), 'column-descending', 'sortedClass returns column-descending');\n    });\n\n    ember_qunit.test('sortedIconClass() returns the correct value', function (assert) {\n        var column = Ember['default'].Object.extend().create({\n            sortable: true\n        });\n\n        var component = this.subject({\n            column: column\n        });\n\n        assert.strictEqual(component.get('sortIconClass'), 'fa-sort', 'sortIconClass returns fa-sort when sortAscending is set to true');\n\n        column.set('sortAscending', true);\n\n        assert.strictEqual(component.get('sortIconClass'), 'fa-sort-asc', 'sortIconClass returns column-asc');\n\n        column.set('sortAscending', false);\n\n        assert.strictEqual(component.get('sortIconClass'), 'fa-sort-desc', 'sortIconClass returns column-desc');\n    });\n\n    ember_qunit.test('Click event returns column with sortable column', function (assert) {\n        assert.expect(2);\n\n        var column = {};\n        var targetObject = {\n            test: function test() {\n                assert.ok(false, 'Bound click action was fired without a valid sortable column');\n            }\n        };\n\n        this.subject({\n            column: column,\n            onClick: 'test',\n            targetObject: targetObject\n        });\n\n        // This click should not cause the initial assertion to run\n        this.$().trigger('click');\n\n        Ember['default'].run(function () {\n            Ember['default'].set(column, 'sortable', true);\n\n            targetObject.test = function (passedColumn) {\n                assert.ok(true, 'onClick action handler was called');\n\n                assert.deepEqual(passedColumn, column, 'onClick passed expected column definition');\n            };\n        });\n\n        this.$().trigger('click');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var sortedClassDependentKeys = ['column.sortAscending', 'column.sortable'];\n\n        var sortIconClassDependentKeys = ['column.sortAscending', 'column.sortable'];\n\n        assert.deepEqual(component.sortedClass._dependentKeys, sortedClassDependentKeys);\n\n        assert.deepEqual(component.sortIconClass._dependentKeys, sortIconClassDependentKeys);\n    });\n\n});","define('dummy/tests/unit/components/sl-grid-column-header-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-grid-column-header-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-grid-column-header-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-grid-row-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-grid-row', 'Unit | Component | sl grid row', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'tr', 'tagName is tr');\n\n        assert.strictEqual(component.get('row'), null, 'row is null');\n    });\n\n    ember_qunit.test('Click event triggers rowClick action with row record', function (assert) {\n        var row = { testValue: true };\n\n        this.subject({\n            row: row,\n            rowClick: 'test',\n\n            targetObject: {\n                test: function test(passedRow) {\n                    assert.equal(passedRow, row, 'Row record passed from rowClick is expected value');\n                }\n            }\n        });\n\n        this.$().trigger('click');\n    });\n\n});","define('dummy/tests/unit/components/sl-grid-row-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-grid-row-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-grid-row-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-grid-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    var columns = Ember['default'].A([{ title: 'Name', valuePath: 'name' }, { title: 'ID', valuePath: 'id' }]);\n\n    var content = Ember['default'].A([{ id: 4, name: 'Alice' }, { id: 8, name: 'Bob' }, { id: 15, name: 'Charlie' }]);\n\n    ember_qunit.moduleForComponent('sl-grid', 'Unit | Component | sl grid', {\n        needs: ['component:sl-button', 'component:sl-drop-button', 'component:sl-drop-option', 'component:sl-grid-cell', 'component:sl-grid-column-header', 'component:sl-grid-row', 'component:sl-pagination'],\n\n        unit: true\n    });\n\n    ember_qunit.test('Default values are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('actionsButtonLabel'), 'Actions', 'actionsButtonLabel is set to \"Actions\"');\n\n        assert.strictEqual(component.get('activeRecord'), null, 'activeRecord is set to null');\n\n        assert.deepEqual(component.get('columns'), [], 'columns is set to an empty array');\n\n        assert.strictEqual(component.get('content'), null, 'content is set to null');\n\n        assert.strictEqual(component.get('continuous'), false, 'continuous is set to false');\n\n        assert.strictEqual(component.get('currentPage'), 1, 'currentPage is set to 1');\n\n        assert.strictEqual(component.get('detailComponent'), null, 'detailComponent is set to null');\n\n        assert.strictEqual(component.get('detailFooterComponent'), null, 'detailFooterComponent is set to null');\n\n        assert.strictEqual(component.get('detailHeaderComponent'), null, 'detailHeaderComponent is set to null');\n\n        assert.strictEqual(component.get('detailPaneOpen'), false, 'detailPaneOpen is false');\n\n        assert.strictEqual(component.get('filterButtonLabel'), 'Filter', 'filterButtonLabel is \"Filter\"');\n\n        assert.strictEqual(component.get('filterPaneOpen'), false, 'filterPaneOpen is false');\n\n        assert.strictEqual(component.get('filterComponent'), null, 'filterComponent is null');\n\n        assert.strictEqual(component.get('footerPath'), null, 'footerPath is null');\n\n        assert.strictEqual(component.get('height'), 'auto', 'height is \"auto\"');\n\n        assert.strictEqual(component.get('loading'), false, 'loading is false');\n\n        assert.strictEqual(component.get('nextPageScrollPoint'), 0, 'nextPageScrollPoint is 0');\n\n        assert.strictEqual(component.get('pageSize'), 25, 'pageSize is 25');\n\n        assert.strictEqual(component.get('rowActions'), null, 'rowActions is null');\n\n        assert.strictEqual(component.get('rowClick'), null, 'rowClick is null');\n\n        assert.strictEqual(component.get('sortAscending'), true, 'sortAscending is true');\n\n        assert.strictEqual(component.get('sortedColumnTitle'), null, 'sortedColumnTitle is null');\n    });\n\n    ember_qunit.test('changePage() triggers requestData action with correct arguments', function (assert) {\n        var spy = sinon['default'].spy();\n        var pageSize = 10;\n\n        var component = this.subject({\n            pageSize: pageSize,\n            requestData: 'requestData',\n            targetObject: {\n                requestData: spy\n            }\n        });\n\n        this.render();\n\n        Ember['default'].run(function () {\n            component.send('changePage', 1);\n        });\n\n        assert.ok(spy.calledWith(pageSize, 0));\n\n        assert.strictEqual(component.get('loading'), true, 'Loading is set to true');\n\n        spy.reset();\n\n        Ember['default'].run(function () {\n            component.send('changePage', 1);\n        });\n\n        assert.ok(spy.notCalled, 'Action is not fired if component is in loading state');\n\n        spy.reset();\n\n        Ember['default'].run(function () {\n            component.set('loading', false);\n            component.send('changePage', 2);\n        });\n\n        assert.ok(spy.calledWith(pageSize, 10));\n    });\n\n    ember_qunit.test('openDetailPane() updates component state', function (assert) {\n        var row = { title: 'Name', valuePath: 'name', active: false };\n        var activeRecord = { title: 'Id', valuePath: 'id', active: true };\n        var updateHeightSpy = sinon['default'].spy();\n\n        var component = this.subject({\n            activeRecord: activeRecord,\n            updateHeight: updateHeightSpy\n        });\n\n        Ember['default'].run(function () {\n            component.send('openDetailPane', row);\n        });\n\n        assert.strictEqual(activeRecord.active, false, 'Active flag on previously active record was set to false');\n\n        assert.strictEqual(row.active, true, 'Active flag on row was set to true');\n\n        assert.deepEqual(component.get('activeRecord'), row, 'Active record was set to passed in row');\n\n        assert.strictEqual(component.get('detailPaneOpen'), true, 'detailPaneOpen is set to true');\n\n        assert.ok(updateHeightSpy.calledOnce, true, 'Update height was called');\n    });\n\n    ember_qunit.test('rowClick() fires rowClick action', function (assert) {\n        var rowClickSpy = sinon['default'].spy();\n        var row = { title: 'Name', valuePath: 'name', active: false };\n\n        var component = this.subject({\n            rowClick: 'rowClick',\n            targetObject: {\n                rowClick: rowClickSpy\n            }\n        });\n\n        component.send('rowClick', row);\n\n        assert.ok(rowClickSpy.calledWith(row), 'rowClick action was fired with correct row data');\n    });\n\n    ember_qunit.test('closeDetailPane() updates component state', function (assert) {\n        var activeRecord = { 'active': true };\n        var updateHeightSpy = sinon['default'].spy();\n\n        var component = this.subject({\n            activeRecord: activeRecord,\n            updateHeight: updateHeightSpy\n        });\n\n        Ember['default'].run(function () {\n            component.send('closeDetailPane');\n        });\n\n        assert.strictEqual(activeRecord.active, false, 'Active record key \"active\" was set to false');\n\n        assert.strictEqual(component.get('activeRecord'), null, 'Active record was set to null');\n\n        assert.strictEqual(component.get('detailPaneOpen'), false, 'detailPaneOpen was set to false');\n\n        assert.ok(updateHeightSpy.calledOnce, 'Update height was called');\n    });\n\n    ember_qunit.test('showPagination() returns correct value', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('showPagination'), false, 'showPagination is false when continuous is false and totalPages is 0');\n\n        component.set('totalPages', 2);\n\n        assert.strictEqual(component.get('showPagination'), true, 'showPagination is true when continuous is false and totalPages is more than one');\n\n        component.set('continuous', true);\n\n        assert.strictEqual(component.get('showPagination'), false, 'showPagination is false when continuous is true and totalPages is more than one');\n\n        component.set('totalPages', 0);\n\n        assert.strictEqual(component.get('showPagination'), false, 'showPagination is false when continuous is true and totalPages is 0');\n    });\n\n    ember_qunit.test('sortedColumns() returns the correct column', function (assert) {\n        var component = this.subject({\n            sortedColumnTitle: null,\n            columns: columns\n        });\n\n        assert.strictEqual(component.get('sortedColumn'), null, 'null is returned when sortedColumnTitle is null');\n\n        component.set('sortedColumnTitle', 'Gender');\n\n        assert.strictEqual(component.get('sortedColumn'), null, 'null is returned when title provided is not present within the columns');\n\n        component.set('sortedColumnTitle', 'Name');\n\n        assert.deepEqual(component.get('sortedColumn'), columns.findBy('title', 'Name'), 'Column returned is the correct column');\n    });\n\n    ember_qunit.test('totalPages() returns the correct value', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('totalPages'), null, 'totalPages is null when continuous is false, totalCount is 0 and pageSize is 0');\n\n        var totalCount = 99;\n        var pageSize = 10;\n\n        Ember['default'].run(function () {\n            component.set('totalCount', totalCount);\n            component.set('pageSize', pageSize);\n        });\n\n        assert.strictEqual(10, component.get('totalPages'), 'Total pages is computed as 10');\n    });\n\n    ember_qunit.test('handleNewContent() unsets loading state when content data changes', function (assert) {\n        var content = Ember['default'].A();\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            loading: true\n        });\n\n        this.render();\n\n        assert.ok(component.get('loading'), 'Initial loading is true');\n\n        Ember['default'].run(function () {\n            content.pushObject({\n                id: 1,\n                name: 'Danielle'\n            });\n        });\n\n        assert.equal(component.get('loading'), false, 'Component is not in loading state after content update');\n    });\n\n    ember_qunit.test('handleNewContent() unbinds scroll event when there is no more data to request', function (assert) {\n        var content = Ember['default'].A();\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            hasMoreData: false\n        });\n\n        this.render();\n\n        var spy = sinon['default'].spy(Ember['default'].$.fn, 'off');\n\n        Ember['default'].run(function () {\n            content.pushObject({\n                id: 1,\n                name: 'Danielle'\n            });\n        });\n\n        assert.ok(spy.calledWith(component.namespaceEvent('scroll')), 'off was called with scroll');\n\n        Ember['default'].$.fn.off.restore();\n    });\n\n    ember_qunit.test('setupAutoHeight() - updateHeight() is called on window resize when height is not specified', function (assert) {\n        var spy = sinon['default'].spy();\n\n        this.subject({\n            columns: columns,\n            content: content,\n            updateHeight: spy\n        });\n\n        this.render();\n\n        spy.reset();\n\n        Ember['default'].$(window).trigger('resize');\n\n        assert.ok(spy.calledOnce, 'updateHeight was called on resize of window');\n    });\n\n    ember_qunit.test('setupContinuousPaging() enables continuous paging', function (assert) {\n        var spy = sinon['default'].spy();\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            continuous: true,\n            hasMoreData: true,\n            enableContinuousPaging: spy\n        });\n\n        this.render();\n\n        spy.reset();\n\n        component.setupContinuousPaging();\n\n        assert.ok(spy.calledOnce, 'enableContinuousPaging was called');\n\n        spy.reset();\n\n        Ember['default'].run(function () {\n            component.set('hasMoreData', false);\n            component.setupContinuousPaging();\n        });\n\n        assert.notOk(spy.called, 'enableContinuousPaging was not called when hasMoreData is false');\n\n        spy.reset();\n\n        Ember['default'].run(function () {\n            component.set('continuous', false);\n            component.set('hasMoreData', true);\n            component.setupContinuousPaging();\n        });\n\n        assert.notOk(spy.called, 'enableContinuousPaging was not called when continuous is false');\n    });\n\n    ember_qunit.test('updateHeight() sets correct height on content elements', function (assert) {\n        var heights = {\n            detailContentHeight: 100,\n            listContentHeight: 200\n        };\n\n        var stub = sinon['default'].stub().returns(heights);\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            getContentHeights: stub\n        });\n\n        this.render();\n\n        this.$('.detail-pane .content').height(0);\n        this.$('.list-pane .content').height(0);\n\n        component.updateHeight();\n\n        assert.strictEqual(this.$('.detail-pane .content').height(), heights.detailContentHeight, 'detail content height was set correctly');\n\n        assert.strictEqual(this.$('.list-pane .content').height(), heights.listContentHeight, 'list content height was set correctly');\n    });\n\n    ember_qunit.test('getHeights() returns correct height values', function (assert) {\n        var elements = {};\n\n        var component = this.subject({\n            columns: columns,\n            content: content\n        });\n\n        this.render();\n\n        elements.gridHeader = {\n            height: parseInt(this.$('.grid-header').css('height'))\n        };\n\n        elements.detailHeader = {\n            height: parseInt(this.$('.detail-pane header').css('height'))\n        };\n\n        elements.detailFooter = {\n            height: parseInt(this.$('.detail-pane footer').css('height'))\n        };\n\n        elements.listHeader = {\n            height: parseInt(this.$('.list-pane .column-headers').css('height'))\n        };\n\n        elements.listFooter = {\n            height: parseInt(this.$('.list-pane footer').css('height'))\n        };\n\n        elements.filterPane = {\n            height: parseInt(this.$('.filter-pane').css('height'))\n        };\n\n        var heights = component.getHeights();\n\n        for (var key in elements) {\n            var element = elements[key];\n            var keyName = key + 'Height';\n\n            assert.strictEqual(heights[keyName], element.height, key + ' height was returned correctly');\n        }\n    });\n\n    ember_qunit.test('getMaxHeight() returns correct height', function (assert) {\n        var component = this.subject({\n            columns: columns,\n            content: content\n        });\n\n        this.render();\n\n        var computedHeight = Ember['default'].$(window).innerHeight() - this.$().position().top;\n\n        assert.strictEqual(component.getMaxHeight(), computedHeight, 'When height is not set, computed height returned is correct');\n\n        Ember['default'].run(function () {\n            return component.set('height', 200);\n        });\n\n        assert.strictEqual(component.getMaxHeight(), 200, 'Static height is returned when height is set');\n    });\n\n    ember_qunit.test('getContentHeights() returns correct value for content heights', function (assert) {\n        var heights = {};\n        var maxHeight = 1000;\n        var component = this.subject({\n            filterPaneOpen: false\n        });\n\n        sinon['default'].stub(component, 'getMaxHeight').returns(maxHeight);\n        sinon['default'].stub(component, 'getHeights').returns(heights);\n\n        var resetHeights = function resetHeights() {\n            heights.detailHeaderHeight = 0;\n            heights.detailFooterHeight = 0;\n            heights.listHeaderHeight = 0;\n            heights.listFooterHeight = 0;\n            heights.gridHeaderHeight = 0;\n            heights.filterPaneHeight = 0;\n        };\n\n        resetHeights();\n\n        var _component$getContentHeights = component.getContentHeights();\n\n        var detailContentHeight = _component$getContentHeights.detailContentHeight;\n        var listContentHeight = _component$getContentHeights.listContentHeight;\n\n        assert.strictEqual(detailContentHeight, 1000, 'detailContentHeight is ' + maxHeight);\n\n        assert.strictEqual(listContentHeight, 1000, 'listContentHeight is ' + maxHeight);\n\n        /* jshint ignore:start */\n\n        // Test detailContentHeight is computed correctly when detailContentHeight is set\n\n        heights.detailHeaderHeight = 100;\n\n        var _component$getContentHeights2 = component.getContentHeights();\n\n        detailContentHeight = _component$getContentHeights2.detailContentHeight;\n\n        assert.strictEqual(detailContentHeight, maxHeight - 100, 'detailContentHeight is ' + (maxHeight - 100) + ' when detailHeaderHeight is set');\n\n        // Test detailContentHeight is computed correctly when detaiFooterHeight is set\n\n        resetHeights();\n        heights.detailFooterHeight = 100;\n\n        var _component$getContentHeights3 = component.getContentHeights();\n\n        detailContentHeight = _component$getContentHeights3.detailContentHeight;\n\n        assert.strictEqual(detailContentHeight, maxHeight - 100, 'detailContentHeight is ' + (maxHeight - 100) + ' when detailFooterHeight is set');\n\n        // Test listContentHeight and detailContentHeight is computed correctly\n        // when filterPaneHeight is set\n\n        resetHeights();\n        heights.filterPaneHeight = 100;\n        Ember['default'].run(function () {\n            return component.set('filterPaneOpen', true);\n        });\n\n        var _component$getContentHeights4 = component.getContentHeights();\n\n        detailContentHeight = _component$getContentHeights4.detailContentHeight;\n        listContentHeight = _component$getContentHeights4.listContentHeight;\n\n        assert.strictEqual(detailContentHeight, maxHeight - 100, 'detailContentHeight is ' + (maxHeight - 100) + ' when filterPaneHeight is set');\n\n        assert.strictEqual(listContentHeight, maxHeight - 100, 'listContentHeight is ' + (maxHeight - 100) + ' when filterPaneHeight is set');\n\n        // Test listContentHeight and detailContentHeight is computed correctly\n        // when gridHeaderHeight is set\n\n        resetHeights();\n        heights.gridHeaderHeight = 100;\n\n        var _component$getContentHeights5 = component.getContentHeights();\n\n        detailContentHeight = _component$getContentHeights5.detailContentHeight;\n        listContentHeight = _component$getContentHeights5.listContentHeight;\n\n        assert.strictEqual(detailContentHeight, maxHeight - 100, 'detailContentHeight is ' + (maxHeight - 100) + ' when gridHeaderHeight is set');\n\n        assert.strictEqual(listContentHeight, maxHeight - 100, 'listContentHeight is ' + (maxHeight - 100) + ' when gridHeaderHeight is set');\n\n        // Test listContentHeight is computed correctly\n        // when listHeaderHeight is set\n\n        resetHeights();\n        heights.listHeaderHeight = 100;\n\n        var _component$getContentHeights6 = component.getContentHeights();\n\n        listContentHeight = _component$getContentHeights6.listContentHeight;\n\n        assert.strictEqual(listContentHeight, maxHeight - 100, 'listContentHeight is ' + (maxHeight - 100) + ' when listHeaderHeight is set');\n\n        // Test listContentHeight is computed correctly\n        // when listFooterHeight is set\n\n        resetHeights();\n        heights.listFooterHeight = 100;\n\n        var _component$getContentHeights7 = component.getContentHeights();\n\n        listContentHeight = _component$getContentHeights7.listContentHeight;\n\n        assert.strictEqual(listContentHeight, maxHeight - 100, 'listContentHeight is ' + (maxHeight - 100) + ' when listFooterHeight is set');\n\n        /* jshint ignore:end */\n    });\n\n    ember_qunit.test('enableContinuousPaging() binds scroll event', function (assert) {\n        var handleListContentSpy = sinon['default'].spy();\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            setupContinuousPaging: function setupContinuousPaging() {},\n            handleListContentScroll: handleListContentSpy\n        });\n\n        this.render();\n\n        component.enableContinuousPaging();\n\n        this.$('.list-pane .content').trigger('scroll');\n\n        assert.ok(handleListContentSpy.called, 'handleListContentScroll was called when scroll event was triggered');\n    });\n\n    ember_qunit.test('handleListContentScroll() requests data as expected', function (assert) {\n        var spy = sinon['default'].spy();\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            loading: false,\n            continuous: true,\n            requestMoreData: spy\n        });\n\n        this.render();\n\n        var evt = {\n            target: this.$('.list-pane .content')\n        };\n\n        Ember['default'].run(function () {\n            component.handleListContentScroll(evt);\n        });\n\n        assert.ok(spy.calledOnce, 'requestData action was fired');\n    });\n\n    ember_qunit.test('hasMoreData() returns correct value', function (assert) {\n        var content = Ember['default'].A();\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            totalCount: 0\n        });\n\n        assert.strictEqual(component.get('hasMoreData'), false, 'hasMoreData is false when there is no content and totalCount is 0');\n\n        content.push({\n            id: 4,\n            name: 'Alice'\n        });\n\n        component.set('totalCount', content.length);\n\n        assert.strictEqual(component.get('hasMoreData'), false, 'hasMoreData is false when content length matches totalCount');\n\n        component.set('totalCount', content.length + 1);\n\n        assert.strictEqual(component.get('hasMoreData'), true, 'hasMoreData is true when content length is less then totalCount');\n    });\n\n    ember_qunit.test('requestMoreData() sets correct component state and fires requestData action', function (assert) {\n        var spy = sinon['default'].spy();\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            hasMoreData: false,\n            loading: false,\n            requestData: spy,\n            targetObject: {\n                requestData: 'requestData'\n            }\n        });\n\n        this.render();\n\n        component.requestMoreData();\n\n        assert.notOk(spy.called, 'requestData was not fired when hasMoreData is false');\n\n        assert.strictEqual(component.get('loading'), false, 'component is not in loading state');\n\n        Ember['default'].run(function () {\n            component.set('hasMoreData', true);\n            component.requestMoreData();\n        });\n\n        assert.ok(spy.calledOnce, 'requestData action was fired when hasMoreData is true');\n\n        assert.strictEqual(component.get('loading'), true, 'component is in loading state');\n    });\n\n    ember_qunit.test('sortColumn() sets correct component state and fires sortColumn action', function (assert) {\n        var columns = Ember['default'].A([{ title: 'Name', valuePath: 'name' }, { title: 'ID', valuePath: 'id' }]);\n\n        var sortColumnSpy = sinon['default'].spy();\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            sortColumn: 'sortColumn',\n            targetObject: {\n                sortColumn: sortColumnSpy\n            }\n        });\n\n        Ember['default'].run(function () {\n            component.send('sortColumn', columns[0]);\n        });\n\n        assert.strictEqual(component.get('sortedColumnTitle'), columns[0].title, 'Sorted column title matches title of row passed in');\n\n        assert.strictEqual(component.get('sortDirection'), true, 'On first sort, sort direction is ascending');\n\n        assert.strictEqual(columns[0].sortAscending, true, 'sortAscending is set to true on column that was passed in');\n\n        Ember['default'].run(function () {\n            component.send('sortColumn', columns[0]);\n        });\n\n        assert.strictEqual(component.get('sortedColumnTitle'), columns[0].title, 'Sorted column title has not changed');\n\n        assert.strictEqual(component.get('sortDirection'), false, 'sortDirection is descending');\n\n        assert.strictEqual(columns[0].sortAscending, false, 'sortAscending is set to false on column that was passed in');\n\n        Ember['default'].run(function () {\n            component.send('sortColumn', columns[1]);\n        });\n\n        assert.strictEqual(columns[0].sortAscending, null, 'sortAscending is set to null on previously sorted column');\n    });\n\n    ember_qunit.test('toggleFilterPane() toggles filter pane and updates height of container', function (assert) {\n        var updateHeightSpy = sinon['default'].spy();\n        var component = this.subject({\n            updateHeight: updateHeightSpy\n        });\n\n        var filterPaneOpen = component.get('filterPaneOpen');\n\n        Ember['default'].run(function () {\n            component.send('toggleFilterPane');\n        });\n\n        assert.strictEqual(component.get('filterPaneOpen'), !filterPaneOpen, 'filterPaneOpen property was toggled');\n\n        assert.ok(updateHeightSpy.calledOnce, 'updateHeight was called');\n    });\n\n    ember_qunit.test('pagination data is handled correctly', function (assert) {\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            pageSize: 1,\n            totalCount: content.length\n        });\n\n        assert.equal(component.get('showPagination'), true, 'Pagination control is shown');\n\n        assert.equal(component.get('currentPage'), 1, 'Initial currentPage is 1');\n\n        this.$('.next-page-button').trigger('click');\n\n        assert.equal(component.get('currentPage'), 2, 'Current page incremented correctly');\n\n        Ember['default'].run(function () {\n            component.set('loading', false);\n        });\n\n        this.$('.next-page-button').trigger('click');\n\n        assert.equal(component.get('hasMoreData'), false, 'Current page is the last page');\n\n        Ember['default'].run(function () {\n            component.set('loading', false);\n        });\n\n        this.$('.previous-page-button').trigger('click');\n\n        assert.equal(component.get('currentPage'), 2, 'Current page decremented correctly');\n    });\n\n    ember_qunit.test('Window resize triggers updateHeight() with \"auto\" width', function (assert) {\n        var spy = sinon['default'].spy();\n        this.subject({\n            columns: columns,\n            content: content,\n            height: 'auto',\n            updateHeight: spy\n        });\n\n        this.render();\n\n        spy.reset();\n\n        Ember['default'].$(window).trigger('resize');\n\n        assert.ok(spy.calledOnce, 'updateHeight() is called after window resize');\n    });\n\n    ember_qunit.test('dropButtonSelect action sends an action to the targetObject', function (assert) {\n        var testActionSpy = sinon['default'].spy();\n        var rowData = { foo: 'bar' };\n\n        var component = this.subject({\n            columns: columns,\n            content: content,\n            testAction: 'testAction',\n            targetObject: {\n                testAction: testActionSpy\n            }\n        });\n\n        component.send('dropButtonSelect', rowData, 'testAction');\n\n        assert.ok(testActionSpy.calledWith(rowData), 'testAction was sent with the correct argument');\n    });\n\n    ember_qunit.test('Event handlers are registered and unregistered', function (assert) {\n        var spyOn = sinon['default'].spy(Ember['default'].$.fn, 'on');\n        var spyOff = sinon['default'].spy(Ember['default'].$.fn, 'off');\n\n        var component = this.subject({\n            continuous: false,\n            hasMoreData: false\n        });\n\n        this.render();\n\n        spyOn.reset();\n\n        component.trigger('didInsertElement');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('resize')), 'resize event bound');\n\n        spyOn.reset();\n\n        component.enableContinuousPaging();\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('scroll')), 'scroll event bound');\n\n        spyOff.reset();\n\n        component.trigger('willClearRender');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('resize')), 'resize event unbound');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('scroll')), 'scroll event unbound');\n\n        Ember['default'].$.fn.on.restore();\n        Ember['default'].$.fn.off.restore();\n    });\n\n    ember_qunit.test('Only required references to Ember.$, $ or jQuery exist', function (assert) {\n        var jqueryAliasSpy = sinon['default'].spy(window, '$');\n        var jquerySpy = sinon['default'].spy(window, 'jQuery');\n        var emberJquery = sinon['default'].spy(Ember['default'], '$');\n\n        this.subject();\n        this.render();\n\n        assert.notOk(jquerySpy.called, 'there are no references to jQuery');\n\n        assert.notOk(jqueryAliasSpy.called, 'there are no references to $');\n\n        assert.notOk(emberJquery.calledOn(window), 'Ember.$ was called on the window object');\n\n        assert.notOk(emberJquery.calledOnce, 'Ember.$ was once called once');\n\n        window.$.restore();\n        window.jQuery.restore();\n        Ember['default'].$.restore();\n    });\n\n    ember_qunit.test('Observer keys are correct', function (assert) {\n        var component = this.subject();\n\n        var handleNewContentKeys = ['content.[]'];\n\n        assert.deepEqual(component.handleNewContent.__ember_observes__, handleNewContentKeys, 'Observer keys are correct for handleNewContent()');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var showPaginationDependentKeys = ['continuous', 'totalPages'];\n\n        var sortedColumnDependentKeys = ['columns', 'sortedColumnTitle'];\n\n        var totalPagesDependentKeys = ['continuous', 'pageSize', 'totalCount'];\n\n        assert.deepEqual(component.showPagination._dependentKeys, showPaginationDependentKeys);\n\n        assert.deepEqual(component.sortedColumn._dependentKeys, sortedColumnDependentKeys);\n\n        assert.deepEqual(component.totalPages._dependentKeys, totalPagesDependentKeys);\n    });\n\n});","define('dummy/tests/unit/components/sl-grid-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-grid-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-grid-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-input-test', ['ember', 'ember-qunit', 'sl-ember-components/mixins/sl-input-based', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sl-ember-components/mixins/sl-component-input-id', 'sinon', 'qunit'], function (Ember, ember_qunit, InputBasedMixin, TooltipEnabledMixin, ComponentInputId, sinon, qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-input', 'Unit | Component | sl input', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(InputBasedMixin['default'].detect(this.subject()), 'InputBased Mixin is present');\n\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n\n        assert.ok(ComponentInputId['default'].detect(this.subject()), 'ComponentInputId Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('clickToEdit'), false, 'clickToEdit property false by default');\n\n        assert.strictEqual(component.get('type'), 'text', 'type property is text by default');\n\n        assert.strictEqual(component.get('isTypeaheadSetup'), false, 'isTypeaheadSetup property false by default');\n\n        assert.strictEqual(component.get('suggestionNamePath'), 'name', 'suggestionNamePath property is \"name\" by default');\n\n        assert.strictEqual(component.get('value'), null, 'value property is null by default');\n    });\n\n    ember_qunit.test('getInput() returns correct element', function (assert) {\n        var component = this.subject();\n\n        assert.ok(this.$('input').get(0) === component.getInput().get(0));\n    });\n\n    ember_qunit.test('Event handlers are registered and unregistered', function (assert) {\n        var spyOn = sinon['default'].spy(Ember['default'].$.fn, 'on');\n        var spyOff = sinon['default'].spy(Ember['default'].$.fn, 'off');\n        var component = this.subject({\n            blur: function blur() {}\n        });\n\n        var matchElement = sinon['default'].match(function (value) {\n            return value.get(0) === component.$('input').get(0);\n        });\n\n        this.render();\n\n        spyOn.reset();\n\n        component.trigger('didInsertElement');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('blur')), 'on() was called with namespaced blur event');\n\n        assert.ok(spyOn.alwaysCalledOn(matchElement), 'on() was called on expected input');\n\n        Ember['default'].run(function () {\n            return component.trigger('willClearRender');\n        });\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('blur')), 'off() was called with namespaced blur event');\n\n        assert.ok(spyOff.alwaysCalledOn(matchElement), 'off() was called on expected input');\n\n        Ember['default'].$.fn.on.restore();\n        Ember['default'].$.fn.off.restore();\n    });\n\n    ember_qunit.test('Blur action is triggered when input loses focus', function (assert) {\n        assert.expect(1);\n\n        var done = assert.async();\n\n        this.subject({\n            blur: 'blur',\n            targetObject: {\n                blur: function blur() {\n                    assert.ok('blur was triggered');\n\n                    done();\n                }\n            }\n        });\n\n        this.$('input').trigger('blur');\n    });\n\n    ember_qunit.test('Popover is initialized with the correct options', function (assert) {\n        var popoverText = 'Popover text';\n\n        this.subject({\n            popover: popoverText\n        });\n\n        this.render();\n\n        var data = this.$().data();\n        var popoverData = data['bs.popover'];\n\n        assert.strictEqual(popoverData.enabled, true, 'Popover is enabled');\n\n        assert.strictEqual(popoverData.options.trigger, 'focus', 'Popover trigger is \"focus\"');\n\n        assert.strictEqual(popoverData.options.content, popoverText, 'Popover text is set correctly');\n    });\n\n    ember_qunit.test('isTypeaheadSetup is true when suggestions are provided', function (assert) {\n        var colors = ['Black', 'Yellow'];\n\n        var component = this.subject({\n            suggestions: colors\n        });\n\n        this.render();\n\n        assert.strictEqual(component.get('isTypeaheadSetup'), true);\n    });\n\n    ember_qunit.test('Value is set correctly', function (assert) {\n        var value = 'test value';\n\n        var component = this.subject({\n            value: value\n        });\n\n        assert.strictEqual(component.get('value'), value, '\"value\" prop is set successfully');\n    });\n\n    ember_qunit.test('setupTypeahead() \"selectItem\" sets value successfully', function (assert) {\n        var _this = this;\n\n        var colors = ['Black'];\n\n        var component = this.subject({\n            suggestions: colors\n        });\n\n        Ember['default'].run(function () {\n            _this.$('.typeahead.tt-input').typeahead('val', 'b').blur();\n            _this.$('.tt-suggestion.tt-selectable').click();\n        });\n\n        assert.strictEqual(component.get('value'), 'Black', '\"selectItem\" sets value successfully when item selected');\n    });\n\n    ember_qunit.test('setupTypeahead() \"selectItem\" sets value successfully with \"suggestionNamePath\" set', function (assert) {\n        var _this2 = this;\n\n        var colors = [{ id: 'Black' }];\n\n        var component = this.subject({\n            suggestions: colors,\n            suggestionNamePath: 'id'\n        });\n\n        Ember['default'].run(function () {\n            _this2.$('.typeahead.tt-input').typeahead('val', 'b').blur();\n            _this2.$('.tt-suggestion.tt-selectable').click();\n        });\n\n        assert.strictEqual(component.get('value'), 'Black', '\"selectItem\" sets value successfully when item selected with suggestionNamePath set');\n    });\n\n    ember_qunit.test('Observer keys are correct', function (assert) {\n        var component = this.subject();\n\n        var setupTypeaheadKeys = ['suggestions'];\n\n        assert.deepEqual(component.setupTypeahead.__ember_observes__, setupTypeaheadKeys, 'Observer keys are correct for setupTypeahead()');\n    });\n\n    qunit.skip('setupTypeahead() - typeahead \"displayKey\" initialization is correct', function () {});\n\n    qunit.skip('setupTypeahead() - typeahead \"source\" initialization is correct', function () {});\n\n    qunit.skip('setupTypeahead() - \"typeahead:autocomplete\" action sets value successfully', function () {});\n\n    qunit.skip('setupTypeahead() - \"typeahead:select\" action sets value successfully', function () {});\n\n});","define('dummy/tests/unit/components/sl-input-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-input-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-input-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-loading-icon-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-loading-icon', 'Unit | Component | sl loading icon', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('inverse'), false, '\"inverse\" property defaults to false');\n\n        assert.strictEqual(component.get('tagName'), 'span', '\"tagName\" property defaults to span');\n    });\n\n});","define('dummy/tests/unit/components/sl-loading-icon-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-loading-icon-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-loading-icon-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-menu-item-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-menu-item', 'Unit | Component | sl menu item', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'li', 'Default tagName is \"li\"');\n\n        assert.strictEqual(component.get('active'), false, '\"active\" is \"false\"');\n\n        assert.strictEqual(component.get('item'), null, '\"item\" is \"null\"');\n    });\n\n    ember_qunit.test('Active state applies class', function (assert) {\n        var component = this.subject();\n\n        assert.equal(component.get('active'), false, 'Component is not active by default');\n\n        assert.equal(this.$().hasClass('active'), false, 'Rendered element does not have class \"active\" by default');\n\n        Ember['default'].run(function () {\n            component.set('active', true);\n        });\n\n        assert.ok(this.$().hasClass('active'), 'Rendered element has class \"active\" when component is active');\n    });\n\n    ember_qunit.test('Class \"has-sub-menu\" is present when bound item has items array', function (assert) {\n        var component = this.subject();\n\n        assert.ok(false === this.$().hasClass('has-sub-menu'), 'Rendered element does not have class \"has-sub-menu\" by default');\n\n        Ember['default'].run(function () {\n            component.set('item', { items: [{ label: '' }] });\n        });\n\n        assert.ok(this.$().hasClass('has-sub-menu'), 'Rendered element has class \"has-sub-menu\"');\n    });\n\n    ember_qunit.test('Class \"active\" is present when bound item is selected', function (assert) {\n        var component = this.subject();\n\n        assert.ok(false === this.$().hasClass('active'), 'Rendered element does not have class \"active\" by default');\n\n        Ember['default'].run(function () {\n            component.set('item', { selected: true });\n        });\n\n        assert.ok(this.$().hasClass('active'), 'Rendered element has class \"active\"');\n    });\n\n    ember_qunit.test('Bound item.action is triggered when link is clicked', function (assert) {\n        this.subject({\n            action: 'test',\n\n            item: {\n                action: 'test',\n                data: { okay: true },\n                label: 'Test'\n            },\n\n            targetObject: {\n                test: function test(actionName, data) {\n                    assert.ok('test' === actionName && true === data.okay, 'Bound item.action triggered with expected data');\n                }\n            }\n        });\n\n        this.$('a').trigger('click');\n    });\n\n    ember_qunit.test('`subItems` computed property is a wrapped `item.items` array', function (assert) {\n        var component = this.subject({\n            item: {\n                items: [{ okay: true }]\n            }\n        });\n\n        assert.ok(component.get('subItems').objectAt(0).okay, 'Parsed `subItems` correctly');\n    });\n\n    ember_qunit.test('`subItems` computed property is null when `item.items` does not exist', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('subItems'), null, '\"subItems\" is null');\n    });\n\n    ember_qunit.test('`hasSubItems` represents the presence of `item.items`', function (assert) {\n        var component = this.subject();\n\n        assert.ok(false === component.get('hasSubItems'), '`hasSubItems` is false with no `item.items`');\n\n        Ember['default'].run(function () {\n            component.set('item', { items: [] });\n        });\n\n        assert.ok(false === component.get('hasSubItems'), '`hasSubItems` is false with empty `item.items`');\n\n        Ember['default'].run(function () {\n            component.set('item', { items: [{ okay: true }] });\n        });\n\n        assert.ok(true === component.get('hasSubItems'), '`hasSubItems` is true when `item.items` is present and not empty');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var hasSubItemsDependentKeys = ['item'];\n\n        assert.deepEqual(component.hasSubItems._dependentKeys, hasSubItemsDependentKeys, 'Dependent keys are correct for hasSubItems()');\n\n        var subItemsDependentKeys = ['item'];\n\n        assert.deepEqual(component.subItems._dependentKeys, subItemsDependentKeys, 'Dependent keys are correct for subItems()');\n    });\n\n});","define('dummy/tests/unit/components/sl-menu-item-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-menu-item-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-menu-item-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-menu-test', ['ember', 'ember-qunit', 'ember-stream/mixins/stream-enabled', 'sinon'], function (Ember, ember_qunit, StreamEnabledMixin, sinon) {\n\n    'use strict';\n\n    var mockStream = {\n        actions: {},\n\n        on: function on(actionName, handler) {\n            this.actions[actionName] = handler;\n        },\n\n        subject: {\n            dispose: function dispose() {\n                mockStream.actions = {};\n            },\n\n            onCompleted: function onCompleted() {}\n        }\n    };\n\n    var testItems = Ember['default'].A([{\n        action: 'firstTest',\n        data: 'first',\n        label: 'First',\n        items: [{\n            label: 'First sub-item',\n            items: [{ label: 'First sub-item sub-item' }]\n        }, {\n            label: 'Second sub-item'\n        }]\n    }, {\n        action: 'secondTest',\n        data: 'second',\n        label: 'Second'\n    }]);\n\n    ember_qunit.moduleForComponent('sl-menu', 'Unit | Component | sl menu', {\n        unit: true,\n\n        needs: ['component:sl-menu-item', 'component:sl-menu-item-show-all']\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(StreamEnabledMixin['default'].detect(this.subject()), 'StreamEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('allowShowAll'), false, '\"allowShowAll\" is \"false\"');\n\n        assert.strictEqual(component.get('items'), null, '\"items\" is \"null\"');\n\n        assert.deepEqual(component.get('selections'), [], '\"selections\" is \"[]\"');\n\n        assert.strictEqual(component.get('showingAll'), false, '\"showingAll\" is \"false\"');\n    });\n\n    ember_qunit.test('showAll() properly sets state to showingAll', function (assert) {\n        var component = this.subject({\n            allowShowAll: true,\n            items: testItems\n        });\n\n        assert.ok(!component.get('showingAll'), 'showingAll is initially false');\n\n        Ember['default'].run(function () {\n            component.showAll();\n        });\n\n        assert.ok(component.get('showingAll'), 'showingAll is true after showAll()');\n    });\n\n    ember_qunit.test('hideAll() sets state to not showingAll', function (assert) {\n        var component = this.subject({\n            items: testItems,\n            showingAll: true\n        });\n\n        Ember['default'].run(function () {\n            component.hideAll();\n        });\n\n        assert.equal(component.get('showingAll'), false, 'showingAll is false');\n    });\n\n    ember_qunit.test('showingAll sets class \"show-all\"', function (assert) {\n        this.subject({\n            showingAll: true\n        });\n\n        assert.ok(this.$().hasClass('show-all'), 'Rendered element has class \"show-all\"');\n    });\n\n    ember_qunit.test('select() selects a certain menu item', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            component.select(0);\n        });\n\n        assert.equal(component.get('selections').length, 1, 'A single item is selected after select()');\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'Selected item is first test item');\n\n        Ember['default'].run(function () {\n            component.select(1);\n        });\n\n        assert.equal(component.get('selections').length, 1, 'A single item is selected after select()');\n\n        assert.equal(component.get('selectedItem'), testItems[1], 'Selected item is second test item');\n    });\n\n    ember_qunit.test('selectDown() selects an item in the \"down\" direction', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            component.selectDown();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'Selected item is first testItem');\n\n        Ember['default'].run(function () {\n            component.selectDown();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0].items[0], 'Selected item is first sub-menu item');\n    });\n\n    ember_qunit.test('selectLeft() selects an item in the \"left\" direction', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            // Selection has to be \"down\" first in order to select the top level for\n            // the context\n            component.selectDown();\n            component.selectLeft();\n        });\n\n        assert.equal(component.get('selections').length, 1, 'Only one selection is made');\n\n        Ember['default'].run(function () {\n            // Select \"left\" to the first top-level item\n            component.selectLeft();\n\n            // Select \"down\" into the first sub-menu\n            component.selectDown();\n        });\n\n        // This assertion ensures that we have gone into the first sub-menu\n        assert.equal(component.get('selections').length, 2, 'Two selections are made');\n\n        Ember['default'].run(function () {\n            // Back to top-level items\n            component.selectLeft();\n        });\n\n        assert.equal(component.get('selections').length, 1, 'Only one selection is made');\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'First top-level item is selected again');\n    });\n\n    ember_qunit.test('selectNext() selects the next sibling menu item', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            component.selectNext();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'First top-level item is selected');\n\n        Ember['default'].run(function () {\n            component.selectNext();\n        });\n\n        assert.equal(component.get('selections').length, 1, 'One item is still selected');\n\n        assert.equal(component.get('selectedItem'), testItems[1], 'Second top-level item is selected');\n    });\n\n    ember_qunit.test(\"selectParent() selects a sub-menu's parent item\", function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            // Select the first top-level item\n            component.select(0);\n\n            // Descend into the first sub-menu\n            component.selectSubMenu();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0].items[0], 'The first sub-menu item is selected');\n    });\n\n    ember_qunit.test('selectPrevious() selects the previous sibling menu item', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            // Select the second top-level item\n            component.select(1);\n\n            // Select previous; should be the first top-level item\n            component.selectPrevious();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'The first top-level item is selected');\n\n        Ember['default'].run(function () {\n            // Select previous again; should wrap and select the second top-level item\n            component.selectPrevious();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[1], 'The second top-level item is selected');\n    });\n\n    ember_qunit.test('selectRight() selects an item in the \"right\" direction', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            component.select(0);\n            component.selectRight();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[1], 'The second top-level item is selected');\n\n        Ember['default'].run(function () {\n            // Should wrap around back to the first item\n            component.selectRight();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'The first top-level item is selected');\n\n        Ember['default'].run(function () {\n            // Descend \"down\" into the first sub-menu\n            component.selectDown();\n\n            // Select \"right\" to the first nested sub-menu's first sub-item\n            component.selectRight();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0].items[0].items[0], \"The first nested sub-menu's first sub-item is selected\");\n    });\n\n    ember_qunit.test('selectSubMenu() selects a sub-menu item', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            // Select the first top-level item\n            component.select(0);\n\n            // Select the first sub-menu\n            component.selectSubMenu();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0].items[0], 'The first sub-menu item is selected');\n    });\n\n    ember_qunit.test('selectUp() selects an item in the \"up\" direction', function (assert) {\n        var component = this.subject({\n            items: testItems\n        });\n\n        assert.equal(component.get('selections').length, 0, 'Nothing is selected initially');\n\n        Ember['default'].run(function () {\n            // Select the first top-level item\n            component.select(0);\n\n            // Select the first sub-menu\n            component.selectSubMenu();\n\n            // Select the second sub-menu item\n            component.selectDown();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0].items[1], 'The second sub-menu item is selected');\n\n        Ember['default'].run(function () {\n            // Select \"up\" to the first sub-menu item\n            component.selectUp();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0].items[0], 'The first sub-menu item is selected');\n\n        Ember['default'].run(function () {\n            // Select \"up\" again to select the sub-menu's parent\n            component.selectUp();\n        });\n\n        assert.equal(component.get('selectedItem'), testItems[0], 'The first top-level item is selected');\n    });\n\n    ember_qunit.test('selectNext() shows all at the end of the context', function (assert) {\n        var component = this.subject({\n            allowShowAll: true,\n            items: testItems\n        });\n\n        Ember['default'].run(function () {\n            // Select the last item option\n            component.select(1);\n        });\n\n        assert.ok(false === component.get('showingAll'), 'Component is not showing all');\n\n        Ember['default'].run(function () {\n            component.selectNext();\n        });\n\n        assert.ok(component.get('showingAll'), 'Component is now showing all');\n    });\n\n    ember_qunit.test('selectPrevious() shows all when at the beginning of the context', function (assert) {\n        var component = this.subject({\n            allowShowAll: true,\n            items: testItems\n        });\n\n        assert.ok(false === component.get('showingAll'), 'Component is not showing all by default');\n\n        Ember['default'].run(function () {\n            component.selectPrevious();\n        });\n\n        assert.ok(component.get('showingAll'), 'Component is now showing all');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var selectedItemDependentKeys = ['selections.@each.item'];\n\n        assert.deepEqual(component.selectedItem._dependentKeys, selectedItemDependentKeys, 'Dependent keys are correct for selectedItem()');\n    });\n\n    ember_qunit.test('Stream action \"clearSelections\" triggers clearSelections()', function (assert) {\n        var component = this.subject({\n            items: testItems,\n            stream: mockStream\n        });\n        var clearSelectionsSpy = sinon['default'].spy(component, 'clearSelections');\n\n        mockStream.actions['clearSelections']();\n        assert.ok(clearSelectionsSpy.called, 'clearSelections method was called');\n    });\n\n    ember_qunit.test('clearSelections() - sets selections to empty array', function (assert) {\n        var component = this.subject({\n            items: testItems,\n            stream: mockStream\n        });\n\n        // execute select to have a selection to clear from\n        mockStream.actions['select'](0);\n        mockStream.actions['clearSelections']();\n        assert.deepEqual(component.get('selections'), [], 'clearSelections sets selections to empty array');\n    });\n\n    ember_qunit.test('selectedItem() - returns expected selected item', function (assert) {\n        var component = this.subject({\n            items: testItems,\n            stream: mockStream\n        });\n\n        assert.strictEqual(component.get('selectedItem'), null, 'selectedItem() returns selected item');\n    });\n\n    ember_qunit.test('Stream action \"doAction\" triggers doAction()', function (assert) {\n        var component = this.subject({\n            items: testItems,\n            stream: mockStream\n        });\n        var doActionSpy = sinon['default'].spy(component, 'doAction');\n\n        mockStream.actions['doAction']();\n        assert.ok(doActionSpy.called, 'doAction method was called');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject({\n            items: testItems,\n            stream: mockStream\n        });\n\n        var selectedItemKeys = ['selections.@each.item'];\n\n        assert.deepEqual(component.selectedItem._dependentKeys, selectedItemKeys, 'Dependent keys are correct for selectedItem()');\n    });\n\n});","define('dummy/tests/unit/components/sl-menu-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-menu-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-menu-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-modal-footer-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-modal-footer', 'Unit | Component | sl modal footer', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('buttonText'), 'Close', 'Default buttonText is \"Close\"');\n    });\n\n});","define('dummy/tests/unit/components/sl-modal-footer-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-modal-footer-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-modal-footer-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-modal-test', ['ember', 'ember-qunit', 'sinon', 'ember-stream/mixins/stream-enabled'], function (Ember, ember_qunit, sinon, streamEnabled) {\n\n    'use strict';\n\n    var mockStream = {\n        actions: {},\n\n        on: function on(actionName, handler) {\n            this.actions[actionName] = handler;\n        },\n\n        subject: {\n            dispose: function dispose() {\n                mockStream.actions = {};\n            },\n\n            onCompleted: function onCompleted() {}\n        }\n    };\n\n    ember_qunit.moduleForComponent('sl-modal', 'Unit | Component | sl modal', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(streamEnabled['default'].detect(this.subject()), 'StreamEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('animated'), true, 'animated is true by default');\n\n        assert.strictEqual(component.get('ariaDescribedBy'), null, 'ariaDescribedBy is null by default');\n\n        assert.strictEqual(component.get('ariaHidden'), 'true', 'ariaHidden is \"true\" by default');\n\n        assert.strictEqual(component.get('ariaRole'), 'dialog', 'ariaRole is \"dialog\" by default');\n\n        assert.strictEqual(component.get('backdrop'), true, 'backdrop is true by default');\n\n        assert.strictEqual(component.get('isOpen'), false, 'isOpen is false by default');\n\n        assert.strictEqual(component.get('tabindex'), '-1', 'tabindex is \"-1\" by default');\n    });\n\n    ember_qunit.test('hide() calls bootstrap modal hide', function (assert) {\n        var spyModal = sinon['default'].spy(Ember['default'].$.fn, 'modal');\n\n        var component = this.subject();\n\n        this.render();\n\n        component.hide();\n\n        assert.ok(spyModal.calledWithExactly('hide'), 'Bootstrap jQuery modal plugin correctly called with \"hide\" parameter');\n\n        Ember['default'].$.fn.modal.restore();\n    });\n\n    ember_qunit.test('show() calls bootstrap modal show', function (assert) {\n        var spyModal = sinon['default'].spy(Ember['default'].$.fn, 'modal');\n\n        var component = this.subject();\n\n        this.render();\n\n        component.show();\n\n        assert.ok(spyModal.calledWithExactly('show'), 'Bootstrap jQuery modal plugin correctly called with \"show\" parameter');\n\n        // clean up\n        component.hide();\n        Ember['default'].$.fn.modal.restore();\n    });\n\n    ember_qunit.test('Event handlers are registered and unregistered', function (assert) {\n        var spyOn = sinon['default'].spy(Ember['default'].$.fn, 'on');\n        var spyOff = sinon['default'].spy(Ember['default'].$.fn, 'off');\n        var component = this.subject();\n\n        var matchElement = sinon['default'].match(function (value) {\n            return value.get(0) === component.$().get(0);\n        });\n\n        this.render();\n\n        spyOn.reset();\n\n        component.trigger('didInsertElement');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('show.bs.modal')), 'on() was called with namespaced show.bs.modal event');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('shown.bs.modal')), 'on() was called with namespaced shown.bs.modal event');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('hide.bs.modal')), 'on() was called with namespaced hide.bs.modal event');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('hidden.bs.modal')), 'on() was called with namespaced hidden.bs.modal event');\n\n        assert.ok(spyOn.alwaysCalledOn(matchElement), 'on() was called on expected element');\n\n        spyOff.reset();\n\n        component.trigger('willClearRender');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('show.bs.modal')), 'off() was called with namespaced show.bs.modal event');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('shown.bs.modal')), 'off() was called with namespaced shown.bs.modal event');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('hide.bs.modal')), 'off() was called with namespaced hide.bs.modal event');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('hidden.bs.modal')), 'off() was called with namespaced hidden.bs.modal event');\n\n        assert.ok(spyOff.alwaysCalledOn(matchElement), 'off() was called on expected element');\n\n        Ember['default'].$.fn.on.restore();\n        Ember['default'].$.fn.off.restore();\n    });\n\n    ember_qunit.test('Stream action \"show\" triggers show()', function (assert) {\n        var component = this.subject({\n            stream: mockStream\n        });\n        var showSpy = sinon['default'].spy(component, 'show');\n\n        this.render();\n\n        mockStream.actions['show']();\n        assert.ok(showSpy.called, 'show method was called');\n\n        // clean up\n        component.hide();\n        component.show.restore();\n    });\n\n    ember_qunit.test('Stream action \"hide\" triggers hide()', function (assert) {\n        var component = this.subject({\n            stream: mockStream\n        });\n        var hideSpy = sinon['default'].spy(component, 'hide');\n\n        this.render();\n\n        mockStream.actions['hide']();\n        assert.ok(hideSpy.called, 'hide method was called');\n\n        component.hide.restore();\n    });\n\n});","define('dummy/tests/unit/components/sl-modal-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-modal-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-modal-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-pagination-test', ['ember', 'sinon', 'ember-qunit'], function (Ember, sinon, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-pagination', 'Unit | Component | sl pagination', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'ul', 'tagName is ul by default');\n\n        assert.strictEqual(component.get('busy'), false, 'busy is false by default');\n\n        assert.strictEqual(component.get('currentPage'), 1, 'currentPage is 1 by default');\n\n        assert.strictEqual(component.get('totalPages'), null, 'totalPages is null by default');\n    });\n\n    ember_qunit.test('nextPage action increments currentPage', function (assert) {\n        var component = this.subject({ totalPages: 2 });\n\n        Ember['default'].run(function () {\n            component.send('nextPage');\n        });\n\n        assert.strictEqual(component.get('currentPage'), 2, 'currentPage was incremented');\n    });\n\n    ember_qunit.test('previousPage action decrements currentPage', function (assert) {\n        var component = this.subject({ totalPages: 2, currentPage: 2 });\n\n        Ember['default'].run(function () {\n            component.send('previousPage');\n        });\n\n        assert.strictEqual(component.get('currentPage'), 1, 'currentPage was decremented');\n    });\n\n    ember_qunit.test('onFirstPage property returns the expected values', function (assert) {\n        var component = this.subject({ currentPage: 2 });\n\n        assert.strictEqual(component.get('onFirstPage'), false, 'Returns false when not on the first page');\n\n        Ember['default'].run(function () {\n            component.set('currentPage', 1);\n        });\n\n        assert.strictEqual(component.get('onFirstPage'), true, 'Returns true when not on the first page');\n    });\n\n    ember_qunit.test('onLastPage property returns the expected values', function (assert) {\n        var component = this.subject({\n            currentPage: 1,\n            totalPages: 2\n        });\n\n        assert.strictEqual(component.get('onLastPage'), false, 'Returns false when not on the last page');\n\n        Ember['default'].run(function () {\n            component.set('currentPage', 2);\n        });\n\n        assert.strictEqual(component.get('onLastPage'), true, 'Returns true when on the last page');\n\n        Ember['default'].run(function () {\n            component.set('totalPages', 3);\n        });\n\n        assert.strictEqual(component.get('onLastPage'), false, 'Respects changes to the totalPages property');\n    });\n\n    ember_qunit.test('changePageBy() adds to currentPage when positive', function (assert) {\n        var component = this.subject({\n            totalPages: 2\n        });\n\n        Ember['default'].run(function () {\n            component.changePageBy(1);\n        });\n\n        assert.strictEqual(component.get('currentPage'), 2, 'currentPage was increased by 1');\n    });\n\n    ember_qunit.test('changePageBy() subtracts from currentPage when negative', function (assert) {\n        var component = this.subject({\n            totalPages: 2,\n            currentPage: 2\n        });\n\n        Ember['default'].run(function () {\n            component.changePageBy(-1);\n        });\n\n        assert.strictEqual(component.get('currentPage'), 1, 'currentPage was decreased by 1');\n    });\n\n    ember_qunit.test('changePageBy() sends the changePage action', function (assert) {\n        var targetObject = {\n            testAction: sinon['default'].spy()\n        };\n\n        var component = this.subject({\n            totalPages: 2,\n            changePage: 'testAction',\n            targetObject: targetObject\n        });\n\n        Ember['default'].run(function () {\n            component.changePageBy(1);\n        });\n\n        assert.strictEqual(targetObject.testAction.getCall(0).args[0], 2, 'the changePage action was sent with the new currentPage value');\n    });\n\n    ember_qunit.test('changePageBy() does nothing when busy is true', function (assert) {\n        var targetObject = {\n            testAction: sinon['default'].spy()\n        };\n\n        var component = this.subject({\n            totalPages: 2,\n            changePage: 'testAction',\n            targetObject: targetObject\n        });\n\n        Ember['default'].run(function () {\n            component.set('busy', true);\n            component.changePageBy(1);\n        });\n\n        assert.strictEqual(component.get('currentPage'), 1, 'currentPage was not changed');\n\n        assert.strictEqual(targetObject.testAction.calledOnce, false, 'changePage action was not sent');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var onFirstPageDependentKeys = ['currentPage'];\n\n        var onLastPageDependentKeys = ['currentPage', 'totalPages'];\n\n        assert.deepEqual(component.onFirstPage._dependentKeys, onFirstPageDependentKeys, 'Dependent keys are correct for onFirstPage()');\n\n        assert.deepEqual(component.onLastPage._dependentKeys, onLastPageDependentKeys, 'Dependent keys are correct for onLastPage()');\n    });\n\n});","define('dummy/tests/unit/components/sl-pagination-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-pagination-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-pagination-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-panel-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-panel', 'Unit | Component | sl panel', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('heading'), null, 'Default heading value is null');\n\n        assert.strictEqual(component.get('loading'), false, 'Default loading value is null');\n    });\n\n});","define('dummy/tests/unit/components/sl-panel-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-panel-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-panel-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-progress-bar-test', ['ember', 'ember-qunit', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sl-ember-components/components/sl-progress-bar', 'sinon'], function (Ember, ember_qunit, TooltipEnabledMixin, sl_progress_bar, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-progress-bar', 'Unit | Component | sl progress bar', {\n        unit: true\n    });\n\n    var Theme = {\n        DANGER: 'danger',\n        DEFAULT: 'default',\n        INFO: 'info',\n        SUCCESS: 'success',\n        WARNING: 'warning'\n    };\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.deepEqual(sl_progress_bar.Theme, Theme, 'Theme enum values are correct');\n\n        assert.strictEqual(component.get('animated'), false, 'animated: false');\n\n        assert.strictEqual(component.get('label'), false, 'label: false');\n\n        assert.strictEqual(component.get('striped'), false, 'striped: false');\n\n        assert.strictEqual(component.get('theme'), Theme.DEFAULT, 'theme: ' + Theme.DEFAULT);\n\n        assert.strictEqual(component.get('value'), 0, 'value: 0');\n    });\n\n    ember_qunit.test('isLowPercentage() is only true when value < 50', function (assert) {\n        var component = this.subject({ value: 49 });\n\n        assert.ok(component.get('isLowPercentage'), 'Value < 50 is low percentage');\n\n        this.render();\n\n        Ember['default'].run(function () {\n            component.set('value', 50);\n        });\n\n        assert.strictEqual(component.get('isLowPercentage'), false, 'Value >= 50 is not low percentage');\n    });\n\n    ember_qunit.test('Event listener on \"willInsertElement\" calls \"setCssWidth()\"', function (assert) {\n        var spy = sinon['default'].spy();\n        var component = this.subject({\n            setCssWidth: spy\n        });\n\n        Ember['default'].run(function () {\n            return component.trigger('willInsertElement');\n        });\n\n        assert.ok(spy.called, '\"setCssWidth()\" called when \"willInsertElement\" event occurs');\n    });\n\n    ember_qunit.test('\"setWidth()\" calls the correct methods', function (assert) {\n        var spy = sinon['default'].spy();\n        var component = this.subject({\n            setCssWidth: spy\n        });\n\n        component.setWidth();\n\n        assert.ok(spy.called, '\"setCssWidth()\" called inside \"setWidth()\"');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var isLowPercentageDependentKeys = ['value'];\n\n        var themeClassNameDependentKeys = ['theme'];\n\n        assert.deepEqual(component.isLowPercentage._dependentKeys, isLowPercentageDependentKeys, 'Dependent keys are correct for isLowPercentage()');\n\n        assert.deepEqual(component.themeClassName._dependentKeys, themeClassNameDependentKeys, 'Dependent keys are correct for themeClassName()');\n    });\n\n    ember_qunit.test('Observer keys are correct', function (assert) {\n        var component = this.subject();\n\n        var setWidthKeys = ['value'];\n\n        assert.deepEqual(component.setWidth.__ember_observes__, setWidthKeys, 'Observer keys are correct for setWidth()');\n    });\n\n    ember_qunit.test('There are no references to Ember.$, $ or jQuery', function (assert) {\n        var jqueryAliasSpy = sinon['default'].spy(window, '$');\n        var jquerySpy = sinon['default'].spy(window, 'jQuery');\n        var emberJquery = sinon['default'].spy(Ember['default'], '$');\n\n        this.subject();\n        this.render();\n\n        var called = jqueryAliasSpy.called || jquerySpy.called || emberJquery.called;\n\n        assert.notOk(called);\n\n        window.$.restore();\n        window.jQuery.restore();\n        Ember['default'].$.restore();\n    });\n\n});","define('dummy/tests/unit/components/sl-progress-bar-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-progress-bar-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-progress-bar-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-radio-group-test', ['ember', 'ember-qunit', 'sl-ember-components/mixins/sl-input-based', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sl-ember-components/mixins/sl-namespace', 'sinon'], function (Ember, ember_qunit, InputBasedMixin, TooltipEnabledMixin, NamespaceMixin, sinon) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-radio-group', 'Unit | Component | sl radio group', {\n        needs: ['component:sl-radio'],\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(InputBasedMixin['default'].detect(this.subject()), 'InputBased Mixin is present');\n\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n\n        assert.ok(NamespaceMixin['default'].detect(this.subject()), 'Namespace Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'fieldset', 'tagName: fieldset');\n\n        assert.strictEqual(component.get('inline'), null, 'inline: null');\n\n        assert.strictEqual(component.get('label'), null, 'label: null');\n\n        assert.strictEqual(component.get('value'), null, 'value: null');\n    });\n\n    ember_qunit.test('intialize() - assert that name must be set on sl-radio-group', function (assert) {\n        var component = this.subject();\n\n        assert.throws(function () {\n            return component.initialize();\n        }, '\"name\" property must be set on component');\n    });\n\n    ember_qunit.test('Event handlers are registered and unregistered', function (assert) {\n        var spyOn = sinon['default'].spy(Ember['default'].$.fn, 'on');\n        var spyOff = sinon['default'].spy(Ember['default'].$.fn, 'off');\n\n        this.registry.register('template:test-template', Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 5,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(3);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                    morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                    return morphs;\n                },\n                statements: [['content', 'sl-radio', ['loc', [null, [2, 8], [2, 20]]]], ['content', 'sl-radio', ['loc', [null, [3, 8], [3, 20]]]], ['content', 'sl-radio', ['loc', [null, [4, 8], [4, 20]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        var component = this.subject({\n            name: 'testName',\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        var radioButtonsArray = this.$('input:radio').toArray();\n\n        var matchElements = sinon['default'].match(function (elements) {\n            return radioButtonsArray.every(function (element) {\n                var found = elements.toArray().find(function (radioElement) {\n                    return element === radioElement;\n                });\n\n                return Boolean(found);\n            });\n        });\n\n        this.render();\n\n        spyOn.reset();\n\n        component.trigger('didInsertElement');\n\n        assert.ok(spyOn.calledWith(component.namespaceEvent('change')), 'on() was called with namespaced change event');\n\n        assert.ok(spyOn.calledOn(matchElements), 'on() was called on expected radio buttons');\n\n        spyOff.reset();\n\n        component.trigger('willClearRender');\n\n        assert.ok(spyOff.calledWith(component.namespaceEvent('change')), 'off() was called with namespaced change event');\n\n        assert.ok(spyOff.calledOn(matchElements), 'off() was called on expected radio buttons');\n\n        Ember['default'].$.fn.on.restore();\n        Ember['default'].$.fn.off.restore();\n    });\n\n});","define('dummy/tests/unit/components/sl-radio-group-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-radio-group-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-radio-group-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-radio-test', ['ember', 'sl-ember-components/mixins/sl-input-based', 'ember-qunit'], function (Ember, InputBasedMixin, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-radio', 'Unit | Component | sl radio', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(InputBasedMixin['default'].detect(this.subject()), 'InputBased Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('label'), null, 'Default property \"label\" is null');\n\n        assert.strictEqual(component.get('value'), null, 'Default property \"value\" is null');\n    });\n\n    ember_qunit.test('RadioType property sets relevant class', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('radioType'), 'radio', 'RadioType defaults to \"radio\"');\n\n        assert.notStrictEqual(component.get('radioType'), 'radio-inline', 'RadioType is not inline');\n\n        Ember['default'].run(function () {\n            component.set('inline', true);\n        });\n\n        assert.strictEqual(component.get('radioType'), 'radio-inline', 'RadioType is inline');\n\n        assert.notStrictEqual(component.get('radioType'), 'radio', 'RadioType is not inline');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var radioTypeDependentKeys = ['inline'];\n\n        assert.deepEqual(component.radioType._dependentKeys, radioTypeDependentKeys, 'Dependent keys are correct for radioType()');\n    });\n\n});","define('dummy/tests/unit/components/sl-radio-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-radio-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-radio-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-span-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-span', 'Unit | Component | sl span', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('tagName'), 'span', 'Default property \"tagName\" is \"span\"');\n\n        assert.strictEqual(component.get('inverse'), false, 'Default property \"inverse\" is false');\n\n        assert.strictEqual(component.get('loading'), false, 'Default property \"loading\" is false');\n\n        assert.strictEqual(component.get('value'), null, 'Default property \"value\" is null');\n    });\n\n});","define('dummy/tests/unit/components/sl-span-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-span-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-span-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-tab-pane-test', ['ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n    'use strict';\n\n    var App = undefined;\n\n    ember_qunit.moduleForComponent('sl-tab-pane', 'Unit | Component | sl tab pane', {\n        needs: ['component:sl-tab-panel'],\n\n        beforeEach: function beforeEach() {\n            App = startApp['default']();\n        },\n\n        afterEach: function afterEach() {\n            Ember['default'].run(App, App.destroy);\n        },\n\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject({\n            label: 'Test Label',\n            name: 'Test Name'\n        });\n\n        assert.strictEqual(component.get('data-tab-label'), 'Test Label', '\"data-tab-label\" is set to the value of \"label\"');\n\n        assert.strictEqual(component.get('data-tab-name'), 'Test Name', '\"data-tab-name\" is set to the value of \"name\"');\n    });\n\n});","define('dummy/tests/unit/components/sl-tab-pane-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-tab-pane-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-tab-pane-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-tab-panel-test', ['ember', 'ember-qunit', 'sl-ember-components/components/sl-tab-panel', 'sl-ember-components/utils/all', 'sinon'], function (Ember, ember_qunit, sl_tab_panel, utils, sinon) {\n\n    'use strict';\n\n    var template = Ember['default'].HTMLBars.template((function () {\n        var child0 = (function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 2,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 4,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('        One\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })();\n\n        var child1 = (function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 6,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 8,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('        Two\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })();\n\n        var child2 = (function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 10,\n                            'column': 4\n                        },\n                        'end': {\n                            'line': 12,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('        Three\\n');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes() {\n                    return [];\n                },\n                statements: [],\n                locals: [],\n                templates: []\n            };\n        })();\n\n        return {\n            meta: {\n                'revision': 'Ember@1.13.7',\n                'loc': {\n                    'source': null,\n                    'start': {\n                        'line': 1,\n                        'column': 0\n                    },\n                    'end': {\n                        'line': 13,\n                        'column': 0\n                    }\n                }\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode('\\n');\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment('');\n                dom.appendChild(el0, el1);\n                return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(3);\n                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n                morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n            },\n            statements: [['block', 'sl-tab-pane', [], ['label', 'One', 'name', 'one'], 0, null, ['loc', [null, [2, 4], [4, 20]]]], ['block', 'sl-tab-pane', [], ['label', 'Two', 'name', 'two'], 1, null, ['loc', [null, [6, 4], [8, 20]]]], ['block', 'sl-tab-pane', [], ['label', 'Three', 'name', 'three'], 2, null, ['loc', [null, [10, 4], [12, 20]]]]],\n            locals: [],\n            templates: [child0, child1, child2]\n        };\n    })());\n\n    ember_qunit.moduleForComponent('sl-tab-panel', 'Unit | Component | sl tab panel', {\n        unit: true,\n        needs: ['component:sl-tab-pane']\n    });\n\n    ember_qunit.test('Alignment enum values are correct', function (assert) {\n        var Alignment = {\n            LEFT: 'left',\n            RIGHT: 'right'\n        };\n\n        assert.deepEqual(sl_tab_panel.Alignment, Alignment);\n    });\n\n    ember_qunit.test('Default values are set correctly', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('activeTabName'), null, 'activeTabName is null');\n\n        assert.strictEqual(component.get('alignTabs'), sl_tab_panel.Alignment.LEFT, 'alignmentTabs is left by default');\n\n        assert.strictEqual(component.get('contentHeight'), 0, 'contentHeight is 0 by default');\n\n        assert.strictEqual(component.get('initialTabName'), null, 'initialTabName is null by default');\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n        var tabAlignmentDependentKeys = ['alignTabs'];\n\n        assert.deepEqual(component.tabAlignmentClass._dependentKeys, tabAlignmentDependentKeys);\n    });\n\n    ember_qunit.test('setupTabs() sets \"tabs\" property with correct data', function (assert) {\n        var tabs = [{ label: 'One', name: 'one', active: true }, { label: 'Two', name: 'two', active: false }, { label: 'Three', name: 'three', active: false }];\n\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        assert.deepEqual(tabs, component.get('tabs'), '\"tabs\" property is set with the correct data');\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('getTabs() returns correct data', function (assert) {\n        var tabs = [{ label: 'One', name: 'one', active: true }, { label: 'Two', name: 'two', active: false }, { label: 'Three', name: 'three', active: false }];\n\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        assert.deepEqual(component.getTabs(), tabs, 'Correct data returned when initialTabName \"one\" passed in as a parameter');\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('setActiveTab() does so correctly', function (assert) {\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        var tabOne = this.$('.tab[data-tab-name=\"one\"]');\n        var tabTwo = this.$('.tab[data-tab-name=\"two\"]');\n\n        assert.notOk(tabTwo.hasClass('active'), 'Second tab did not have active class');\n\n        component.setActiveTab('two');\n\n        assert.ok(tabTwo.hasClass('active'), 'Second tab now has active class');\n\n        assert.notOk(tabOne.hasClass('active'), 'First tab does not have active class');\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('getInitialTabName() returns the correct tab name', function (assert) {\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        assert.strictEqual(component.getInitialTabName(), 'one', 'First tab is initial tab by default');\n\n        component.set('initialTabName', 'two');\n\n        assert.strictEqual(component.getInitialTabName(), 'two', 'If initialTabName is set, it is returned');\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('updateContentHeight() updates tab content height when contentHeight changes', function (assert) {\n        var component = this.subject();\n\n        var initialHeight = this.$('.tab-content').height();\n        var newHeight = initialHeight + 300;\n\n        component.set('contentHeight', newHeight);\n\n        assert.strictEqual(this.$('.tab-content').height(), newHeight);\n    });\n\n    ember_qunit.test('activatePane() activates pane as expected', function (assert) {\n        assert.expect(2);\n\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        var done = assert.async();\n        var tabPaneA = this.$('.sl-tab-pane[data-tab-name=\"one\"]');\n\n        component.activatePane('one');\n\n        // queue assert after animation\n        tabPaneA.queue(function () {\n            assert.ok(tabPaneA.is(':visible'), 'Tab panel is visible after animation');\n\n            assert.ok(tabPaneA.hasClass('active'), 'Tab panel has active class');\n\n            done();\n        });\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('deactivatePane() deactivates pane as expected', function (assert) {\n        assert.expect(3);\n\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        var done = assert.async();\n        var tabPaneA = this.$('.sl-tab-pane[data-tab-name=\"one\"]');\n\n        component.deactivatePane(function () {\n            assert.ok('Callback passed to deactivatePane was called');\n\n            assert.ok(tabPaneA.is(':hidden'), 'Active panel was hidden');\n\n            assert.notOk(tabPaneA.hasClass('active'), 'Active panel no longer has active class');\n\n            done();\n        });\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('paneFor() returns the correct DOM element', function (assert) {\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        var tab = 'two';\n        var pane = component.paneFor(tab);\n\n        assert.ok(pane.is($('.tab-pane[data-tab-name=\"' + tab + '\"]')));\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('tabFor() returns the correct DOM element', function (assert) {\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        var tab = 'two';\n        var pane = component.tabFor(tab);\n\n        assert.ok(pane.is($('.tab[data-tab-name=\"' + tab + '\"]')));\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('tabAlignmentClass() returns the correct value', function (assert) {\n        var component = this.subject();\n\n        component.set('alignTabs', 'left');\n\n        assert.strictEqual(component.get('tabAlignmentClass'), 'sl-align-tabs-left', 'Correct string returned for value of left');\n\n        component.set('alignTabs', 'right');\n\n        assert.strictEqual(component.get('tabAlignmentClass'), 'sl-align-tabs-right', 'Correct string returned for value of right');\n\n        var spy = sinon['default'].spy(utils, 'warn');\n\n        component.set('alignTabs', 'Invalid value');\n        component.get('tabAlignmentClass');\n\n        assert.ok(spy.calledOnce, 'warn() was called when invalid alignment class was provided');\n\n        utils.warn.restore();\n    });\n\n    ember_qunit.test('contentHeight is set to an integer value when activatePane() is called', function (assert) {\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        component.activatePane('b');\n\n        assert.equal(Ember['default'].typeOf(component.get('contentHeight')), 'number');\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('activeTabName is set to correct value when activatePane() is called', function (assert) {\n        this.registry.register('template:test-template', template);\n\n        var component = this.subject({\n            templateName: 'test-template'\n        });\n\n        this.render();\n\n        component.activatePane('b');\n\n        assert.equal(component.get('activeTabName'), 'b');\n\n        this.registry.unregister('template:test-template');\n    });\n\n    ember_qunit.test('Observer keys are correct', function (assert) {\n        var component = this.subject();\n\n        var updateContentHeightKeys = ['contentHeight'];\n\n        assert.deepEqual(component.updateContentHeight.__ember_observes__, updateContentHeightKeys, 'Observer keys are correct for updateContentHeight()');\n    });\n\n});","define('dummy/tests/unit/components/sl-tab-panel-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-tab-panel-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-tab-panel-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-textarea-test', ['ember-qunit', 'sl-ember-components/mixins/sl-input-based', 'sl-ember-components/mixins/sl-tooltip-enabled', 'sl-ember-components/mixins/sl-component-input-id', 'sl-ember-components/components/sl-textarea'], function (ember_qunit, InputBasedMixin, TooltipEnabledMixin, ComponentInputId, sl_textarea) {\n\n    'use strict';\n\n    var Direction = {\n        BACKWARD: 'backward',\n        FORWARD: 'forward',\n        NONE: 'none'\n    };\n\n    var Wrap = {\n        HARD: 'hard',\n        SOFT: 'soft'\n    };\n\n    ember_qunit.moduleForComponent('sl-textarea', 'Unit | Component | sl textarea', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(InputBasedMixin['default'].detect(this.subject()), 'InputBased Mixin is present');\n\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject()), 'TooltipEnabled Mixin is present');\n\n        assert.ok(ComponentInputId['default'].detect(this.subject()), 'ComponentInputId Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.get('autofocus'), false, 'Default property \"autofocus\" is false');\n\n        assert.strictEqual(component.get('selectionDirection'), 'forward', 'Default property \"selectionDirection\" is forward');\n\n        assert.strictEqual(component.get('selectionEnd'), null, 'Default property \"selectionEnd\" is null');\n\n        assert.strictEqual(component.get('selectionStart'), null, 'Default property \"selectionStart\" is null');\n\n        assert.strictEqual(component.get('spellcheck'), false, 'Default property \"spellcheck\" is null');\n\n        assert.strictEqual(component.get('value'), null, 'Default property \"value\" is null');\n\n        assert.strictEqual(component.get('wrap'), 'soft', 'Default property \"wrap\" is null');\n\n        assert.deepEqual(sl_textarea.Wrap, Wrap, 'Wrap enum values are correct');\n\n        assert.deepEqual(sl_textarea.Direction, Direction, 'Direction enum values are correct');\n    });\n\n});","define('dummy/tests/unit/components/sl-textarea-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-textarea-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-textarea-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-tooltip-test', ['ember', 'ember-qunit', 'sl-ember-components/mixins/sl-tooltip-enabled'], function (Ember, ember_qunit, TooltipEnabledMixin) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-tooltip', 'Unit | Component | sl tooltip', {\n        unit: true\n    });\n\n    ember_qunit.test('Expected Mixins are present', function (assert) {\n        assert.ok(TooltipEnabledMixin['default'].detect(this.subject({ title: 'Tooltip Text' })), 'Expected Mixin is present');\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject({ title: 'test' });\n\n        assert.equal(component.get('tagName'), 'span');\n    });\n\n    ember_qunit.test('\"title\" property needs to be a string', function (assert) {\n        var _this = this;\n\n        var properties = Ember['default'].Object.create();\n\n        var callSubject = function callSubject() {\n            return _this.subject(properties);\n        };\n\n        // Empty Property\n\n        assert.throws(callSubject, 'Property was empty');\n\n        // Null Property\n\n        properties.set('title', null);\n\n        assert.throws(callSubject, 'Property was null');\n\n        // Number Property\n\n        properties.set('title', 3);\n\n        assert.throws(callSubject, 'Property was a number');\n\n        // Boolean Property\n\n        properties.set('title', true);\n\n        assert.throws(callSubject, 'Property was a boolean');\n\n        // Array Property\n\n        properties.set('title', []);\n\n        assert.throws(callSubject, 'Property was an array');\n\n        // Function Property\n\n        properties.set('title', function () {});\n\n        assert.throws(callSubject, 'Property was a function');\n\n        // Object Property\n\n        properties.set('title', {});\n\n        assert.throws(callSubject, 'Property was an object');\n\n        // Undefined Property\n\n        properties.set('title', undefined);\n\n        assert.throws(callSubject, 'Property was undefined');\n\n        // String Property\n\n        properties.set('title', 'Test title');\n\n        assert.ok(callSubject(), 'Property was a string');\n    });\n\n    ember_qunit.test('\"popover\" property needs to be a string or undefined', function (assert) {\n        var _this2 = this;\n\n        var properties = Ember['default'].Object.create({\n            title: 'Tooltip text'\n        });\n\n        var callSubject = function callSubject() {\n            return _this2.subject(properties);\n        };\n\n        // Null Property\n\n        properties.set('popover', null);\n\n        assert.throws(callSubject, 'Property was null');\n\n        // Number Property\n\n        properties.set('popover', 3);\n\n        assert.throws(callSubject, 'Property was a number');\n\n        // Boolean Property\n\n        properties.set('popover', true);\n\n        assert.throws(callSubject, 'Property was a number');\n\n        // Array Property\n\n        properties.set('popover', []);\n\n        assert.throws(callSubject, 'Property was an array');\n\n        // Function Property\n\n        properties.set('popover', function () {});\n\n        assert.throws(callSubject, 'Property was a function');\n\n        // Object Property\n\n        properties.set('popover', {});\n\n        assert.throws(callSubject, 'Property was an object');\n\n        // Undefined Property\n\n        // Delete previously populated popover property\n        delete properties.popover;\n\n        assert.ok(callSubject(), 'Property was undefined');\n\n        // String Property\n\n        properties.set('popover', 'Popover text');\n\n        assert.ok(callSubject(), 'Property was a string');\n    });\n\n});","define('dummy/tests/unit/components/sl-tooltip-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-tooltip-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/components/sl-tooltip-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/mixins/sl-component-input-id-test', ['ember', 'sl-ember-components/mixins/sl-component-input-id', 'qunit'], function (Ember, mixinUnderTest, qunit) {\n\n    'use strict';\n\n    qunit.module('Unit | Mixin | sl component input id');\n\n    qunit.test('Can be successfully mixed', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.ok(subject);\n    });\n\n    qunit.test('inputId is set on component', function (assert) {\n        var component = Ember['default'].Component.extend(mixinUnderTest['default']).create();\n\n        assert.strictEqual(component.get('inputId'), component.get('elementId') + '-input');\n    });\n\n    qunit.test('inputId value is preserved if it is already set', function (assert) {\n        var id = 'preset-id';\n        var component = Ember['default'].Component.extend(mixinUnderTest['default']).create({\n            inputId: id\n        });\n\n        assert.strictEqual(component.get('inputId'), id);\n    });\n\n});","define('dummy/tests/unit/mixins/sl-component-input-id-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins');\n  QUnit.test('unit/mixins/sl-component-input-id-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/sl-component-input-id-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/mixins/sl-input-based-test', ['ember', 'sl-ember-components/mixins/sl-input-based', 'qunit'], function (Ember, mixinUnderTest, qunit) {\n\n    'use strict';\n\n    qunit.module('Unit | Mixin | sl input based');\n\n    qunit.test('Successfully mixed', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.ok(subject);\n    });\n\n    qunit.test('Default values are set correctly', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.strictEqual(subject.get('disabled'), false, 'Disabled is false by default');\n\n        assert.strictEqual(subject.get('optional'), false, 'Optional is false by default');\n\n        assert.strictEqual(subject.get('name'), null, 'Name is null by default');\n\n        assert.strictEqual(subject.get('readonly'), false, 'Readonly is false by default');\n\n        assert.strictEqual(subject.get('required'), false, 'Required is false by default');\n    });\n\n    qunit.test('Class name bindings contain expected bindings', function (assert) {\n        var expectedClassNameBindings = ['disabled', 'optional', 'readonly', 'required'];\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.deepEqual(subject.get('classNameBindings'), expectedClassNameBindings, 'classNameBindings contains the expected class names');\n    });\n\n    qunit.test('readonlyString() returns expected value', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        subject.set('readonly', true);\n\n        assert.strictEqual(subject.get('readonlyString'), 'readonly', 'readonlyString() returns expected string when \"readonly\" is true');\n\n        subject.set('readonly', false);\n\n        assert.strictEqual(subject.get('readonlyString'), null, 'readonlyString() returns null when \"readonly\" is false');\n    });\n\n    qunit.test('Dependent keys are correct', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        var readonlyStringDependentKeys = ['readonly'];\n\n        assert.deepEqual(subject.readonlyString._dependentKeys, readonlyStringDependentKeys, 'Dependent keys are correct for readonlyString()');\n    });\n\n});","define('dummy/tests/unit/mixins/sl-input-based-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins');\n  QUnit.test('unit/mixins/sl-input-based-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/sl-input-based-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/mixins/sl-tooltip-enabled-test', ['ember', 'sl-ember-components/mixins/sl-tooltip-enabled', 'qunit', 'sinon'], function (Ember, mixinUnderTest, qunit, sinon) {\n\n    'use strict';\n\n    var temporaryData = undefined;\n    var jQueryMock = function jQueryMock() {\n        return {\n            attr: function attr(property, value) {\n                if (!value) {\n                    return temporaryData[property];\n                }\n\n                temporaryData[property] = value;\n            },\n\n            tooltip: function tooltip(value) {\n                temporaryData.tooltip = value;\n            },\n\n            popover: function popover(value) {\n                temporaryData.popover = value;\n            }\n        };\n    };\n\n    qunit.module('Unit | Mixin | sl tooltip enabled', {\n        beforeEach: function beforeEach() {\n            temporaryData = {};\n        }\n    });\n\n    qunit.test('Successfully mixed', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.ok(subject);\n    });\n\n    qunit.test('Default property values', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n\n        var subject = testObject.create();\n\n        assert.strictEqual(subject.get('dataTrigger'), null, 'dataTrigger is null');\n\n        assert.strictEqual(subject.get('title'), null, 'title is null');\n    });\n\n    qunit.skip('enable() - observes correct properties', function () {});\n\n    qunit.skip('enable() - listens to correct event', function () {\n        // Waiting to see if an easier way in 2.0\n    });\n\n    qunit.test('enable() - popover defined calls enablePopover()', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            popover: 'Popover Text'\n        });\n        var subject = testObject.create();\n\n        subject.enablePopover = sinon['default'].spy();\n        subject.enableTooltip = sinon['default'].spy();\n\n        subject.enable();\n\n        assert.ok(subject.enablePopover.calledOnce, 'enablePopover() was called');\n\n        assert.ok(!subject.enableTooltip.calledOnce, 'enableTooltip() was not called');\n\n        subject.enablePopover.reset();\n        subject.enableTooltip.reset();\n    });\n\n    qunit.test('enable() - title defined calls enableTooltip()', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            title: 'Tooltip Text'\n        });\n        var subject = testObject.create();\n\n        subject.enablePopover = sinon['default'].spy();\n        subject.enableTooltip = sinon['default'].spy();\n\n        subject.enable();\n\n        assert.ok(!subject.enablePopover.calledOnce, 'enablePopover() was not called');\n\n        assert.ok(subject.enableTooltip.calledOnce, 'enableTooltip() was called');\n\n        subject.enablePopover.reset();\n        subject.enableTooltip.reset();\n    });\n\n    qunit.test('enabledTooltip() - Renders tooltip', function (assert) {\n        var testTitle = 'Tooltip Text';\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            title: testTitle,\n            $: jQueryMock\n        });\n        var subject = testObject.create();\n\n        subject.enableTooltip();\n\n        assert.equal(temporaryData.tooltip.container, 'body', 'tooltip container is set to correct value');\n\n        assert.equal(temporaryData.tooltip.title, testTitle, 'tooltip title is set to correct value');\n    });\n\n    qunit.test('enabledTooltip() - Title is reset', function (assert) {\n        var testTitle = 'Tooltip Text';\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            title: testTitle,\n            $: jQueryMock\n        });\n        var subject = testObject.create();\n\n        subject.$().attr('data-original-title', 'to get past undefined check');\n        subject.enableTooltip();\n\n        assert.equal(temporaryData['data-original-title'], testTitle);\n    });\n\n    qunit.test('enablePopover() - Renders popover', function (assert) {\n        var testContent = 'Popover Text';\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            popover: testContent,\n            $: jQueryMock\n        });\n        var subject = testObject.create();\n\n        subject.enablePopover();\n\n        assert.equal(temporaryData.popover.content, testContent, 'popover content is set to correct value');\n\n        assert.equal(temporaryData.popover.placement, 'top', 'popover placement is set to correct value');\n    });\n\n    qunit.test('enablePopover() - Title is reset', function (assert) {\n        var testTitle = 'Popover Text';\n        var testContent = 'Popover Content';\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            title: testTitle,\n            popover: testContent,\n            $: jQueryMock\n        });\n        var subject = testObject.create();\n\n        subject.$().attr('data-original-title', 'to get past undefined check');\n        subject.enablePopover();\n\n        assert.equal(temporaryData['data-original-title'], testTitle);\n\n        assert.equal(temporaryData['data-content'], testContent);\n    });\n\n    qunit.test('dataTrigger property supports \"focus hover click\" values', function (assert) {\n        var testTitle = 'Popover Text';\n        var testContent = 'Popover Content';\n        var testDataTrigger = 'focus hover click';\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            title: testTitle,\n            popover: testContent,\n            dataTrigger: testDataTrigger,\n            $: jQueryMock\n        });\n        var subject = testObject.create();\n\n        subject.$().attr('data-original-title', 'to get past undefined check');\n\n        assert.strictEqual(subject.get('dataTrigger'), testDataTrigger, '\"dataTrigger\" is set to \"focus hover click\"');\n\n        subject.set('dataTrigger', 'focus');\n\n        assert.strictEqual(subject.get('dataTrigger'), 'focus', '\"dataTrigger\" is set to \"focus\"');\n\n        subject.set('dataTrigger', 'hover');\n\n        assert.strictEqual(subject.get('dataTrigger'), 'hover', '\"dataTrigger\" is set to \"hover\"');\n\n        subject.set('dataTrigger', 'click');\n\n        assert.strictEqual(subject.get('dataTrigger'), 'click', '\"dataTrigger\" is set to \"click\"');\n    });\n\n    qunit.test('Observer keys are correct', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n\n        var subject = testObject.create();\n\n        var enableKeys = ['popover', 'title'];\n\n        assert.deepEqual(subject.enable.__ember_observes__, enableKeys, 'Observer keys are correct for enable()');\n    });\n\n});","define('dummy/tests/unit/mixins/sl-tooltip-enabled-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins');\n  QUnit.test('unit/mixins/sl-tooltip-enabled-test.js should pass jshint', function(assert) { \n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/sl-tooltip-enabled-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"name\":\"sl-ember-components\",\"version\":\"0.10.0+d2b107b6\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjp+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1yrznBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnldvxfnwxgpevmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpptxqjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1hzjmxvnpvhnnfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzppqogdnrxhZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnzlyzjxlzcnmyjkpppLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACltKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfzraA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbppJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnjaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzhMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}